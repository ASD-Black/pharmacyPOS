/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pharmacy;

import classes.advancedCustomer;
import classes.dbConnection;
import classes.login;
import classes.searchItems;
import classes.editItemData;
import classes.storeItemData;
import classes.items_add_to_bill;
import classes.billSearch;
import classes.hr;
import classes.barcode;
import classes.cashBalancing;
import classes.quotation;
import classes.typesHandler;
import classes.userController;
import classes.userLogin;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.awt.Color;
import java.sql.ResultSet;
import javax.swing.JPanel;
import net.proteanit.sql.DbUtils;
import java.awt.Component;
import java.awt.List;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.InputStream;
import static java.lang.Double.parseDouble;
import static java.lang.Integer.parseInt;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javafx.application.Platform.exit;
import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import static javax.xml.datatype.DatatypeConstants.DATETIME;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import static net.sf.jasperreports.engine.export.ooxml.type.PptxFieldTypeEnum.DATETIME;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import static org.eclipse.persistence.sdo.SDOConstants.DATETIME;
import static org.hibernate.type.descriptor.sql.JdbcTypeFamilyInformation.Family.DATETIME;

public class MainManue1 extends javax.swing.JFrame {

    static Timer x;
    String Date ;
    Connection conn;
    private Connection coooon;
    
    byte[] input;
    byte[] keyBytes = "123456789987".getBytes();
    byte[] ivBytes = "input321456".getBytes();
    SecretKeySpec key = new SecretKeySpec(keyBytes, "DES");
    IvParameterSpec ivSpec = new IvParameterSpec(ivBytes);
    Cipher cipher;
    byte[] cipherText;
    int ctLength;
 
    
    public MainManue1() {
        
        dbConnection con = new dbConnection();
        conn = con.Connect();
        initComponents();
        showPanels();
        runDateTime();
        setIcon();
        setCashBalance();
        calculateBillItemValue();
        //tableColumnSettings();
               
        
        try {
            updateBill();
            } catch (ParseException ex) {
                Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }
    
    public void runDateTime() {
        x = new Timer(500, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Date d = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
                String t = sdf.format(d);
                lbl_main_time.setText(t);
                
                SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
                String da = sdf1.format(d);
                lbl_main_date.setText(da);
                
              //lbl_escapedtime.setText(getTimeDifference(d));
            }
        });
        x.start();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        subInitComp();

        org.jdesktop.layout.GroupLayout jPanel65Layout = new org.jdesktop.layout.GroupLayout(jPanel65);
        jPanel65.setLayout(jPanel65Layout);
        jPanel65Layout.setHorizontalGroup(
            jPanel65Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel65Layout.createSequentialGroup()
                .add(jPanel65Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel65Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 303, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel65Layout.createSequentialGroup()
                        .add(110, 110, 110)
                        .add(jButton118, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel65Layout.setVerticalGroup(
            jPanel65Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel65Layout.createSequentialGroup()
                .add(7, 7, 7)
                .add(jScrollPane61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 212, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton118, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout edit_edit_billed_Items2Layout = new org.jdesktop.layout.GroupLayout(edit_edit_billed_Items2.getContentPane());
        edit_edit_billed_Items2.getContentPane().setLayout(edit_edit_billed_Items2Layout);
        edit_edit_billed_Items2Layout.setHorizontalGroup(
            edit_edit_billed_Items2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel65, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        edit_edit_billed_Items2Layout.setVerticalGroup(
            edit_edit_billed_Items2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        edit_edit_billed_Items3.setAlwaysOnTop(true);

        jPanel66.setBackground(new java.awt.Color(255, 255, 255));

        jTable41.setAutoCreateRowSorter(true);
        jTable41.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable41.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"C000001", "Chamara", "Hettipola"},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Customa ID", "Name", "City"
            }
        ));
        jTable41.setGridColor(new java.awt.Color(255, 255, 255));
        jTable41.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable41.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable41MousePressed(evt);
            }
        });
        jScrollPane62.setViewportView(jTable41);
        if (jTable41.getColumnModel().getColumnCount() > 0) {
            jTable41.getColumnModel().getColumn(2).setResizable(false);
        }

        jButton120.setBackground(new java.awt.Color(255, 255, 255));
        jButton120.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton120.setText("Return");
        jButton120.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton120.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton120.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton120ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel66Layout = new org.jdesktop.layout.GroupLayout(jPanel66);
        jPanel66.setLayout(jPanel66Layout);
        jPanel66Layout.setHorizontalGroup(
            jPanel66Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel66Layout.createSequentialGroup()
                .add(jPanel66Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel66Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane62, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 303, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel66Layout.createSequentialGroup()
                        .add(110, 110, 110)
                        .add(jButton120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel66Layout.setVerticalGroup(
            jPanel66Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel66Layout.createSequentialGroup()
                .add(7, 7, 7)
                .add(jScrollPane62, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 212, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout edit_edit_billed_Items3Layout = new org.jdesktop.layout.GroupLayout(edit_edit_billed_Items3.getContentPane());
        edit_edit_billed_Items3.getContentPane().setLayout(edit_edit_billed_Items3Layout);
        edit_edit_billed_Items3Layout.setHorizontalGroup(
            edit_edit_billed_Items3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel66, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        edit_edit_billed_Items3Layout.setVerticalGroup(
            edit_edit_billed_Items3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        edit_edit_billed_Items4.setAlwaysOnTop(true);

        jPanel67.setBackground(new java.awt.Color(255, 255, 255));

        jButton121.setBackground(new java.awt.Color(255, 255, 255));
        jButton121.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton121.setText("Return");
        jButton121.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton121.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton121.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton121ActionPerformed(evt);
            }
        });

        jTextField149.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField149ActionPerformed(evt);
            }
        });

        jLabel319.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel319.setText("Return QTY :");

        org.jdesktop.layout.GroupLayout jPanel67Layout = new org.jdesktop.layout.GroupLayout(jPanel67);
        jPanel67.setLayout(jPanel67Layout);
        jPanel67Layout.setHorizontalGroup(
            jPanel67Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel67Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel319, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 77, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTextField149, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 29, Short.MAX_VALUE)
                .add(jButton121, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel67Layout.setVerticalGroup(
            jPanel67Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel67Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel67Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton121, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField149, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel319))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout edit_edit_billed_Items4Layout = new org.jdesktop.layout.GroupLayout(edit_edit_billed_Items4.getContentPane());
        edit_edit_billed_Items4.getContentPane().setLayout(edit_edit_billed_Items4Layout);
        edit_edit_billed_Items4Layout.setHorizontalGroup(
            edit_edit_billed_Items4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel67, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        edit_edit_billed_Items4Layout.setVerticalGroup(
            edit_edit_billed_Items4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                bgFocusLost(evt);
            }
        });
        bg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bgMouseClicked(evt);
            }
        });
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(64, 43, 100));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Calibri", 1, 34)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Computer");

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Calibri", 1, 34)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("E-Shop");

        btn_search.setBackground(new java.awt.Color(64, 43, 100));
        btn_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_searchMousePressed(evt);
            }
        });
        btn_search.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search.png"))); // NOI18N
        btn_search.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 14, 44, 30));

        jLabel8.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Search Items");
        btn_search.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 130, 32));

        btn_add.setBackground(new java.awt.Color(64, 43, 100));
        btn_add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_addMousePressed(evt);
            }
        });
        btn_add.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add_items.png"))); // NOI18N
        btn_add.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 44, -1));

        jLabel19.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Add Items");
        btn_add.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 90, 32));

        btn_billing.setBackground(new java.awt.Color(64, 43, 100));
        btn_billing.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_billingMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_billingMouseReleased(evt);
            }
        });
        btn_billing.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/bill_30px.png"))); // NOI18N
        btn_billing.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 44, -1));

        jLabel21.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Billing");
        btn_billing.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 50, 32));

        btn_bill_summ.setBackground(new java.awt.Color(64, 43, 100));
        btn_bill_summ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_bill_summMousePressed(evt);
            }
        });
        btn_bill_summ.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_bill_32.png"))); // NOI18N
        btn_bill_summ.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 44, -1));

        jLabel23.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Billing Sumary ");
        btn_bill_summ.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, -1, 32));

        btn_hr.setBackground(new java.awt.Color(64, 43, 100));
        btn_hr.setPreferredSize(new java.awt.Dimension(221, 41));
        btn_hr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_hrMousePressed(evt);
            }
        });
        btn_hr.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_staff_32.png"))); // NOI18N
        btn_hr.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 44, -1));

        jLabel25.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("HR");
        btn_hr.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 101, 32));

        jSeparator1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Calibri", 1, 34)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Solutions");

        jLabel107.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel107.setForeground(new java.awt.Color(255, 255, 255));
        jLabel107.setText("ASD Software Solutions");

        btn_hr2.setBackground(new java.awt.Color(64, 43, 100));
        btn_hr2.setPreferredSize(new java.awt.Dimension(221, 41));
        btn_hr2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_hr2MousePressed(evt);
            }
        });
        btn_hr2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel119.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel119.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_barcode_scanner_32.png"))); // NOI18N
        btn_hr2.add(jLabel119, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 44, -1));

        jLabel120.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel120.setForeground(new java.awt.Color(255, 255, 255));
        jLabel120.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel120.setText("Barcode");
        btn_hr2.add(jLabel120, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 101, 32));

        btn_billing1.setBackground(new java.awt.Color(64, 43, 100));
        btn_billing1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_billing1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_billing1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_billing1MouseReleased(evt);
            }
        });
        btn_billing1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel121.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel121.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/bill_30px.png"))); // NOI18N
        btn_billing1.add(jLabel121, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 44, -1));

        jLabel122.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel122.setForeground(new java.awt.Color(255, 255, 255));
        jLabel122.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel122.setText("Quick Billing");
        btn_billing1.add(jLabel122, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 110, 32));

        btn_hr4.setBackground(new java.awt.Color(64, 43, 100));
        btn_hr4.setPreferredSize(new java.awt.Dimension(221, 41));
        btn_hr4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_hr4MousePressed(evt);
            }
        });
        btn_hr4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel301.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel301.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_settings_32.png"))); // NOI18N
        btn_hr4.add(jLabel301, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 44, -1));

        jLabel302.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel302.setForeground(new java.awt.Color(255, 255, 255));
        jLabel302.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel302.setText("Settings");
        btn_hr4.add(jLabel302, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 101, 32));

        jLabel125.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel125.setForeground(new java.awt.Color(255, 255, 255));
        jLabel125.setText("Total :");

        jLabel140.setBackground(new java.awt.Color(255, 255, 255));
        jLabel140.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel140.setForeground(new java.awt.Color(255, 255, 255));
        jLabel140.setText("Total ");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, btn_search, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, btn_add, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, btn_billing, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, btn_bill_summ, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, btn_hr, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, btn_hr2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, btn_billing1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, btn_hr4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(jLabel6)
                        .add(54, 54, 54))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(jLabel107)
                        .add(33, 33, 33))))
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jSeparator1)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel9)
                                .add(0, 0, Short.MAX_VALUE))))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(44, 44, 44)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel1)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel125, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jLabel140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(8, 8, 8)))
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(11, 11, 11)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(13, 13, 13)
                .add(btn_search, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(btn_add, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(btn_billing, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(btn_billing1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(btn_bill_summ, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(btn_hr, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(btn_hr2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 27, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel125)
                    .add(jLabel140))
                .add(30, 30, 30)
                .add(btn_hr4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(29, 29, 29)
                .add(jLabel107)
                .addContainerGap())
        );

        bg.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 770));

        jPanel2.setBackground(new java.awt.Color(110, 89, 222));

        jPanel13.setBackground(new java.awt.Color(110, 89, 222));

        jLabel74.setFont(new java.awt.Font("Calibri", 1, 26)); // NOI18N
        jLabel74.setForeground(new java.awt.Color(255, 255, 255));
        jLabel74.setText("ADD Items");

        org.jdesktop.layout.GroupLayout jPanel13Layout = new org.jdesktop.layout.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel13Layout.createSequentialGroup()
                .add(78, 78, 78)
                .add(jLabel74, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 151, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(264, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel74, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
        );

        jPanel14.setBackground(new java.awt.Color(110, 89, 222));

        jLabel75.setFont(new java.awt.Font("Calibri", 1, 26)); // NOI18N
        jLabel75.setForeground(new java.awt.Color(255, 255, 255));
        jLabel75.setText("Billing");

        org.jdesktop.layout.GroupLayout jPanel14Layout = new org.jdesktop.layout.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel14Layout.createSequentialGroup()
                .add(78, 78, 78)
                .add(jLabel75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(320, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel75, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
        );

        jPanel15.setBackground(new java.awt.Color(110, 89, 222));

        jLabel76.setFont(new java.awt.Font("Calibri", 1, 26)); // NOI18N
        jLabel76.setForeground(new java.awt.Color(255, 255, 255));
        jLabel76.setText("Bill Summary And Report");

        org.jdesktop.layout.GroupLayout jPanel15Layout = new org.jdesktop.layout.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel15Layout.createSequentialGroup()
                .add(78, 78, 78)
                .add(jLabel76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 283, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(132, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel76, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
        );

        jPanel16.setBackground(new java.awt.Color(110, 89, 222));

        jLabel77.setFont(new java.awt.Font("Calibri", 1, 26)); // NOI18N
        jLabel77.setForeground(new java.awt.Color(255, 255, 255));
        jLabel77.setText("Employees And Customers");

        org.jdesktop.layout.GroupLayout jPanel16Layout = new org.jdesktop.layout.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel16Layout.createSequentialGroup()
                .add(78, 78, 78)
                .add(jLabel77)
                .addContainerGap(129, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel77, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
        );

        jPanel10.setBackground(new java.awt.Color(110, 89, 222));

        jLabel78.setFont(new java.awt.Font("Calibri", 1, 26)); // NOI18N
        jLabel78.setForeground(new java.awt.Color(255, 255, 255));
        jLabel78.setText("Search Items");

        org.jdesktop.layout.GroupLayout jPanel10Layout = new org.jdesktop.layout.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel10Layout.createSequentialGroup()
                .add(78, 78, 78)
                .add(jLabel78, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 151, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(264, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel78, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
        );

        jPanel23.setBackground(new java.awt.Color(110, 89, 222));

        jLabel112.setFont(new java.awt.Font("Calibri", 1, 26)); // NOI18N
        jLabel112.setForeground(new java.awt.Color(255, 255, 255));
        jLabel112.setText("Barcode Printing");

        org.jdesktop.layout.GroupLayout jPanel23Layout = new org.jdesktop.layout.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel23Layout.createSequentialGroup()
                .add(78, 78, 78)
                .add(jLabel112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 229, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(186, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel112, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
        );

        jButton64.setBackground(new java.awt.Color(255, 255, 255));
        jButton64.setForeground(new java.awt.Color(102, 89, 222));
        jButton64.setText("Edit Balance");
        jButton64.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton64.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton64ActionPerformed(evt);
            }
        });

        jPanel55.setBackground(new java.awt.Color(110, 89, 222));

        jLabel304.setFont(new java.awt.Font("Calibri", 1, 26)); // NOI18N
        jLabel304.setForeground(new java.awt.Color(255, 255, 255));
        jLabel304.setText("Quick Bill");

        org.jdesktop.layout.GroupLayout jPanel55Layout = new org.jdesktop.layout.GroupLayout(jPanel55);
        jPanel55.setLayout(jPanel55Layout);
        jPanel55Layout.setHorizontalGroup(
            jPanel55Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel55Layout.createSequentialGroup()
                .add(78, 78, 78)
                .add(jLabel304, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 151, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(264, Short.MAX_VALUE))
        );
        jPanel55Layout.setVerticalGroup(
            jPanel55Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel304, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
        );

        jPanel56.setBackground(new java.awt.Color(110, 89, 222));

        jLabel309.setFont(new java.awt.Font("Calibri", 1, 26)); // NOI18N
        jLabel309.setForeground(new java.awt.Color(255, 255, 255));
        jLabel309.setText("Settings");

        org.jdesktop.layout.GroupLayout jPanel56Layout = new org.jdesktop.layout.GroupLayout(jPanel56);
        jPanel56.setLayout(jPanel56Layout);
        jPanel56Layout.setHorizontalGroup(
            jPanel56Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel56Layout.createSequentialGroup()
                .add(78, 78, 78)
                .add(jLabel309, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 151, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(264, Short.MAX_VALUE))
        );
        jPanel56Layout.setVerticalGroup(
            jPanel56Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel309, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(967, Short.MAX_VALUE)
                .add(jButton64)
                .add(32, 32, 32))
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(587, Short.MAX_VALUE)))
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(587, Short.MAX_VALUE)))
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(587, Short.MAX_VALUE)))
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(587, Short.MAX_VALUE)))
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(587, Short.MAX_VALUE)))
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(587, Short.MAX_VALUE)))
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(587, Short.MAX_VALUE)))
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(587, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(27, 27, 27)
                .add(jButton64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        bg.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, 1090, 70));

        manueExit.setBackground(new java.awt.Color(64, 43, 100));
        manueExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                manueExitMousePressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("X");

        org.jdesktop.layout.GroupLayout manueExitLayout = new org.jdesktop.layout.GroupLayout(manueExit);
        manueExit.setLayout(manueExitLayout);
        manueExitLayout.setHorizontalGroup(
            manueExitLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );
        manueExitLayout.setVerticalGroup(
            manueExitLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bg.add(manueExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1330, 0, 40, 40));

        manueMinimize.setBackground(new java.awt.Color(110, 89, 222));
        manueMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                manueMinimizeMousePressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("-");

        org.jdesktop.layout.GroupLayout manueMinimizeLayout = new org.jdesktop.layout.GroupLayout(manueMinimize);
        manueMinimize.setLayout(manueMinimizeLayout);
        manueMinimizeLayout.setHorizontalGroup(
            manueMinimizeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );
        manueMinimizeLayout.setVerticalGroup(
            manueMinimizeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, Short.MAX_VALUE)
        );

        bg.add(manueMinimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(1290, 0, 40, 40));

        pnl_searchItm.setBackground(new java.awt.Color(255, 255, 255));

        txt_search_text.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_search_text.setForeground(new java.awt.Color(51, 51, 51));
        txt_search_text.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_search_text.setSelectionColor(new java.awt.Color(110, 89, 222));
        txt_search_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_search_textKeyPressed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 51, 51));
        jButton1.setText("search");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jButton1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tbl_items_search.setAutoCreateRowSorter(true);
        tbl_items_search.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tbl_items_search.setForeground(new java.awt.Color(51, 51, 51));
        tbl_items_search.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8"
            }
        ));
        tbl_items_search.setGridColor(new java.awt.Color(255, 255, 255));
        tbl_items_search.setRowHeight(20);
        tbl_items_search.setSelectionBackground(new java.awt.Color(110, 89, 222));
        tbl_items_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_items_searchMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbl_items_searchMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_items_search);
        if (tbl_items_search.getColumnModel().getColumnCount() > 0) {
            tbl_items_search.getColumnModel().getColumn(2).setHeaderValue("Title 3");
            tbl_items_search.getColumnModel().getColumn(3).setHeaderValue("Title 4");
            tbl_items_search.getColumnModel().getColumn(4).setHeaderValue("Title 5");
            tbl_items_search.getColumnModel().getColumn(5).setHeaderValue("Title 6");
            tbl_items_search.getColumnModel().getColumn(6).setHeaderValue("Title 7");
            tbl_items_search.getColumnModel().getColumn(7).setHeaderValue("Title 8");
        }

        jButton2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton2.setText("edit details");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton2MousePressed(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        com_box_searchTyp.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        com_box_searchTyp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item Name", "Item Code", "Category" }));
        com_box_searchTyp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        com_box_searchTyp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        com_box_searchTyp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                com_box_searchTypActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton4.setText("Delete");
        jButton4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        tbl_items_search1.setAutoCreateRowSorter(true);
        tbl_items_search1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tbl_items_search1.setForeground(new java.awt.Color(51, 51, 51));
        tbl_items_search1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "SN", "Stock"
            }
        ));
        tbl_items_search1.setGridColor(new java.awt.Color(255, 255, 255));
        tbl_items_search1.setRowHeight(20);
        tbl_items_search1.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jScrollPane55.setViewportView(tbl_items_search1);

        jButton101.setBackground(new java.awt.Color(255, 255, 255));
        jButton101.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton101.setText("Delete");
        jButton101.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton101.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton101.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton101ActionPerformed(evt);
            }
        });

        txt_search_text3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_search_text3.setForeground(new java.awt.Color(51, 51, 51));
        txt_search_text3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_search_text3.setSelectionColor(new java.awt.Color(110, 89, 222));
        txt_search_text3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_search_text3KeyPressed(evt);
            }
        });

        jLabel35.setBackground(new java.awt.Color(255, 255, 255));
        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel35.setText("Add New Serial Number");

        org.jdesktop.layout.GroupLayout pnl_searchItmLayout = new org.jdesktop.layout.GroupLayout(pnl_searchItm);
        pnl_searchItm.setLayout(pnl_searchItmLayout);
        pnl_searchItmLayout.setHorizontalGroup(
            pnl_searchItmLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnl_searchItmLayout.createSequentialGroup()
                .add(pnl_searchItmLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnl_searchItmLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(pnl_searchItmLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(pnl_searchItmLayout.createSequentialGroup()
                                .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(26, 26, 26)
                                .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 737, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(pnl_searchItmLayout.createSequentialGroup()
                        .add(21, 21, 21)
                        .add(com_box_searchTyp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(76, 76, 76)
                        .add(txt_search_text, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 230, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(70, 70, 70)
                        .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(18, 18, 18)
                .add(pnl_searchItmLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, pnl_searchItmLayout.createSequentialGroup()
                        .add(0, 175, Short.MAX_VALUE)
                        .add(jButton101, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(pnl_searchItmLayout.createSequentialGroup()
                        .add(pnl_searchItmLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(txt_search_text3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 230, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel35))
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnl_searchItmLayout.setVerticalGroup(
            pnl_searchItmLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnl_searchItmLayout.createSequentialGroup()
                .add(pnl_searchItmLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnl_searchItmLayout.createSequentialGroup()
                        .add(60, 60, 60)
                        .add(pnl_searchItmLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(com_box_searchTyp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(txt_search_text, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(30, 30, 30))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, pnl_searchItmLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel35)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(txt_search_text3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .add(pnl_searchItmLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 469, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jScrollPane55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 469, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(pnl_searchItmLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton101, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        bg.add(pnl_searchItm, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 1070, 660));

        pnl_addItms.setBackground(new java.awt.Color(255, 255, 255));

        tbl_addItems.setAutoCreateRowSorter(true);
        tbl_addItems.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tbl_addItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"D00001", "Abcdef", "hemas", "10", "8", "2020-08-30", "100"},
                {"D00002", "Ghfyyr", "ASD", "15", "12", "2022-03-25", null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Company", "Retail Price", "HallSale Price", "Exp Date", "Qty"
            }
        ));
        tbl_addItems.setGridColor(new java.awt.Color(255, 255, 255));
        tbl_addItems.setRowHeight(20);
        tbl_addItems.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jScrollPane2.setViewportView(tbl_addItems);
        if (tbl_addItems.getColumnModel().getColumnCount() > 0) {
            tbl_addItems.getColumnModel().getColumn(0).setResizable(false);
            tbl_addItems.getColumnModel().getColumn(1).setResizable(false);
            tbl_addItems.getColumnModel().getColumn(2).setResizable(false);
            tbl_addItems.getColumnModel().getColumn(3).setResizable(false);
            tbl_addItems.getColumnModel().getColumn(4).setResizable(false);
            tbl_addItems.getColumnModel().getColumn(5).setResizable(false);
            tbl_addItems.getColumnModel().getColumn(6).setResizable(false);
        }

        txt_add_wPrice.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_add_wPrice.setForeground(new java.awt.Color(51, 51, 51));
        txt_add_wPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_add_wPrice.setSelectionColor(new java.awt.Color(110, 89, 222));
        txt_add_wPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_add_wPriceKeyTyped(evt);
            }
        });

        jLabel28.setBackground(new java.awt.Color(255, 255, 255));
        jLabel28.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel28.setText("Cost Price (Rs)");

        txt_add_itemName.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_add_itemName.setForeground(new java.awt.Color(51, 51, 51));
        txt_add_itemName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_add_itemName.setSelectionColor(new java.awt.Color(110, 89, 222));
        txt_add_itemName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_add_itemNameKeyPressed(evt);
            }
        });

        jLabel29.setBackground(new java.awt.Color(255, 255, 255));
        jLabel29.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel29.setText("Serial Number");

        jLabel30.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel30.setText("Retail Price (Rs)");

        txt_add_retailPrice.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_add_retailPrice.setForeground(new java.awt.Color(51, 51, 51));
        txt_add_retailPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_add_retailPrice.setSelectionColor(new java.awt.Color(110, 89, 222));
        txt_add_retailPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_add_retailPriceKeyTyped(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel31.setText("Qty");

        txt_add_qty.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_add_qty.setForeground(new java.awt.Color(51, 51, 51));
        txt_add_qty.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_add_qty.setSelectionColor(new java.awt.Color(110, 89, 222));
        txt_add_qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_add_qtyKeyTyped(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(51, 51, 51));
        jButton5.setText("Save");
        jButton5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(51, 51, 51));
        jButton6.setText("Reset");
        jButton6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel50.setBackground(new java.awt.Color(255, 255, 255));
        jLabel50.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel50.setText("Item Name");

        txt_add_packSize.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_add_packSize.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_add_packSize.setSelectionColor(new java.awt.Color(110, 89, 222));

        jLabel91.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel91.setText("Warranty (Months)");

        txt_add_qty1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_add_qty1.setForeground(new java.awt.Color(51, 51, 51));
        txt_add_qty1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_add_qty1.setSelectionColor(new java.awt.Color(110, 89, 222));
        txt_add_qty1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_add_qty1KeyTyped(evt);
            }
        });

        com_box_searchTyp1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        com_box_searchTyp1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        jLabel92.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel92.setText("Type");

        jButton20.setBackground(new java.awt.Color(255, 255, 255));
        jButton20.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton20.setForeground(new java.awt.Color(51, 51, 51));
        jButton20.setText("Add Type");
        jButton20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton20.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jTable31.setAutoCreateRowSorter(true);
        jTable31.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ));
        jTable31.setGridColor(new java.awt.Color(255, 255, 255));
        jTable31.setRowHeight(20);
        jTable31.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable31MousePressed(evt);
            }
        });
        jTable31.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable31KeyPressed(evt);
            }
        });
        jScrollPane51.setViewportView(jTable31);

        jLabel311.setBackground(new java.awt.Color(255, 255, 255));
        jLabel311.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel311.setText("Item Code  :");

        jLabel313.setBackground(new java.awt.Color(255, 255, 255));
        jLabel313.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel313.setText("Item Name");

        jButton100.setBackground(new java.awt.Color(255, 255, 255));
        jButton100.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton100.setForeground(new java.awt.Color(51, 51, 51));
        jButton100.setText("Delete");
        jButton100.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton100.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton100ActionPerformed(evt);
            }
        });

        txt_add_qty2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_add_qty2.setForeground(new java.awt.Color(51, 51, 51));
        txt_add_qty2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_add_qty2.setSelectionColor(new java.awt.Color(110, 89, 222));
        txt_add_qty2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_add_qty2KeyTyped(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel37.setText("Supplier");

        org.jdesktop.layout.GroupLayout pnl_addItmsLayout = new org.jdesktop.layout.GroupLayout(pnl_addItms);
        pnl_addItms.setLayout(pnl_addItmsLayout);
        pnl_addItmsLayout.setHorizontalGroup(
            pnl_addItmsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnl_addItmsLayout.createSequentialGroup()
                .add(pnl_addItmsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnl_addItmsLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1050, Short.MAX_VALUE))
                    .add(pnl_addItmsLayout.createSequentialGroup()
                        .add(20, 20, 20)
                        .add(pnl_addItmsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(pnl_addItmsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(pnl_addItmsLayout.createSequentialGroup()
                                    .add(com_box_searchTyp1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 146, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(jButton20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(pnl_addItmsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(txt_add_qty1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 267, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel91)))
                            .add(txt_add_retailPrice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 267, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel30)
                            .add(pnl_addItmsLayout.createSequentialGroup()
                                .add(jLabel311)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jLabel313, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 113, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jLabel92))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(pnl_addItmsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnl_addItmsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jLabel28)
                                .add(txt_add_wPrice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 267, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(pnl_addItmsLayout.createSequentialGroup()
                                    .add(55, 55, 55)
                                    .add(jButton6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(18, 18, 18)
                                    .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(txt_add_packSize, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 267, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jLabel50)
                                .add(txt_add_qty, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 267, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jLabel31))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnl_addItmsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(txt_add_qty2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 267, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jLabel37)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(pnl_addItmsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnl_addItmsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(txt_add_itemName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 267, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jLabel29)
                                .add(jScrollPane51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 353, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        pnl_addItmsLayout.setVerticalGroup(
            pnl_addItmsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnl_addItmsLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .add(pnl_addItmsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(pnl_addItmsLayout.createSequentialGroup()
                        .add(jLabel50)
                        .add(5, 5, 5)
                        .add(pnl_addItmsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(txt_add_packSize, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel311)
                            .add(jLabel313)))
                    .add(pnl_addItmsLayout.createSequentialGroup()
                        .add(jLabel29)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txt_add_itemName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(pnl_addItmsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnl_addItmsLayout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(pnl_addItmsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(pnl_addItmsLayout.createSequentialGroup()
                                .add(jScrollPane51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 190, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(9, 9, 9)
                                .add(jButton100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(pnl_addItmsLayout.createSequentialGroup()
                                .add(jLabel28)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(txt_add_wPrice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jLabel31)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(txt_add_qty, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jLabel37)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(txt_add_qty2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(pnl_addItmsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(jButton6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                    .add(pnl_addItmsLayout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(jLabel30)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txt_add_retailPrice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jLabel91)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txt_add_qty1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jLabel92)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pnl_addItmsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(com_box_searchTyp1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 19, Short.MAX_VALUE)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 302, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(19, 19, 19))
        );

        bg.add(pnl_addItms, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 1070, 660));

        pnl_billing.setBackground(new java.awt.Color(255, 255, 255));

        jTable3.setAutoCreateRowSorter(true);
        jTable3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Company", "Retail Price", "HallSale Price", "Exp Date", "Qty"
            }
        ));
        jTable3.setGridColor(new java.awt.Color(255, 255, 255));
        jTable3.setRowHeight(20);
        jTable3.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setResizable(false);
            jTable3.getColumnModel().getColumn(1).setResizable(false);
            jTable3.getColumnModel().getColumn(2).setResizable(false);
            jTable3.getColumnModel().getColumn(3).setResizable(false);
            jTable3.getColumnModel().getColumn(4).setResizable(false);
            jTable3.getColumnModel().getColumn(5).setResizable(false);
            jTable3.getColumnModel().getColumn(6).setResizable(false);
        }

        jButton7.setBackground(new java.awt.Color(255, 255, 255));
        jButton7.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jButton7.setText("Add Items");
        jButton7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton7MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton7MouseReleased(evt);
            }
        });
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel46.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel46.setText("Bill ID   :");

        jLabel47.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel47.setText("B00001");

        jTextField4.setEditable(false);
        jTextField4.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField4.setSelectionColor(new java.awt.Color(110, 89, 222));
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel10.setText("Customer ID");

        jLabel11.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel11.setText("Sales Rep ID");

        jTextField5.setEditable(false);
        jTextField5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField5.setSelectionColor(new java.awt.Color(110, 89, 222));
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jLabel41.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel41.setText("Total");

        jTextField7.setEditable(false);
        jTextField7.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField7.setSelectionColor(new java.awt.Color(110, 89, 222));
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(255, 255, 255));
        jButton8.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jButton8.setText("Submit Invoice");
        jButton8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton8MousePressed(evt);
            }
        });
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"E000001", "Nimal"},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Rap ID", "Name"
            }
        ));
        jTable2.setGridColor(new java.awt.Color(255, 255, 255));
        jTable2.setRowHeight(20);
        jTable2.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable2MousePressed(evt);
            }
        });
        jScrollPane6.setViewportView(jTable2);

        jTable5.setAutoCreateRowSorter(true);
        jTable5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"C000001", "Chamara", "Hettipola"},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Customa ID", "Name", "City"
            }
        ));
        jTable5.setGridColor(new java.awt.Color(255, 255, 255));
        jTable5.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable5MousePressed(evt);
            }
        });
        jScrollPane7.setViewportView(jTable5);
        if (jTable5.getColumnModel().getColumnCount() > 0) {
            jTable5.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel44.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel44.setText("Sales Rep ");

        jLabel45.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel45.setText("Customer ");

        jButton23.setBackground(new java.awt.Color(255, 255, 255));
        jButton23.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton23.setText("Delete  Product");
        jButton23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton23.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jTextField30.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField30.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField30.setSelectionColor(new java.awt.Color(110, 89, 222));
        jTextField30.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTextField30ComponentAdded(evt);
            }
        });
        jTextField30.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                jTextField30HierarchyChanged(evt);
            }
        });
        jTextField30.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTextField30AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jTextField30.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextField30InputMethodTextChanged(evt);
            }
        });
        jTextField30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField30ActionPerformed(evt);
            }
        });

        jButton21.setBackground(new java.awt.Color(255, 255, 255));
        jButton21.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jButton21.setText("Quick Invoice");
        jButton21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton21.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton21MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton21MouseReleased(evt);
            }
        });
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jLabel53.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel53.setText("Discount (Rs)");

        jTextField8.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField8.setText("0");
        jTextField8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField8.setSelectionColor(new java.awt.Color(110, 89, 222));
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        jCheckBox2.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jCheckBox2.setSelected(true);
        jCheckBox2.setText("Credit Balance");

        jTextArea16.setColumns(20);
        jTextArea16.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextArea16.setLineWrap(true);
        jTextArea16.setRows(5);
        jTextArea16.setWrapStyleWord(true);
        jTextArea16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jScrollPane43.setViewportView(jTextArea16);

        jLabel267.setBackground(new java.awt.Color(255, 255, 255));
        jLabel267.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel267.setText("Discription");

        org.jdesktop.layout.GroupLayout pnl_billingLayout = new org.jdesktop.layout.GroupLayout(pnl_billing);
        pnl_billing.setLayout(pnl_billingLayout);
        pnl_billingLayout.setHorizontalGroup(
            pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnl_billingLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnl_billingLayout.createSequentialGroup()
                        .add(pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(pnl_billingLayout.createSequentialGroup()
                                .add(jLabel46)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel47)
                                .add(0, 0, Short.MAX_VALUE))
                            .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1050, Short.MAX_VALUE))
                        .addContainerGap())
                    .add(pnl_billingLayout.createSequentialGroup()
                        .add(pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(pnl_billingLayout.createSequentialGroup()
                                .add(pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jTextField7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel41)
                                    .add(pnl_billingLayout.createSequentialGroup()
                                        .add(pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jLabel11)
                                            .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .add(18, 18, 18)
                                        .add(pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(jLabel10)))
                                    .add(jTextField8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel53)
                                    .add(jCheckBox2))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jButton7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 228, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jScrollPane43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 298, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel267)))
                            .add(pnl_billingLayout.createSequentialGroup()
                                .add(jButton8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 228, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jButton21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 228, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(0, 0, Short.MAX_VALUE)))
                        .add(pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(pnl_billingLayout.createSequentialGroup()
                                .add(pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 167, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel44))
                                .add(18, 18, 18)
                                .add(pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jScrollPane7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 224, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(pnl_billingLayout.createSequentialGroup()
                                        .add(jLabel45)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jTextField30)
                                        .addContainerGap())))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnl_billingLayout.createSequentialGroup()
                                .add(jButton23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 172, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
        );
        pnl_billingLayout.setVerticalGroup(
            pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnl_billingLayout.createSequentialGroup()
                .add(pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel46)
                    .add(jLabel47))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 267, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnl_billingLayout.createSequentialGroup()
                        .add(pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel10)
                            .add(jLabel11)
                            .add(jLabel267))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(pnl_billingLayout.createSequentialGroup()
                                .add(jScrollPane43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 126, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jButton7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(pnl_billingLayout.createSequentialGroup()
                                .add(pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(20, 20, 20)
                                .add(jLabel41)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jTextField7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jLabel53)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jTextField8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(22, 22, 22)
                                .add(jCheckBox2)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 27, Short.MAX_VALUE)
                                .add(pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jButton8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jButton21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                    .add(pnl_billingLayout.createSequentialGroup()
                        .add(jButton23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(pnl_billingLayout.createSequentialGroup()
                                .add(16, 16, 16)
                                .add(pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel44)
                                    .add(jLabel45)))
                            .add(jTextField30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(6, 6, 6)
                        .add(pnl_billingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .add(jScrollPane7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 167, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(20, 20, 20))
        );

        bg.add(pnl_billing, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 1070, 660));

        pnl_billingSumm.setBackground(new java.awt.Color(255, 255, 255));

        jLabel48.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel48.setText("Search By");

        jComboBox2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Invoice No", "Customer", "Customer & Date", "Date", "Serial Number" }));
        jComboBox2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jTextField24.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField24.setSelectionColor(new java.awt.Color(110, 89, 222));

        jButton9.setBackground(new java.awt.Color(255, 255, 255));
        jButton9.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton9.setText("Search");
        jButton9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jTable4.setAutoCreateRowSorter(true);
        jTable4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"D00001", null, "hemas", "10", "8", "2020-08-30", "100", null, null, null},
                {"D00002", null, "ASD", "15", "12", "2022-03-25", null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Date", "Company", "Retail Price", "HallSale Price", "Exp Date", "Qty", "Title 8", "Title 9", "Title 10"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable4.setGridColor(new java.awt.Color(255, 255, 255));
        jTable4.setRowHeight(20);
        jTable4.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jScrollPane4.setViewportView(jTable4);
        if (jTable4.getColumnModel().getColumnCount() > 0) {
            jTable4.getColumnModel().getColumn(0).setResizable(false);
            jTable4.getColumnModel().getColumn(1).setResizable(false);
            jTable4.getColumnModel().getColumn(1).setPreferredWidth(300);
            jTable4.getColumnModel().getColumn(2).setResizable(false);
            jTable4.getColumnModel().getColumn(3).setResizable(false);
            jTable4.getColumnModel().getColumn(4).setResizable(false);
            jTable4.getColumnModel().getColumn(5).setResizable(false);
            jTable4.getColumnModel().getColumn(6).setResizable(false);
        }

        jButton24.setBackground(new java.awt.Color(255, 255, 255));
        jButton24.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton24.setText("Print Invoice");
        jButton24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jButton26.setBackground(new java.awt.Color(255, 255, 255));
        jButton26.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton26.setText("Calculate Profite");
        jButton26.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jButton55.setBackground(new java.awt.Color(255, 255, 255));
        jButton55.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton55.setText("Warranty");
        jButton55.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton55ActionPerformed(evt);
            }
        });

        jButton56.setBackground(new java.awt.Color(255, 255, 255));
        jButton56.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton56.setText("Return Items");
        jButton56.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton56ActionPerformed(evt);
            }
        });

        jButton70.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton70.setText("Edit Invoice");
        jButton70.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton70ActionPerformed(evt);
            }
        });

        jButton80.setBackground(new java.awt.Color(255, 255, 255));
        jButton80.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton80.setText("Edit Cheque Invoice");
        jButton80.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton80ActionPerformed(evt);
            }
        });

        jButton81.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton81.setText("Edit Credit Invoice");
        jButton81.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton81ActionPerformed(evt);
            }
        });

        jLabel201.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel201.setText("Search By");

        jComboBox10.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cheque", "Credit", "Credit Advanced", "Cash", "Cash Advanced", "Quick Invoice" }));
        jComboBox10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        jButton19.setBackground(new java.awt.Color(255, 255, 255));
        jButton19.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton19.setText("Search");
        jButton19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        dChooser_edt_expDate1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        dChooser_edt_expDate1.setForeground(new java.awt.Color(51, 51, 51));
        dChooser_edt_expDate1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        dChooser_edt_expDate2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        dChooser_edt_expDate2.setForeground(new java.awt.Color(51, 51, 51));
        dChooser_edt_expDate2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        jLabel314.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel314.setText("From");

        jLabel315.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel315.setText("To");

        org.jdesktop.layout.GroupLayout pnl_billingSummLayout = new org.jdesktop.layout.GroupLayout(pnl_billingSumm);
        pnl_billingSumm.setLayout(pnl_billingSummLayout);
        pnl_billingSummLayout.setHorizontalGroup(
            pnl_billingSummLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnl_billingSummLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnl_billingSummLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1050, Short.MAX_VALUE)
                    .add(pnl_billingSummLayout.createSequentialGroup()
                        .add(jButton26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(50, 50, 50)
                        .add(jButton81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton56)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButton70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 126, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButton55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(pnl_billingSummLayout.createSequentialGroup()
                        .add(pnl_billingSummLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(pnl_billingSummLayout.createSequentialGroup()
                                .add(jLabel201)
                                .add(18, 18, 18)
                                .add(jComboBox10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(pnl_billingSummLayout.createSequentialGroup()
                                .add(jLabel48)
                                .add(18, 18, 18)
                                .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(pnl_billingSummLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(pnl_billingSummLayout.createSequentialGroup()
                                        .add(55, 55, 55)
                                        .add(jButton19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, pnl_billingSummLayout.createSequentialGroup()
                                        .add(18, 18, 18)
                                        .add(jTextField24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 149, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .add(18, 18, 18)
                                .add(jLabel314)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(dChooser_edt_expDate1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 146, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(33, 33, 33)
                                .add(jLabel315)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(dChooser_edt_expDate2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 146, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(pnl_billingSummLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        pnl_billingSummLayout.setVerticalGroup(
            pnl_billingSummLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnl_billingSummLayout.createSequentialGroup()
                .add(pnl_billingSummLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnl_billingSummLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(pnl_billingSummLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(dChooser_edt_expDate1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(dChooser_edt_expDate2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(pnl_billingSummLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel48)
                                .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jTextField24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jLabel314)
                                .add(jLabel315)))
                        .add(18, 18, 18)
                        .add(pnl_billingSummLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel201)
                            .add(jComboBox10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 13, Short.MAX_VALUE))
                    .add(pnl_billingSummLayout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jButton24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 474, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(pnl_billingSummLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton81, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jButton80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(28, 28, 28))
        );

        bg.add(pnl_billingSumm, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 1070, 660));

        pnl_hr.setBackground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jTabbedPane1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTabbedPane1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jComboBox1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Customer ID", "Name", "City", "State", " " }));
        jComboBox1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jComboBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jTextField1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        jButton13.setBackground(new java.awt.Color(255, 255, 255));
        jButton13.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton13.setText("Search");
        jButton13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setBackground(new java.awt.Color(255, 255, 255));
        jButton14.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton14.setText("Edit");
        jButton14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setBackground(new java.awt.Color(255, 255, 255));
        jButton15.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton15.setText("Delete");
        jButton15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jTable1.setRowHeight(20);
        jTable1.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane8.setViewportView(jTable1);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel2.setText("Customer ID");

        jLabel55.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel55.setText("C000001");

        jLabel56.setBackground(new java.awt.Color(255, 255, 255));
        jLabel56.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel56.setText("Name");

        jTextField10.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField10.setSelectionColor(new java.awt.Color(110, 89, 222));

        jLabel58.setBackground(new java.awt.Color(255, 255, 255));
        jLabel58.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel58.setText("Address Line 1");

        jTextField12.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField12.setSelectionColor(new java.awt.Color(110, 89, 222));

        jLabel57.setBackground(new java.awt.Color(255, 255, 255));
        jLabel57.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel57.setText("Address Line 2");

        jLabel59.setBackground(new java.awt.Color(255, 255, 255));
        jLabel59.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel59.setText("City");

        jLabel60.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel60.setText("State");

        jLabel61.setBackground(new java.awt.Color(255, 255, 255));
        jLabel61.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel61.setText("Contact No");

        jButton16.setBackground(new java.awt.Color(255, 255, 255));
        jButton16.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton16.setText("ADD");
        jButton16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jTextField32.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField32.setText("--");
        jTextField32.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField32.setSelectionColor(new java.awt.Color(110, 89, 222));

        jTextField33.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField33.setText("--");
        jTextField33.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField33.setSelectionColor(new java.awt.Color(110, 89, 222));

        jTextField34.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField34.setText("--");
        jTextField34.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField34.setSelectionColor(new java.awt.Color(110, 89, 222));

        jTextField35.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField35.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField35.setSelectionColor(new java.awt.Color(110, 89, 222));

        jButton27.setBackground(new java.awt.Color(255, 255, 255));
        jButton27.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton27.setText("Update");
        jButton27.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton27.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton27.setEnabled(false);
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jButton28.setBackground(new java.awt.Color(255, 255, 255));
        jButton28.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton28.setText("Reset");
        jButton28.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton28.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        jLabel82.setBackground(new java.awt.Color(255, 255, 255));
        jLabel82.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel82.setText("Sales Sumary");

        jLabel83.setBackground(new java.awt.Color(255, 255, 255));
        jLabel83.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel83.setText("Customer ID :");

        jLabel84.setBackground(new java.awt.Color(255, 255, 255));
        jLabel84.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel84.setText("E000001");

        jLabel85.setBackground(new java.awt.Color(255, 255, 255));
        jLabel85.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel85.setText("Customer Name :");

        jLabel86.setBackground(new java.awt.Color(255, 255, 255));
        jLabel86.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel86.setText("Pissu Kanna");

        jDateChooser4.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser4.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        jDateChooser5.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        jLabel87.setBackground(new java.awt.Color(255, 255, 255));
        jLabel87.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel87.setText("FROM");

        jLabel88.setBackground(new java.awt.Color(255, 255, 255));
        jLabel88.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel88.setText("TO");

        jButton34.setBackground(new java.awt.Color(255, 255, 255));
        jButton34.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton34.setText("Calculate");
        jButton34.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton34.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });

        jTextField26.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jTextField26.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField26.setSelectionColor(new java.awt.Color(110, 89, 222));
        jTextField26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField26ActionPerformed(evt);
            }
        });

        jLabel89.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel89.setText("RS  :");

        org.jdesktop.layout.GroupLayout jPanel12Layout = new org.jdesktop.layout.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel12Layout.createSequentialGroup()
                        .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel82)
                            .add(jPanel12Layout.createSequentialGroup()
                                .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel85)
                                    .add(jLabel83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(15, 15, 15)
                                .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel84)
                                    .add(jLabel86, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .add(28, 28, 28))
                    .add(jPanel12Layout.createSequentialGroup()
                        .add(jLabel87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel12Layout.createSequentialGroup()
                                .add(jLabel89)
                                .add(18, 18, 18)
                                .add(jTextField26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 246, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(jPanel12Layout.createSequentialGroup()
                                .add(jDateChooser5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jLabel88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jDateChooser4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jButton34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(28, 28, 28))))))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jButton34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel12Layout.createSequentialGroup()
                        .add(jLabel82)
                        .add(18, 18, 18)
                        .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel83)
                            .add(jLabel84))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel85)
                            .add(jLabel86))
                        .add(61, 61, 61)
                        .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jDateChooser4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jLabel87)
                                .add(jLabel88))
                            .add(jDateChooser5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 53, Short.MAX_VALUE)
                .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel89))
                .add(36, 36, 36))
        );

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(jScrollPane8)
                        .addContainerGap())
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(38, 38, 38)
                        .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(52, 52, 52)
                        .add(jButton13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 338, Short.MAX_VALUE)
                        .add(jButton14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(43, 43, 43)
                        .add(jButton15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(70, 70, 70))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel7Layout.createSequentialGroup()
                                .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jLabel55))
                            .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(jPanel7Layout.createSequentialGroup()
                                    .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(jLabel56)
                                        .add(jTextField10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jLabel58)
                                        .add(jTextField12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jLabel57)
                                        .add(jTextField32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(jLabel59)
                                        .add(jTextField34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jTextField33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jLabel60)
                                        .add(jTextField35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jLabel61)))
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel7Layout.createSequentialGroup()
                                    .add(jButton16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(34, 34, 34)
                                    .add(jButton27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(34, 34, 34)
                                    .add(jButton28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 582, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .add(34, 34, 34)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 190, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(50, 50, 50)
                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel2)
                            .add(jLabel55))
                        .add(27, 27, 27)
                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel7Layout.createSequentialGroup()
                                .add(jLabel56)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jTextField10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jLabel58)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jTextField12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jLabel57)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jTextField32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel7Layout.createSequentialGroup()
                                .add(jLabel59)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jTextField33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jLabel60)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jTextField34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jLabel61)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jTextField35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(18, 18, 18)
                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Customer", jPanel7);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel62.setBackground(new java.awt.Color(255, 255, 255));
        jLabel62.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel62.setText("Employeer ID");

        jLabel63.setBackground(new java.awt.Color(255, 255, 255));
        jLabel63.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel63.setText("E000001");

        jLabel64.setBackground(new java.awt.Color(255, 255, 255));
        jLabel64.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel64.setText("First Name");

        jLabel65.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel65.setText("Last Name");

        jLabel66.setBackground(new java.awt.Color(255, 255, 255));
        jLabel66.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel66.setText("Address");

        jLabel67.setBackground(new java.awt.Color(255, 255, 255));
        jLabel67.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel67.setText("Contact No");

        jTable7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable7.setGridColor(new java.awt.Color(255, 255, 255));
        jTable7.setRowHeight(20);
        jTable7.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable7MousePressed(evt);
            }
        });
        jScrollPane10.setViewportView(jTable7);

        jComboBox5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "City", "State" }));
        jComboBox5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jComboBox5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox5.setEnabled(false);

        jTextField11.setEditable(false);
        jTextField11.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField11.setEnabled(false);

        jButton17.setBackground(new java.awt.Color(255, 255, 255));
        jButton17.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton17.setText("Search");
        jButton17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton17.setEnabled(false);

        jButton18.setBackground(new java.awt.Color(255, 255, 255));
        jButton18.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton18.setText("Delete");
        jButton18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton18.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton29.setBackground(new java.awt.Color(255, 255, 255));
        jButton29.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton29.setText("Edit");
        jButton29.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton29.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jButton30.setBackground(new java.awt.Color(255, 255, 255));
        jButton30.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton30.setText("ADD");
        jButton30.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton30.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jButton31.setBackground(new java.awt.Color(255, 255, 255));
        jButton31.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton31.setText("Update");
        jButton31.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton31.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton31.setEnabled(false);
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        jButton32.setBackground(new java.awt.Color(255, 255, 255));
        jButton32.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton32.setText("Reset");
        jButton32.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton32.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        jTextField19.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField19.setSelectionColor(new java.awt.Color(110, 89, 222));
        jTextField19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField19ActionPerformed(evt);
            }
        });

        jTextField20.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField20.setSelectionColor(new java.awt.Color(110, 89, 222));

        jTextField21.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField21.setSelectionColor(new java.awt.Color(110, 89, 222));

        jTextField22.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField22.setSelectionColor(new java.awt.Color(110, 89, 222));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        jLabel70.setBackground(new java.awt.Color(255, 255, 255));
        jLabel70.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel70.setText("Sales Sumary");

        jLabel71.setBackground(new java.awt.Color(255, 255, 255));
        jLabel71.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel71.setText("Employeer ID :");

        jLabel72.setBackground(new java.awt.Color(255, 255, 255));
        jLabel72.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel72.setText("E000001");

        jLabel73.setBackground(new java.awt.Color(255, 255, 255));
        jLabel73.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel73.setText("Employeer Name :");

        jLabel79.setBackground(new java.awt.Color(255, 255, 255));
        jLabel79.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel79.setText("Pissu Kanna");

        jDateChooser2.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        jDateChooser3.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        jLabel80.setBackground(new java.awt.Color(255, 255, 255));
        jLabel80.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel80.setText("FROM");

        jLabel81.setBackground(new java.awt.Color(255, 255, 255));
        jLabel81.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel81.setText("TO");

        jButton33.setBackground(new java.awt.Color(255, 255, 255));
        jButton33.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton33.setText("Calculate");
        jButton33.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton33.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });

        jTextField23.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jTextField23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField23.setSelectionColor(new java.awt.Color(110, 89, 222));
        jTextField23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField23ActionPerformed(evt);
            }
        });

        jLabel90.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel90.setText("RS  :");

        org.jdesktop.layout.GroupLayout jPanel11Layout = new org.jdesktop.layout.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel11Layout.createSequentialGroup()
                        .add(jLabel80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jDateChooser3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jLabel81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jDateChooser2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 30, Short.MAX_VALUE)
                        .add(jButton33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(28, 28, 28))
                    .add(jPanel11Layout.createSequentialGroup()
                        .add(jLabel70)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(jPanel11Layout.createSequentialGroup()
                        .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel73)
                            .add(jLabel71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(15, 15, 15)
                        .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel72)
                            .add(jPanel11Layout.createSequentialGroup()
                                .add(jLabel79, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(28, 28, 28))))))
            .add(jPanel11Layout.createSequentialGroup()
                .add(87, 87, 87)
                .add(jLabel90)
                .add(18, 18, 18)
                .add(jTextField23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 246, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jButton33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel11Layout.createSequentialGroup()
                        .add(jLabel70)
                        .add(18, 18, 18)
                        .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel71)
                            .add(jLabel72))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel73)
                            .add(jLabel79))
                        .add(61, 61, 61)
                        .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jDateChooser2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jLabel80)
                                .add(jLabel81))
                            .add(jDateChooser3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 48, Short.MAX_VALUE)
                .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel90))
                .add(46, 46, 46))
        );

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(jScrollPane10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 724, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jComboBox5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel6Layout.createSequentialGroup()
                                .add(jTextField11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jButton17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jButton29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel6Layout.createSequentialGroup()
                                .add(jButton30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jButton31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jButton32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jTextField20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel66)
                            .add(jTextField21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel67)
                            .add(jTextField22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel65)
                            .add(jTextField19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel6Layout.createSequentialGroup()
                                .add(jLabel62, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jLabel63))
                            .add(jLabel64))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .add(32, 32, 32)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(jComboBox5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextField11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(26, 26, 26)
                        .add(jButton29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(20, 20, 20)
                        .add(jButton18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 190, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel62)
                            .add(jLabel63))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLabel64)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jLabel65)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(20, 20, 20)
                        .add(jLabel66)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jLabel67)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(28, 28, 28)
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jButton30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Employees", jPanel6);

        jPanel21.setBackground(new java.awt.Color(255, 255, 255));

        jComboBox3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "JOB id", "Customer Name" }));
        jComboBox3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jComboBox3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jTextField3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        jButton25.setBackground(new java.awt.Color(255, 255, 255));
        jButton25.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton25.setText("Search");
        jButton25.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton25.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jButton36.setBackground(new java.awt.Color(255, 255, 255));
        jButton36.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton36.setText("Print ");
        jButton36.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton36.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });

        jButton37.setBackground(new java.awt.Color(255, 255, 255));
        jButton37.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton37.setText("Delete");
        jButton37.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton37.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton37ActionPerformed(evt);
            }
        });

        jTable6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable6.setGridColor(new java.awt.Color(255, 255, 255));
        jTable6.setRowHeight(20);
        jTable6.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable6MousePressed(evt);
            }
        });
        jScrollPane11.setViewportView(jTable6);

        jLabel96.setBackground(new java.awt.Color(255, 255, 255));
        jLabel96.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel96.setText("JOB ID:");

        jLabel97.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel97.setText("C000001");

        jPanel22.setBackground(new java.awt.Color(255, 255, 255));
        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Items", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 14))); // NOI18N

        jTextField31.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField31.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField31.setEnabled(false);
        jTextField31.setSelectionColor(new java.awt.Color(110, 89, 222));

        jLabel99.setBackground(new java.awt.Color(255, 255, 255));
        jLabel99.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel99.setText("Ram");

        jTextField36.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField36.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField36.setEnabled(false);
        jTextField36.setSelectionColor(new java.awt.Color(110, 89, 222));

        jLabel100.setBackground(new java.awt.Color(255, 255, 255));
        jLabel100.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel100.setText("Mother Board");

        jTextField37.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField37.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField37.setEnabled(false);
        jTextField37.setSelectionColor(new java.awt.Color(110, 89, 222));

        jTextField40.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField40.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField40.setEnabled(false);
        jTextField40.setSelectionColor(new java.awt.Color(110, 89, 222));

        jLabel103.setBackground(new java.awt.Color(255, 255, 255));
        jLabel103.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel103.setText("Graphics Card");

        jTextField39.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField39.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField39.setEnabled(false);
        jTextField39.setSelectionColor(new java.awt.Color(110, 89, 222));

        jLabel102.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel102.setText("Rom");

        jTextField38.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField38.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField38.setEnabled(false);
        jTextField38.setSelectionColor(new java.awt.Color(110, 89, 222));

        jLabel101.setBackground(new java.awt.Color(255, 255, 255));
        jLabel101.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel101.setText("HDD");

        jLabel98.setBackground(new java.awt.Color(255, 255, 255));
        jLabel98.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel98.setText("Proccesor");

        jLabel104.setBackground(new java.awt.Color(255, 255, 255));
        jLabel104.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel104.setText("Key Board");

        jTextField41.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField41.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField41.setEnabled(false);
        jTextField41.setSelectionColor(new java.awt.Color(110, 89, 222));

        jLabel105.setBackground(new java.awt.Color(255, 255, 255));
        jLabel105.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel105.setText("Charger");

        jTextField42.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField42.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField42.setEnabled(false);
        jTextField42.setSelectionColor(new java.awt.Color(110, 89, 222));

        jLabel106.setBackground(new java.awt.Color(255, 255, 255));
        jLabel106.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel106.setText("Battery");

        jTextField43.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField43.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField43.setEnabled(false);
        jTextField43.setSelectionColor(new java.awt.Color(110, 89, 222));

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox3.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox3.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jCheckBox4.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox4.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jCheckBox5.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox5.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        jCheckBox6.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox6.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });

        jCheckBox7.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox7.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox7ActionPerformed(evt);
            }
        });

        jCheckBox8.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox8.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jCheckBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox8ActionPerformed(evt);
            }
        });

        jCheckBox9.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox9.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jCheckBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox9ActionPerformed(evt);
            }
        });

        jCheckBox10.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox10.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jCheckBox10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox10ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel22Layout = new org.jdesktop.layout.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel22Layout.createSequentialGroup()
                        .add(jLabel106)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jCheckBox7)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(jPanel22Layout.createSequentialGroup()
                        .add(jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jTextField36)
                            .add(jTextField37)
                            .add(jTextField31)
                            .add(jTextField41)
                            .add(jPanel22Layout.createSequentialGroup()
                                .add(jLabel98)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jCheckBox1))
                            .add(jPanel22Layout.createSequentialGroup()
                                .add(jLabel99)
                                .add(4, 4, 4)
                                .add(jCheckBox4))
                            .add(jPanel22Layout.createSequentialGroup()
                                .add(jLabel100)
                                .add(5, 5, 5)
                                .add(jCheckBox5))
                            .add(jPanel22Layout.createSequentialGroup()
                                .add(jLabel104)
                                .add(6, 6, 6)
                                .add(jCheckBox6))
                            .add(jTextField43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 310, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jTextField38)
                            .add(jTextField39)
                            .add(jTextField40)
                            .add(jTextField42)
                            .add(jPanel22Layout.createSequentialGroup()
                                .add(jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel22Layout.createSequentialGroup()
                                        .add(jLabel101)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(jCheckBox3))
                                    .add(jPanel22Layout.createSequentialGroup()
                                        .add(jLabel105)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(jCheckBox10))
                                    .add(jPanel22Layout.createSequentialGroup()
                                        .add(jLabel102)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(jCheckBox8))
                                    .add(jPanel22Layout.createSequentialGroup()
                                        .add(jLabel103)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(jCheckBox9)))
                                .add(0, 243, Short.MAX_VALUE)))))
                .add(23, 23, 23))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel22Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .add(jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel22Layout.createSequentialGroup()
                        .add(jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel98)
                            .add(jCheckBox1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel99)
                            .add(jCheckBox4))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jPanel22Layout.createSequentialGroup()
                                .add(jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jPanel22Layout.createSequentialGroup()
                                        .add(jTextField36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(18, 18, 18)
                                        .add(jLabel100))
                                    .add(jCheckBox5))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jTextField37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jLabel104))
                            .add(jCheckBox6))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel22Layout.createSequentialGroup()
                        .add(jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel101)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jCheckBox3))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel102)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jCheckBox8))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jPanel22Layout.createSequentialGroup()
                                .add(jTextField39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jLabel103))
                            .add(jCheckBox9))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel105)
                            .add(jCheckBox10))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(7, 7, 7)
                .add(jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel106)
                    .add(jCheckBox7))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTextField43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jComboBox4.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jComboBox4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jComboBox4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jComboBox4MousePressed(evt);
            }
        });
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jLabel108.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel108.setText("Customer ");

        jTextField45.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField45.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField45.setSelectionColor(new java.awt.Color(110, 89, 222));
        jTextField45.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTextField45ComponentAdded(evt);
            }
        });
        jTextField45.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                jTextField45HierarchyChanged(evt);
            }
        });
        jTextField45.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTextField45AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jTextField45.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextField45InputMethodTextChanged(evt);
            }
        });
        jTextField45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField45ActionPerformed(evt);
            }
        });

        jButton38.setBackground(new java.awt.Color(255, 255, 255));
        jButton38.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton38.setText("Print JOB");
        jButton38.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton38.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton38ActionPerformed(evt);
            }
        });

        jButton40.setBackground(new java.awt.Color(255, 255, 255));
        jButton40.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton40.setText("Reset");
        jButton40.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton40.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton40ActionPerformed(evt);
            }
        });

        jButton41.setBackground(new java.awt.Color(255, 255, 255));
        jButton41.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton41.setText("Compleate");
        jButton41.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton41.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jScrollPane12.setViewportView(jTextArea2);

        jLabel109.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel109.setText("Description");

        jButton84.setBackground(new java.awt.Color(255, 255, 255));
        jButton84.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton84.setForeground(new java.awt.Color(51, 51, 51));
        jButton84.setText("Add Type");
        jButton84.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton84.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton84.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton84ActionPerformed(evt);
            }
        });

        jLabel165.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel165.setText("Contact Number");

        jTextField81.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField81.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField81.setSelectionColor(new java.awt.Color(110, 89, 222));
        jTextField81.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTextField81ComponentAdded(evt);
            }
        });
        jTextField81.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                jTextField81HierarchyChanged(evt);
            }
        });
        jTextField81.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTextField81AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jTextField81.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextField81InputMethodTextChanged(evt);
            }
        });
        jTextField81.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField81ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel21Layout = new org.jdesktop.layout.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane11)
                    .add(jPanel21Layout.createSequentialGroup()
                        .add(jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabel108)
                            .add(jTextField45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 284, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel21Layout.createSequentialGroup()
                                .add(23, 23, 23)
                                .add(jButton38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jButton40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(68, 68, 68))
                            .add(jPanel21Layout.createSequentialGroup()
                                .add(jLabel96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jLabel97))
                            .add(jPanel21Layout.createSequentialGroup()
                                .add(jComboBox4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 137, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jButton84))
                            .add(jScrollPane12)
                            .add(jLabel109)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(jLabel165)
                                .add(jTextField81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 284, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(18, 18, Short.MAX_VALUE)
                        .add(jPanel22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(19, 19, 19))
                    .add(jPanel21Layout.createSequentialGroup()
                        .add(jComboBox3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(38, 38, 38)
                        .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(52, 52, 52)
                        .add(jButton25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(64, 64, 64)
                        .add(jButton36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jButton41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jComboBox3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 190, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(11, 11, 11)
                .add(jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel21Layout.createSequentialGroup()
                        .add(jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel96)
                            .add(jLabel97))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jComboBox4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLabel108)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(5, 5, 5)
                        .add(jLabel165)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel109)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jButton40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 2, Short.MAX_VALUE))
                    .add(jPanel22, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Add JOB", jPanel21);

        jPanel28.setBackground(new java.awt.Color(255, 255, 255));

        jPanel29.setBackground(new java.awt.Color(255, 255, 255));
        jPanel29.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Items", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12))); // NOI18N

        jTable9.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable9.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable9.setGridColor(new java.awt.Color(255, 255, 255));
        jTable9.setRowHeight(20);
        jTable9.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable9MousePressed(evt);
            }
        });
        jScrollPane14.setViewportView(jTable9);

        jTextField47.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField47ActionPerformed(evt);
            }
        });

        jLabel110.setBackground(new java.awt.Color(255, 255, 255));
        jLabel110.setText("Search Item :");

        jTextField48.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField48ActionPerformed(evt);
            }
        });

        jLabel111.setBackground(new java.awt.Color(255, 255, 255));
        jLabel111.setText("Item Code : ");

        jTextField49.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField49ActionPerformed(evt);
            }
        });

        jLabel123.setBackground(new java.awt.Color(255, 255, 255));
        jLabel123.setText("Discription : ");

        jLabel124.setBackground(new java.awt.Color(255, 255, 255));
        jLabel124.setText("Unit Price : ");

        jTextField50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField50ActionPerformed(evt);
            }
        });

        jLabel126.setBackground(new java.awt.Color(255, 255, 255));
        jLabel126.setText("QTY : ");

        jTextField52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField52ActionPerformed(evt);
            }
        });

        jButton43.setBackground(new java.awt.Color(255, 255, 255));
        jButton43.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton43.setText("Add Item");
        jButton43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton43ActionPerformed(evt);
            }
        });

        jLabel127.setBackground(new java.awt.Color(255, 255, 255));
        jLabel127.setText("Warranty (M): ");

        jTextField53.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField53ActionPerformed(evt);
            }
        });

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item Name", "Item Code", "Category" }));

        jButton67.setBackground(new java.awt.Color(255, 255, 255));
        jButton67.setText("Search");
        jButton67.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton67ActionPerformed(evt);
            }
        });

        jLabel200.setBackground(new java.awt.Color(255, 255, 255));
        jLabel200.setText("Quotation QTY : ");

        jTextField106.setText("1");
        jTextField106.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField106ActionPerformed(evt);
            }
        });
        jTextField106.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField106KeyTyped(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel29Layout = new org.jdesktop.layout.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 667, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel29Layout.createSequentialGroup()
                        .add(jLabel110)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(31, 31, 31)
                        .add(jComboBox7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 101, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(33, 33, 33)
                        .add(jButton67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(18, 18, 18)
                .add(jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel29Layout.createSequentialGroup()
                        .add(jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(jPanel29Layout.createSequentialGroup()
                                .add(jLabel127)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jTextField53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel29Layout.createSequentialGroup()
                                .add(jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                        .add(jLabel126, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(jLabel123, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .add(jLabel124)
                                    .add(jLabel111))
                                .add(31, 31, 31)
                                .add(jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jTextField50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jTextField48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                        .add(0, 98, Short.MAX_VALUE))
                    .add(jPanel29Layout.createSequentialGroup()
                        .add(jLabel200)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jTextField106, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(41, 41, 41))))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel29Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel29Layout.createSequentialGroup()
                        .add(jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jComboBox7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jButton67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jTextField47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jLabel110)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jScrollPane14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 219, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel29Layout.createSequentialGroup()
                        .add(jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextField48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel111))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextField49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel123))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel124)
                            .add(jTextField50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel126)
                            .add(jTextField52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel127)
                            .add(jTextField53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel29Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel200)
                                .add(jTextField106, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jButton43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jPanel30.setBackground(new java.awt.Color(255, 255, 255));
        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Create Advanced Bill", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12))); // NOI18N
        jPanel30.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable10.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable10.setGridColor(new java.awt.Color(255, 255, 255));
        jTable10.setRowHeight(20);
        jTable10.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable10MousePressed(evt);
            }
        });
        jScrollPane15.setViewportView(jTable10);

        jPanel30.add(jScrollPane15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 516, 219));

        jTextField54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField54ActionPerformed(evt);
            }
        });
        jPanel30.add(jTextField54, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 270, 110, 22));

        jLabel128.setBackground(new java.awt.Color(255, 255, 255));
        jLabel128.setText("Total :");
        jPanel30.add(jLabel128, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 270, -1, -1));

        jTextField55.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField55ActionPerformed(evt);
            }
        });
        jPanel30.add(jTextField55, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 29, 166, 22));

        jLabel129.setBackground(new java.awt.Color(255, 255, 255));
        jLabel129.setText("Customer :");
        jPanel30.add(jLabel129, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 33, 68, -1));

        jLabel130.setBackground(new java.awt.Color(255, 255, 255));
        jLabel130.setText("Discription : ");
        jPanel30.add(jLabel130, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 69, 68, -1));

        jLabel131.setBackground(new java.awt.Color(255, 255, 255));
        jLabel131.setText("Advance : ");
        jPanel30.add(jLabel131, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 188, 68, -1));

        jTextField57.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField57ActionPerformed(evt);
            }
        });
        jPanel30.add(jTextField57, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 184, 166, 22));

        jLabel132.setBackground(new java.awt.Color(255, 255, 255));
        jLabel132.setText("Due Payment :");
        jPanel30.add(jLabel132, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 270, 76, -1));

        jTextField58.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField58ActionPerformed(evt);
            }
        });
        jPanel30.add(jTextField58, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 270, 110, 22));

        jTextArea3.setColumns(20);
        jTextArea3.setLineWrap(true);
        jTextArea3.setRows(5);
        jTextArea3.setWrapStyleWord(true);
        jScrollPane16.setViewportView(jTextArea3);

        jPanel30.add(jScrollPane16, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 69, -1, -1));

        jButton46.setBackground(new java.awt.Color(255, 255, 255));
        jButton46.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton46.setText("Delete Item");
        jButton46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton46ActionPerformed(evt);
            }
        });
        jPanel30.add(jButton46, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 100, 30));

        jLabel134.setText("Advance Invoice No : ");
        jPanel30.add(jLabel134, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel135.setBackground(new java.awt.Color(255, 255, 255));
        jLabel135.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel135.setText("AC00001");
        jPanel30.add(jLabel135, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, -1, -1));

        jButton45.setBackground(new java.awt.Color(255, 255, 255));
        jButton45.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton45.setText("Print");
        jButton45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton45ActionPerformed(evt);
            }
        });

        jButton48.setBackground(new java.awt.Color(255, 255, 255));
        jButton48.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton48.setText("Search ");
        jButton48.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton48ActionPerformed(evt);
            }
        });

        jTable11.setAutoCreateRowSorter(true);
        jTable11.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"E000001", "Nimal"},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Rap ID", "Name"
            }
        ));
        jTable11.setGridColor(new java.awt.Color(255, 255, 255));
        jTable11.setRowHeight(20);
        jTable11.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable11MousePressed(evt);
            }
        });
        jTable11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable11KeyPressed(evt);
            }
        });
        jScrollPane17.setViewportView(jTable11);

        jTextField59.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField59ActionPerformed(evt);
            }
        });

        jLabel133.setBackground(new java.awt.Color(255, 255, 255));
        jLabel133.setText("Customer Name: ");

        jButton50.setBackground(new java.awt.Color(255, 255, 255));
        jButton50.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton50.setText("Update");
        jButton50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton50ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel28Layout = new org.jdesktop.layout.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel28Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel29, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel28Layout.createSequentialGroup()
                        .add(jPanel30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 805, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jPanel28Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel28Layout.createSequentialGroup()
                                .add(4, 4, 4)
                                .add(jScrollPane17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .add(jPanel28Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel133, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jTextField59))
                            .add(jPanel28Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jButton45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 31, Short.MAX_VALUE)
                                .add(jButton50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel28Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 141, Short.MAX_VALUE)
                                .add(jButton48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 294, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel28Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel30, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                    .add(jPanel28Layout.createSequentialGroup()
                        .add(2, 2, 2)
                        .add(jPanel28Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextField59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel133))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jScrollPane17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 139, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jPanel28Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel28Layout.createSequentialGroup()
                                .add(25, 25, 25)
                                .add(jButton45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel28Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButton50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout jPanel26Layout = new org.jdesktop.layout.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel28, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel28, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Advanced Customer", jPanel26);

        jPanel31.setBackground(new java.awt.Color(255, 255, 255));

        jPanel32.setBackground(new java.awt.Color(255, 255, 255));
        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Items", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12))); // NOI18N

        jTable12.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable12.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable12.setGridColor(new java.awt.Color(255, 255, 255));
        jTable12.setRowHeight(20);
        jTable12.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable12MousePressed(evt);
            }
        });
        jScrollPane18.setViewportView(jTable12);

        jTextField56.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField56ActionPerformed(evt);
            }
        });

        jLabel136.setBackground(new java.awt.Color(255, 255, 255));
        jLabel136.setText("Search Item :");

        jTextField60.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField60ActionPerformed(evt);
            }
        });

        jLabel137.setBackground(new java.awt.Color(255, 255, 255));
        jLabel137.setText("Item Code : ");

        jTextField61.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField61ActionPerformed(evt);
            }
        });

        jLabel138.setBackground(new java.awt.Color(255, 255, 255));
        jLabel138.setText("Discription : ");

        jLabel139.setBackground(new java.awt.Color(255, 255, 255));
        jLabel139.setText("Unit Price : ");

        jTextField62.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField62ActionPerformed(evt);
            }
        });

        jLabel141.setBackground(new java.awt.Color(255, 255, 255));
        jLabel141.setText("QTY : ");

        jTextField64.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField64ActionPerformed(evt);
            }
        });

        jButton44.setBackground(new java.awt.Color(255, 255, 255));
        jButton44.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton44.setText("Add Item");
        jButton44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton44ActionPerformed(evt);
            }
        });

        jLabel142.setBackground(new java.awt.Color(255, 255, 255));
        jLabel142.setText("Warranty (M) : ");

        jTextField65.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField65ActionPerformed(evt);
            }
        });

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item Name", "Item Code", "Category" }));

        jButton66.setBackground(new java.awt.Color(255, 255, 255));
        jButton66.setText("Search");
        jButton66.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton66ActionPerformed(evt);
            }
        });

        jLabel171.setBackground(new java.awt.Color(255, 255, 255));
        jLabel171.setText("Quotation QTY : ");

        jTextField86.setText("1");
        jTextField86.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField86ActionPerformed(evt);
            }
        });
        jTextField86.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField86KeyTyped(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel32Layout = new org.jdesktop.layout.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel32Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 667, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel32Layout.createSequentialGroup()
                        .add(jLabel136)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(30, 30, 30)
                        .add(jComboBox6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 101, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(33, 33, 33)
                        .add(jButton66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(jPanel32Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel32Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 58, Short.MAX_VALUE)
                        .add(jLabel171)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jTextField86, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButton44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18))
                    .add(jPanel32Layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(jPanel32Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jPanel32Layout.createSequentialGroup()
                                .add(jPanel32Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel138)
                                    .add(jLabel137)
                                    .add(jLabel139))
                                .add(32, 32, 32)
                                .add(jPanel32Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jTextField62, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jTextField60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jTextField61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(jPanel32Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel32Layout.createSequentialGroup()
                                    .add(jLabel141, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(jTextField64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel32Layout.createSequentialGroup()
                                    .add(jLabel142)
                                    .add(18, 18, 18)
                                    .add(jTextField65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                        .add(0, 0, Short.MAX_VALUE))))
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel32Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel32Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel32Layout.createSequentialGroup()
                        .add(jPanel32Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextField56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel136)
                            .add(jComboBox6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jScrollPane18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 219, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel32Layout.createSequentialGroup()
                        .add(jPanel32Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextField60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel137))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel32Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextField61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel138))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel32Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel139)
                            .add(jTextField62, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel32Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel141)
                            .add(jTextField64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel32Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel142)
                            .add(jTextField65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel32Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel32Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel171)
                                .add(jTextField86, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jButton44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jPanel33.setBackground(new java.awt.Color(255, 255, 255));
        jPanel33.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Create Quotation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12))); // NOI18N

        jTable13.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable13.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable13.setGridColor(new java.awt.Color(255, 255, 255));
        jTable13.setRowHeight(20);
        jTable13.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable13MousePressed(evt);
            }
        });
        jScrollPane19.setViewportView(jTable13);

        jTextField66.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField66ActionPerformed(evt);
            }
        });

        jLabel143.setBackground(new java.awt.Color(255, 255, 255));
        jLabel143.setText("Total :");

        jTextField67.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField67ActionPerformed(evt);
            }
        });

        jLabel144.setBackground(new java.awt.Color(255, 255, 255));
        jLabel144.setText("Customer :");

        jLabel145.setBackground(new java.awt.Color(255, 255, 255));
        jLabel145.setText("Discription : ");

        jLabel146.setBackground(new java.awt.Color(255, 255, 255));
        jLabel146.setText("Discount (Rs) : ");

        jTextField68.setText("0");
        jTextField68.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField68ActionPerformed(evt);
            }
        });

        jLabel147.setBackground(new java.awt.Color(255, 255, 255));
        jLabel147.setText("Net Amount (Rs) :");

        jTextField69.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField69ActionPerformed(evt);
            }
        });

        jTextArea4.setColumns(20);
        jTextArea4.setLineWrap(true);
        jTextArea4.setRows(5);
        jTextArea4.setWrapStyleWord(true);
        jScrollPane20.setViewportView(jTextArea4);

        jButton47.setBackground(new java.awt.Color(255, 255, 255));
        jButton47.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton47.setText("Delete Item");
        jButton47.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton47ActionPerformed(evt);
            }
        });

        jLabel148.setText("Quotiton Invoice No : ");

        jLabel149.setBackground(new java.awt.Color(255, 255, 255));
        jLabel149.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel149.setText("AC00001");

        jButton51.setBackground(new java.awt.Color(255, 255, 255));
        jButton51.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton51.setText("Print");
        jButton51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton51ActionPerformed(evt);
            }
        });

        jCheckBox13.setText("Net Amount");

        org.jdesktop.layout.GroupLayout jPanel33Layout = new org.jdesktop.layout.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel33Layout.createSequentialGroup()
                .add(14, 14, 14)
                .add(jPanel33Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel33Layout.createSequentialGroup()
                        .add(jPanel33Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel33Layout.createSequentialGroup()
                                .add(jLabel148)
                                .add(4, 4, 4)
                                .add(jLabel149))
                            .add(jScrollPane19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 516, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(jPanel33Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel33Layout.createSequentialGroup()
                                .add(18, 18, 18)
                                .add(jPanel33Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel146)
                                    .add(jLabel147))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jPanel33Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jTextField68, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jTextField69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(jPanel33Layout.createSequentialGroup()
                                .add(14, 14, 14)
                                .add(jPanel33Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jPanel33Layout.createSequentialGroup()
                                        .add(jCheckBox13)
                                        .add(18, 18, 18)
                                        .add(jButton51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(jPanel33Layout.createSequentialGroup()
                                        .add(jPanel33Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                            .add(jLabel144, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .add(jLabel145, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jPanel33Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jTextField67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 166, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(jScrollPane20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))))
                    .add(jPanel33Layout.createSequentialGroup()
                        .add(jButton47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(250, 250, 250)
                        .add(jLabel143)
                        .add(19, 19, 19)
                        .add(jTextField66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(43, 43, 43))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel33Layout.createSequentialGroup()
                .add(2, 2, 2)
                .add(jPanel33Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel33Layout.createSequentialGroup()
                        .add(jPanel33Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel148)
                            .add(jLabel149))
                        .add(6, 6, 6)
                        .add(jScrollPane19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 219, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel33Layout.createSequentialGroup()
                        .add(9, 9, 9)
                        .add(jPanel33Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel33Layout.createSequentialGroup()
                                .add(jPanel33Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel144)
                                    .add(jTextField67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(18, 18, 18)
                                .add(jLabel145))
                            .add(jPanel33Layout.createSequentialGroup()
                                .add(40, 40, 40)
                                .add(jScrollPane20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(18, 18, 18)
                        .add(jPanel33Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel146)
                            .add(jTextField68, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(7, 7, 7)
                        .add(jPanel33Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel147)
                            .add(jTextField69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(3, 3, 3)
                .add(jPanel33Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButton47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel143)
                    .add(jPanel33Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jTextField66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jButton51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jCheckBox13))))
        );

        jButton52.setBackground(new java.awt.Color(255, 255, 255));
        jButton52.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton52.setText("Search ");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        jTable14.setAutoCreateRowSorter(true);
        jTable14.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"E000001", "Nimal"},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Rap ID", "Name"
            }
        ));
        jTable14.setGridColor(new java.awt.Color(255, 255, 255));
        jTable14.setRowHeight(20);
        jTable14.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable14MousePressed(evt);
            }
        });
        jScrollPane21.setViewportView(jTable14);

        jTextField70.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField70ActionPerformed(evt);
            }
        });

        jLabel150.setBackground(new java.awt.Color(255, 255, 255));
        jLabel150.setText("Customer Name: ");

        jButton54.setBackground(new java.awt.Color(255, 255, 255));
        jButton54.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton54.setText("Update");
        jButton54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton54ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel31Layout = new org.jdesktop.layout.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel31Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel32, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel31Layout.createSequentialGroup()
                        .add(jPanel33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 802, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jPanel31Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel31Layout.createSequentialGroup()
                                .add(4, 4, 4)
                                .add(jScrollPane21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .add(jPanel31Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jTextField70))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel31Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 144, Short.MAX_VALUE)
                                .add(jPanel31Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 294, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel31Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel33, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel31Layout.createSequentialGroup()
                        .add(2, 2, 2)
                        .add(jPanel31Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextField70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel150))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jScrollPane21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 139, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(19, 19, 19)))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout jPanel27Layout = new org.jdesktop.layout.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel31, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel31, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Quotation", jPanel27);

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jTabbedPane1)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("");
        jTabbedPane1.getAccessibleContext().setAccessibleDescription("");

        org.jdesktop.layout.GroupLayout pnl_hrLayout = new org.jdesktop.layout.GroupLayout(pnl_hr);
        pnl_hr.setLayout(pnl_hrLayout);
        pnl_hrLayout.setHorizontalGroup(
            pnl_hrLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnl_hrLayout.setVerticalGroup(
            pnl_hrLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bg.add(pnl_hr, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 1070, 660));

        pnl_barcode.setBackground(new java.awt.Color(255, 255, 255));

        jTextField6.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jTextField6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField6.setSelectionColor(new java.awt.Color(102, 102, 255));
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jTextField9.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jTextField9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });

        jButton39.setText("Print");
        jButton39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton39ActionPerformed(evt);
            }
        });

        jTextField44.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jTextField44.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextField44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField44ActionPerformed(evt);
            }
        });

        jLabel113.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel113.setText("Model");

        jLabel114.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel114.setText("Type");

        jLabel115.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel115.setText("QTY");

        jTextField46.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jTextField46.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField46.setSelectionColor(new java.awt.Color(102, 102, 255));
        jTextField46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField46ActionPerformed(evt);
            }
        });

        jLabel116.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel116.setText("Price");

        jCheckBox11.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox11.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jCheckBox11.setText("Duplicate");
        jCheckBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox11ActionPerformed(evt);
            }
        });

        jTable8.setAutoCreateRowSorter(true);
        jTable8.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"D00001", null, "hemas", "10", "8", "2020-08-30", "100", null, null, null},
                {"D00002", null, "ASD", "15", "12", "2022-03-25", null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Date", "Company", "Retail Price", "HallSale Price", "Exp Date", "Qty", "Title 8", "Title 9", "Title 10"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable8.setGridColor(new java.awt.Color(255, 255, 255));
        jTable8.setRowHeight(20);
        jTable8.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jScrollPane13.setViewportView(jTable8);
        if (jTable8.getColumnModel().getColumnCount() > 0) {
            jTable8.getColumnModel().getColumn(0).setResizable(false);
            jTable8.getColumnModel().getColumn(1).setResizable(false);
            jTable8.getColumnModel().getColumn(1).setPreferredWidth(300);
            jTable8.getColumnModel().getColumn(2).setResizable(false);
            jTable8.getColumnModel().getColumn(3).setResizable(false);
            jTable8.getColumnModel().getColumn(4).setResizable(false);
            jTable8.getColumnModel().getColumn(5).setResizable(false);
            jTable8.getColumnModel().getColumn(6).setResizable(false);
        }

        jButton42.setText("ADD");
        jButton42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton42ActionPerformed(evt);
            }
        });

        jLabel118.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel118.setText("Lable Count :");

        org.jdesktop.layout.GroupLayout pnl_barcodeLayout = new org.jdesktop.layout.GroupLayout(pnl_barcode);
        pnl_barcode.setLayout(pnl_barcodeLayout);
        pnl_barcodeLayout.setHorizontalGroup(
            pnl_barcodeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnl_barcodeLayout.createSequentialGroup()
                .add(pnl_barcodeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnl_barcodeLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane13))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, pnl_barcodeLayout.createSequentialGroup()
                        .add(pnl_barcodeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(pnl_barcodeLayout.createSequentialGroup()
                                .add(20, 20, 20)
                                .add(jLabel113)
                                .add(18, 18, 18)
                                .add(jTextField9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(pnl_barcodeLayout.createSequentialGroup()
                                .add(24, 24, 24)
                                .add(pnl_barcodeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(pnl_barcodeLayout.createSequentialGroup()
                                        .add(pnl_barcodeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jLabel115)
                                            .add(pnl_barcodeLayout.createSequentialGroup()
                                                .add(jLabel116)
                                                .add(18, 18, 18)
                                                .add(jTextField46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnl_barcodeLayout.createSequentialGroup()
                                                .add(pnl_barcodeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                                    .add(pnl_barcodeLayout.createSequentialGroup()
                                                        .add(jButton42)
                                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                        .add(jButton39))
                                                    .add(pnl_barcodeLayout.createSequentialGroup()
                                                        .add(jLabel118)
                                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                        .add(jLabel117, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 86, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                                .add(67, 67, 67)))
                                        .add(jCheckBox11))
                                    .add(pnl_barcodeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                        .add(jTextField6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(pnl_barcodeLayout.createSequentialGroup()
                                            .add(jLabel114)
                                            .add(18, 18, 18)
                                            .add(jTextField44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))))
                        .add(0, 732, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnl_barcodeLayout.setVerticalGroup(
            pnl_barcodeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnl_barcodeLayout.createSequentialGroup()
                .add(44, 44, 44)
                .add(pnl_barcodeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel113))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(pnl_barcodeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel114))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(pnl_barcodeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel115)
                    .add(jTextField6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jCheckBox11))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(pnl_barcodeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel116))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(pnl_barcodeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel118)
                    .add(jLabel117, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(pnl_barcodeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton42)
                    .add(jButton39))
                .add(18, 18, 18)
                .add(jScrollPane13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 321, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        bg.add(pnl_barcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 1070, 660));

        lbl_main_time.setBackground(new java.awt.Color(255, 255, 255));
        lbl_main_time.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        lbl_main_time.setText("jLabel51");
        bg.add(lbl_main_time, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 10, 121, -1));

        jLabel32.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel32.setText("Time :");
        bg.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 10, -1, -1));

        lbl_main_date.setBackground(new java.awt.Color(255, 255, 255));
        lbl_main_date.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        lbl_main_date.setText("jLabel32");
        bg.add(lbl_main_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 10, 143, -1));

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel12.setText("Date :");
        bg.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 10, -1, -1));

        pnl_quickBill.setBackground(new java.awt.Color(255, 255, 255));

        jPanel47.setBackground(new java.awt.Color(255, 255, 255));
        jPanel47.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cash IN", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        txt_search_text1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        txt_search_text1.setForeground(new java.awt.Color(51, 51, 51));
        txt_search_text1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_search_text1.setSelectionColor(new java.awt.Color(110, 89, 222));
        txt_search_text1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_search_text1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_search_text1KeyTyped(evt);
            }
        });

        jLabel288.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel288.setText("Amount");

        jTextArea17.setColumns(20);
        jTextArea17.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextArea17.setRows(5);
        jTextArea17.setWrapStyleWord(true);
        jTextArea17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextArea17.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea17KeyPressed(evt);
            }
        });
        jScrollPane44.setViewportView(jTextArea17);

        jButton85.setBackground(new java.awt.Color(255, 255, 255));
        jButton85.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton85.setText("Save");
        jButton85.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton85.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton85.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton85ActionPerformed(evt);
            }
        });
        jButton85.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton85KeyPressed(evt);
            }
        });

        jLabel289.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel289.setText("Note");

        org.jdesktop.layout.GroupLayout jPanel47Layout = new org.jdesktop.layout.GroupLayout(jPanel47);
        jPanel47.setLayout(jPanel47Layout);
        jPanel47Layout.setHorizontalGroup(
            jPanel47Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel47Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel47Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel47Layout.createSequentialGroup()
                        .add(jLabel289)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(jPanel47Layout.createSequentialGroup()
                        .add(jPanel47Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jScrollPane44)
                            .add(jLabel288)
                            .add(txt_search_text1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18))))
        );
        jPanel47Layout.setVerticalGroup(
            jPanel47Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel47Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel47Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel47Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jButton85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel47Layout.createSequentialGroup()
                        .add(jLabel288)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txt_search_text1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 19, Short.MAX_VALUE)
                        .add(jLabel289)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel48.setBackground(new java.awt.Color(255, 255, 255));
        jPanel48.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cash OUT", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        txt_search_text2.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        txt_search_text2.setForeground(new java.awt.Color(51, 51, 51));
        txt_search_text2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_search_text2.setSelectionColor(new java.awt.Color(110, 89, 222));
        txt_search_text2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_search_text2KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_search_text2KeyTyped(evt);
            }
        });

        jLabel290.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel290.setText("Amount");

        jTextArea18.setColumns(20);
        jTextArea18.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextArea18.setRows(5);
        jTextArea18.setWrapStyleWord(true);
        jTextArea18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextArea18.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea18KeyPressed(evt);
            }
        });
        jScrollPane45.setViewportView(jTextArea18);

        jButton86.setBackground(new java.awt.Color(255, 255, 255));
        jButton86.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton86.setText("Save");
        jButton86.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton86.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton86.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton86ActionPerformed(evt);
            }
        });
        jButton86.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton86KeyPressed(evt);
            }
        });

        jLabel291.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel291.setText("Note");

        org.jdesktop.layout.GroupLayout jPanel48Layout = new org.jdesktop.layout.GroupLayout(jPanel48);
        jPanel48.setLayout(jPanel48Layout);
        jPanel48Layout.setHorizontalGroup(
            jPanel48Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel48Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel48Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel48Layout.createSequentialGroup()
                        .add(jLabel291)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(jPanel48Layout.createSequentialGroup()
                        .add(jPanel48Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jScrollPane45)
                            .add(jLabel290)
                            .add(txt_search_text2))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton86, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18))))
        );
        jPanel48Layout.setVerticalGroup(
            jPanel48Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel48Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel48Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel48Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jButton86, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel48Layout.createSequentialGroup()
                        .add(jLabel290)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txt_search_text2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 26, Short.MAX_VALUE)
                        .add(jLabel291)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTable27.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable27.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable27.setGridColor(new java.awt.Color(255, 255, 255));
        jTable27.setRowHeight(20);
        jTable27.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable27MousePressed(evt);
            }
        });
        jScrollPane46.setViewportView(jTable27);

        jTable28.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable28.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable28.setGridColor(new java.awt.Color(255, 255, 255));
        jTable28.setRowHeight(20);
        jTable28.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable28MousePressed(evt);
            }
        });
        jScrollPane47.setViewportView(jTable28);

        jLabel292.setText("Cash OUT List");

        jLabel293.setText("Cash IN List");

        org.jdesktop.layout.GroupLayout pnl_quickBillLayout = new org.jdesktop.layout.GroupLayout(pnl_quickBill);
        pnl_quickBill.setLayout(pnl_quickBillLayout);
        pnl_quickBillLayout.setHorizontalGroup(
            pnl_quickBillLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnl_quickBillLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnl_quickBillLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel48, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel47, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnl_quickBillLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel293)
                    .add(jScrollPane47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 581, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jScrollPane46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 581, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel292))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        pnl_quickBillLayout.setVerticalGroup(
            pnl_quickBillLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
            .add(org.jdesktop.layout.GroupLayout.LEADING, pnl_quickBillLayout.createSequentialGroup()
                .add(20, 20, 20)
                .add(pnl_quickBillLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(pnl_quickBillLayout.createSequentialGroup()
                        .add(jLabel293)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .add(jPanel47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 41, Short.MAX_VALUE)
                .add(pnl_quickBillLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(pnl_quickBillLayout.createSequentialGroup()
                        .add(jLabel292)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        bg.add(pnl_quickBill, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 1070, 660));

        pnl_settings.setBackground(new java.awt.Color(255, 255, 255));

        jTable29.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable29.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable29.setGridColor(new java.awt.Color(255, 255, 255));
        jTable29.setRowHeight(22);
        jTable29.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTable29MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable29MousePressed(evt);
            }
        });
        jScrollPane52.setViewportView(jTable29);

        jLabel305.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel305.setText("Users");

        txt_search_text4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txt_search_text4.setForeground(new java.awt.Color(51, 51, 51));
        txt_search_text4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_search_text4.setSelectionColor(new java.awt.Color(110, 89, 222));
        txt_search_text4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_search_text4KeyPressed(evt);
            }
        });

        jLabel306.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel306.setText("User Name");

        jTextField139.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField139.setForeground(new java.awt.Color(51, 51, 51));
        jTextField139.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        jLabel307.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel307.setText("Password");

        jButton93.setBackground(new java.awt.Color(255, 255, 255));
        jButton93.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton93.setText("Save");
        jButton93.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton93.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton93.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton93ActionPerformed(evt);
            }
        });

        jLabel308.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel308.setText("Confirm Password");

        jTextField140.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField140.setForeground(new java.awt.Color(51, 51, 51));
        jTextField140.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        jButton94.setBackground(new java.awt.Color(255, 255, 255));
        jButton94.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton94.setText("Update");
        jButton94.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton94.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton94.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton94ActionPerformed(evt);
            }
        });

        jCheckBox15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jCheckBox15.setText("Admin");

        jButton95.setBackground(new java.awt.Color(255, 255, 255));
        jButton95.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton95.setText("Delete");
        jButton95.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton95.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton95.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton95ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout pnl_settingsLayout = new org.jdesktop.layout.GroupLayout(pnl_settings);
        pnl_settings.setLayout(pnl_settingsLayout);
        pnl_settingsLayout.setHorizontalGroup(
            pnl_settingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnl_settingsLayout.createSequentialGroup()
                .add(19, 19, 19)
                .add(pnl_settingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jButton95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(pnl_settingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jLabel305)
                        .add(jScrollPane52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 323, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(114, 114, 114)
                .add(pnl_settingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnl_settingsLayout.createSequentialGroup()
                        .add(pnl_settingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(pnl_settingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(jLabel306)
                                .add(jTextField139, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                                .add(jLabel307)
                                .add(txt_search_text4))
                            .add(jButton93, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 64, Short.MAX_VALUE)
                        .add(pnl_settingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jTextField140, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .add(jLabel308))
                        .add(116, 116, 116))
                    .add(pnl_settingsLayout.createSequentialGroup()
                        .add(jCheckBox15)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnl_settingsLayout.setVerticalGroup(
            pnl_settingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnl_settingsLayout.createSequentialGroup()
                .addContainerGap(108, Short.MAX_VALUE)
                .add(pnl_settingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnl_settingsLayout.createSequentialGroup()
                        .add(jLabel305)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 444, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(pnl_settingsLayout.createSequentialGroup()
                        .add(jLabel306)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txt_search_text4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(pnl_settingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(pnl_settingsLayout.createSequentialGroup()
                                .add(jLabel307)
                                .add(7, 7, 7)
                                .add(jTextField139, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(pnl_settingsLayout.createSequentialGroup()
                                .add(jLabel308)
                                .add(7, 7, 7)
                                .add(jTextField140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(18, 18, 18)
                        .add(jCheckBox15)
                        .add(8, 8, 8)
                        .add(jButton93, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jButton94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(39, 39, 39))
        );

        bg.add(pnl_settings, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 1070, 660));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(bg, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(bg, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1366, 768));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void subInitComp(){
		itemEdit = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        txt_edt_itemName = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txt_edt_packSize = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txt_edt_qty = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txt_edt_rPrice = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txt_edt_company = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel49 = new javax.swing.JLabel();
        txt_edt_wPrice = new javax.swing.JTextField();
        dChooser_edt_expDate = new com.toedter.calendar.JDateChooser();
        jPanel9 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        com_box_searchTyp2 = new javax.swing.JComboBox<>();
        itemsAdder = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jButton12 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        com_box_bill_itm_searchTyp = new javax.swing.JComboBox<>();
        txt_search_bill_itm = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbl_addBillItems = new javax.swing.JTable();
        jScrollPane54 = new javax.swing.JScrollPane();
        jTable33 = new javax.swing.JTable();
        jButton11 = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jButton109 = new javax.swing.JButton();
        txt_search_bill_itm1 = new javax.swing.JTextField();
        txt_search_bill_itm2 = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        serviceAdder = new javax.swing.JDialog();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jTextField28 = new javax.swing.JTextField();
        jTextField29 = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jButton22 = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jLabel69 = new javax.swing.JLabel();
        profit = new javax.swing.JDialog();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jDateChooser6 = new com.toedter.calendar.JDateChooser();
        jDateChooser7 = new com.toedter.calendar.JDateChooser();
        jButton35 = new javax.swing.JButton();
        jLabel94 = new javax.swing.JLabel();
        jLabel95 = new javax.swing.JLabel();
        txt_edt_company1 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txt_edt_company2 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        txt_edt_company3 = new javax.swing.JTextField();
        Warranty = new javax.swing.JDialog();
        jPanel34 = new javax.swing.JPanel();
        jPanel36 = new javax.swing.JPanel();
        jScrollPane22 = new javax.swing.JScrollPane();
        jTable15 = new javax.swing.JTable();
        jTextField71 = new javax.swing.JTextField();
        jLabel151 = new javax.swing.JLabel();
        jTextField72 = new javax.swing.JTextField();
        jLabel152 = new javax.swing.JLabel();
        jLabel153 = new javax.swing.JLabel();
        jLabel154 = new javax.swing.JLabel();
        jTextField73 = new javax.swing.JTextField();
        jLabel155 = new javax.swing.JLabel();
        jTextField74 = new javax.swing.JTextField();
        jScrollPane23 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jButton57 = new javax.swing.JButton();
        jLabel156 = new javax.swing.JLabel();
        jLabel157 = new javax.swing.JLabel();
        jTextField75 = new javax.swing.JTextField();
        jLabel158 = new javax.swing.JLabel();
        jLabel159 = new javax.swing.JLabel();
        jLabel160 = new javax.swing.JLabel();
        jTextField77 = new javax.swing.JTextField();
        jLabel162 = new javax.swing.JLabel();
        jTextField79 = new javax.swing.JTextField();
        jLabel163 = new javax.swing.JLabel();
        jTextField80 = new javax.swing.JTextField();
        jScrollPane24 = new javax.swing.JScrollPane();
        jTextArea6 = new javax.swing.JTextArea();
        jLabel161 = new javax.swing.JLabel();
        jLabel188 = new javax.swing.JLabel();
        jPanel37 = new javax.swing.JPanel();
        jLabel164 = new javax.swing.JLabel();
        jTextField76 = new javax.swing.JTextField();
        jButton58 = new javax.swing.JButton();
        jTextField82 = new javax.swing.JTextField();
        jLabel166 = new javax.swing.JLabel();
        jLabel167 = new javax.swing.JLabel();
        jTextField83 = new javax.swing.JTextField();
        jTextField84 = new javax.swing.JTextField();
        jLabel168 = new javax.swing.JLabel();
        jScrollPane25 = new javax.swing.JScrollPane();
        jTextArea7 = new javax.swing.JTextArea();
        jLabel169 = new javax.swing.JLabel();
        jButton59 = new javax.swing.JButton();
        jScrollPane26 = new javax.swing.JScrollPane();
        jTable16 = new javax.swing.JTable();
        jLabel172 = new javax.swing.JLabel();
        jCheckBox12 = new javax.swing.JCheckBox();
        jScrollPane31 = new javax.swing.JScrollPane();
        jTextArea11 = new javax.swing.JTextArea();
        jLabel199 = new javax.swing.JLabel();
        jTextField78 = new javax.swing.JTextField();
        jLabel170 = new javax.swing.JLabel();
        jButton71 = new javax.swing.JButton();
        jButton106 = new javax.swing.JButton();
        jButton119 = new javax.swing.JButton();
        returnItms = new javax.swing.JDialog();
        jPanel35 = new javax.swing.JPanel();
        jPanel38 = new javax.swing.JPanel();
        jScrollPane27 = new javax.swing.JScrollPane();
        jTable17 = new javax.swing.JTable();
        jTextField87 = new javax.swing.JTextField();
        jLabel173 = new javax.swing.JLabel();
        jTextField88 = new javax.swing.JTextField();
        jLabel174 = new javax.swing.JLabel();
        jLabel175 = new javax.swing.JLabel();
        jLabel176 = new javax.swing.JLabel();
        jTextField89 = new javax.swing.JTextField();
        jLabel177 = new javax.swing.JLabel();
        jTextField90 = new javax.swing.JTextField();
        jScrollPane28 = new javax.swing.JScrollPane();
        jTextArea8 = new javax.swing.JTextArea();
        jButton60 = new javax.swing.JButton();
        jLabel178 = new javax.swing.JLabel();
        jLabel179 = new javax.swing.JLabel();
        jTextField91 = new javax.swing.JTextField();
        jLabel180 = new javax.swing.JLabel();
        jLabel181 = new javax.swing.JLabel();
        jLabel182 = new javax.swing.JLabel();
        jTextField92 = new javax.swing.JTextField();
        jLabel184 = new javax.swing.JLabel();
        jTextField94 = new javax.swing.JTextField();
        jLabel185 = new javax.swing.JLabel();
        jTextField95 = new javax.swing.JTextField();
        jScrollPane29 = new javax.swing.JScrollPane();
        jTextArea9 = new javax.swing.JTextArea();
        jButton65 = new javax.swing.JButton();
        jLabel183 = new javax.swing.JLabel();
        jLabel186 = new javax.swing.JLabel();
        jButton62 = new javax.swing.JButton();
        jScrollPane30 = new javax.swing.JScrollPane();
        jTable40 = new javax.swing.JTable();
        jLabel189 = new javax.swing.JLabel();
        jButton114 = new javax.swing.JButton();
        jTextField93 = new javax.swing.JTextField();
        jLabel187 = new javax.swing.JLabel();
        jLabel190 = new javax.swing.JLabel();
        jTextField96 = new javax.swing.JTextField();
        jLabel191 = new javax.swing.JLabel();
        jTextField97 = new javax.swing.JTextField();
        billSubmition = new javax.swing.JDialog();
        jPanel24 = new javax.swing.JPanel();
        jComboBox8 = new javax.swing.JComboBox<>();
        jLabel2011 = new javax.swing.JLabel();
        jCheckBox14 = new javax.swing.JCheckBox();
        jScrollPane32 = new javax.swing.JScrollPane();
        jTable18 = new javax.swing.JTable();
        jComboBox9 = new javax.swing.JComboBox<>();
        jTextField107 = new javax.swing.JTextField();
        jButton68 = new javax.swing.JButton();
        jLabel202 = new javax.swing.JLabel();
        jTextField108 = new javax.swing.JTextField();
        jLabel203 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel206 = new javax.swing.JLabel();
        jTextField111 = new javax.swing.JTextField();
        jLabel207 = new javax.swing.JLabel();
        jTextField112 = new javax.swing.JTextField();
        jButton69 = new javax.swing.JButton();
        jLabel208 = new javax.swing.JLabel();
        jTextField113 = new javax.swing.JTextField();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        dailyCashBal = new javax.swing.JDialog();
        jPanel40 = new javax.swing.JPanel();
        jLabel211 = new javax.swing.JLabel();
        jLabel219 = new javax.swing.JLabel();
        jButton74 = new javax.swing.JButton();
        jLabel224 = new javax.swing.JLabel();
        jScrollPane39 = new javax.swing.JScrollPane();
        jTable25 = new javax.swing.JTable();
        jLabel225 = new javax.swing.JLabel();
        jScrollPane40 = new javax.swing.JScrollPane();
        jTable26 = new javax.swing.JTable();
        jLabel212 = new javax.swing.JLabel();
        jLabel220 = new javax.swing.JLabel();
        jButton75 = new javax.swing.JButton();
        jLabel209 = new javax.swing.JLabel();
        jDateChooser8 = new com.toedter.calendar.JDateChooser();
        jButton76 = new javax.swing.JButton();
        jLabel221 = new javax.swing.JLabel();
        jLabel222 = new javax.swing.JLabel();
        jLabel210 = new javax.swing.JLabel();
        jLabel213 = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        jTextField114 = new javax.swing.JTextField();
        jLabel214 = new javax.swing.JLabel();
        jScrollPane33 = new javax.swing.JScrollPane();
        jTextArea12 = new javax.swing.JTextArea();
        jLabel215 = new javax.swing.JLabel();
        jButton77 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel294 = new javax.swing.JLabel();
        jLabel196 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        editEnvoice = new javax.swing.JDialog();
        jPanel41 = new javax.swing.JPanel();
        jPanel42 = new javax.swing.JPanel();
        jScrollPane34 = new javax.swing.JScrollPane();
        jTable19 = new javax.swing.JTable();
        jTextField115 = new javax.swing.JTextField();
        jLabel217 = new javax.swing.JLabel();
        jTextField116 = new javax.swing.JTextField();
        jLabel218 = new javax.swing.JLabel();
        jLabel223 = new javax.swing.JLabel();
        jLabel226 = new javax.swing.JLabel();
        jTextField117 = new javax.swing.JTextField();
        jLabel227 = new javax.swing.JLabel();
        jTextField118 = new javax.swing.JTextField();
        jScrollPane35 = new javax.swing.JScrollPane();
        jTextArea13 = new javax.swing.JTextArea();
        jLabel228 = new javax.swing.JLabel();
        jLabel229 = new javax.swing.JLabel();
        jTextField119 = new javax.swing.JTextField();
        jLabel230 = new javax.swing.JLabel();
        jLabel231 = new javax.swing.JLabel();
        jLabel232 = new javax.swing.JLabel();
        jTextField120 = new javax.swing.JTextField();
        jLabel233 = new javax.swing.JLabel();
        jTextField121 = new javax.swing.JTextField();
        jLabel234 = new javax.swing.JLabel();
        jTextField122 = new javax.swing.JTextField();
        jLabel235 = new javax.swing.JLabel();
        jTextField123 = new javax.swing.JTextField();
        jScrollPane36 = new javax.swing.JScrollPane();
        jTextArea14 = new javax.swing.JTextArea();
        jLabel248 = new javax.swing.JLabel();
        jTextField133 = new javax.swing.JTextField();
        jLabel245 = new javax.swing.JLabel();
        jLabel246 = new javax.swing.JLabel();
        jButton113 = new javax.swing.JButton();
        jPanel43 = new javax.swing.JPanel();
        jTextField131 = new javax.swing.JTextField();
        jButton72 = new javax.swing.JButton();
        jScrollPane59 = new javax.swing.JScrollPane();
        jTable37 = new javax.swing.JTable();
        jScrollPane60 = new javax.swing.JScrollPane();
        jTable38 = new javax.swing.JTable();
        jButton110 = new javax.swing.JButton();
        jButton111 = new javax.swing.JButton();
        jTextField126 = new javax.swing.JTextField();
        jComboBox11 = new javax.swing.JComboBox<>();
        jButton112 = new javax.swing.JButton();
        jTextField132 = new javax.swing.JTextField();
        jLabel238 = new javax.swing.JLabel();
        jButton73 = new javax.swing.JButton();
        jScrollPane38 = new javax.swing.JScrollPane();
        jTable20 = new javax.swing.JTable();
        jTextField124 = new javax.swing.JTextField();
        jLabel236 = new javax.swing.JLabel();
        jScrollPane41 = new javax.swing.JScrollPane();
        jTable21 = new javax.swing.JTable();
        jLabel237 = new javax.swing.JLabel();
        jButton78 = new javax.swing.JButton();
        chequeInvo = new javax.swing.JDialog();
        jPanel44 = new javax.swing.JPanel();
        jTextField125 = new javax.swing.JTextField();
        jLabel249 = new javax.swing.JLabel();
        jLabel250 = new javax.swing.JLabel();
        jLabel251 = new javax.swing.JLabel();
        jLabel252 = new javax.swing.JLabel();
        jLabel253 = new javax.swing.JLabel();
        jLabel254 = new javax.swing.JLabel();
        jLabel255 = new javax.swing.JLabel();
        jLabel256 = new javax.swing.JLabel();
        jLabel257 = new javax.swing.JLabel();
        jLabel258 = new javax.swing.JLabel();
        jLabel259 = new javax.swing.JLabel();
        jLabel260 = new javax.swing.JLabel();
        jLabel261 = new javax.swing.JLabel();
        jButton79 = new javax.swing.JButton();
        creditInvo = new javax.swing.JDialog();
        jPanel45 = new javax.swing.JPanel();
        jScrollPane42 = new javax.swing.JScrollPane();
        jTable22 = new javax.swing.JTable();
        jLabel262 = new javax.swing.JLabel();
        jLabel263 = new javax.swing.JLabel();
        jLabel264 = new javax.swing.JLabel();
        jLabel265 = new javax.swing.JLabel();
        jLabel266 = new javax.swing.JLabel();
        jPanel46 = new javax.swing.JPanel();
        jLabel270 = new javax.swing.JLabel();
        jLabel271 = new javax.swing.JLabel();
        jLabel272 = new javax.swing.JLabel();
        jLabel273 = new javax.swing.JLabel();
        jLabel274 = new javax.swing.JLabel();
        jLabel275 = new javax.swing.JLabel();
        jLabel276 = new javax.swing.JLabel();
        jLabel277 = new javax.swing.JLabel();
        jLabel268 = new javax.swing.JLabel();
        jLabel269 = new javax.swing.JLabel();
        jTextField134 = new javax.swing.JTextField();
        jButton82 = new javax.swing.JButton();
        jButton83 = new javax.swing.JButton();
        jLabel278 = new javax.swing.JLabel();
        jLabel279 = new javax.swing.JLabel();
        jLabel280 = new javax.swing.JLabel();
        jLabel281 = new javax.swing.JLabel();
        jLabel282 = new javax.swing.JLabel();
        jLabel283 = new javax.swing.JLabel();
        jLabel284 = new javax.swing.JLabel();
        jLabel285 = new javax.swing.JLabel();
        jLabel286 = new javax.swing.JLabel();
        jLabel287 = new javax.swing.JLabel();
        addItemTypes = new javax.swing.JDialog();
        jPanel57 = new javax.swing.JPanel();
        jScrollPane50 = new javax.swing.JScrollPane();
        jTable30 = new javax.swing.JTable();
        jLabel310 = new javax.swing.JLabel();
        jTextField144 = new javax.swing.JTextField();
        jButton98 = new javax.swing.JButton();
        jButton99 = new javax.swing.JButton();
        adminLogin = new javax.swing.JDialog();
        jPanel49 = new javax.swing.JPanel();
        jButton87 = new javax.swing.JButton();
        jTextField136 = new javax.swing.JPasswordField();
        jLabel195 = new javax.swing.JLabel();
        editItemType = new javax.swing.JDialog();
        jPanel50 = new javax.swing.JPanel();
        jScrollPane48 = new javax.swing.JScrollPane();
        jTable23 = new javax.swing.JTable();
        jLabel295 = new javax.swing.JLabel();
        jButton88 = new javax.swing.JButton();
        jTextField137 = new javax.swing.JTextField();
        jLabel296 = new javax.swing.JLabel();
        jButton89 = new javax.swing.JButton();
        editItemJobType = new javax.swing.JDialog();
        jPanel51 = new javax.swing.JPanel();
        jScrollPane49 = new javax.swing.JScrollPane();
        jTable24 = new javax.swing.JTable();
        jLabel297 = new javax.swing.JLabel();
        jButton90 = new javax.swing.JButton();
        jTextField138 = new javax.swing.JTextField();
        jLabel298 = new javax.swing.JLabel();
        jButton91 = new javax.swing.JButton();
        adminLogin1 = new javax.swing.JDialog();
        jPanel52 = new javax.swing.JPanel();
        jButton92 = new javax.swing.JButton();
        jTextField141 = new javax.swing.JPasswordField();
        jLabel299 = new javax.swing.JLabel();
        adminLogin2 = new javax.swing.JDialog();
        jPanel53 = new javax.swing.JPanel();
        jButton96 = new javax.swing.JButton();
        jTextField142 = new javax.swing.JPasswordField();
        jLabel300 = new javax.swing.JLabel();
        adminLogin3 = new javax.swing.JDialog();
        jPanel54 = new javax.swing.JPanel();
        jButton97 = new javax.swing.JButton();
        jTextField143 = new javax.swing.JPasswordField();
        jLabel303 = new javax.swing.JLabel();
        addJobTypes = new javax.swing.JDialog();
        jPanel59 = new javax.swing.JPanel();
        jScrollPane53 = new javax.swing.JScrollPane();
        jTable32 = new javax.swing.JTable();
        jLabel312 = new javax.swing.JLabel();
        jTextField146 = new javax.swing.JTextField();
        jButton102 = new javax.swing.JButton();
        jButton103 = new javax.swing.JButton();
        edit_billed_Items = new javax.swing.JDialog();
        jPanel58 = new javax.swing.JPanel();
        jScrollPane56 = new javax.swing.JScrollPane();
        jTable34 = new javax.swing.JTable();
        jButton104 = new javax.swing.JButton();
        jButton105 = new javax.swing.JButton();
        edit_edit_billed_Items = new javax.swing.JDialog();
        jPanel60 = new javax.swing.JPanel();
        jScrollPane57 = new javax.swing.JScrollPane();
        jTable35 = new javax.swing.JTable();
        jButton107 = new javax.swing.JButton();
        edit_edit_billed_Items1 = new javax.swing.JDialog();
        jPanel61 = new javax.swing.JPanel();
        jScrollPane58 = new javax.swing.JScrollPane();
        jTable36 = new javax.swing.JTable();
        jButton108 = new javax.swing.JButton();
        billGroup = new javax.swing.ButtonGroup();
        adminLogin_item_edit = new javax.swing.JDialog();
        jPanel62 = new javax.swing.JPanel();
        jButton115 = new javax.swing.JButton();
        jTextField145 = new javax.swing.JPasswordField();
        jLabel316 = new javax.swing.JLabel();
        adminLogin_item_delete = new javax.swing.JDialog();
        jPanel63 = new javax.swing.JPanel();
        jButton116 = new javax.swing.JButton();
        jTextField147 = new javax.swing.JPasswordField();
        jLabel317 = new javax.swing.JLabel();
        adminLogin_item_delete_sn = new javax.swing.JDialog();
        jPanel64 = new javax.swing.JPanel();
        jButton117 = new javax.swing.JButton();
        jTextField148 = new javax.swing.JPasswordField();
        jLabel318 = new javax.swing.JLabel();
        edit_edit_billed_Items2 = new javax.swing.JDialog();
        jPanel65 = new javax.swing.JPanel();
        jScrollPane61 = new javax.swing.JScrollPane();
        jTable39 = new javax.swing.JTable();
        jButton118 = new javax.swing.JButton();
        edit_edit_billed_Items3 = new javax.swing.JDialog();
        jPanel66 = new javax.swing.JPanel();
        jScrollPane62 = new javax.swing.JScrollPane();
        jTable41 = new javax.swing.JTable();
        jButton120 = new javax.swing.JButton();
        edit_edit_billed_Items4 = new javax.swing.JDialog();
        jPanel67 = new javax.swing.JPanel();
        jButton121 = new javax.swing.JButton();
        jTextField149 = new javax.swing.JTextField();
        jLabel319 = new javax.swing.JLabel();
        bg = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btn_search = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btn_add = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        btn_billing = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        btn_bill_summ = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        btn_hr = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel107 = new javax.swing.JLabel();
        btn_hr2 = new javax.swing.JPanel();
        jLabel119 = new javax.swing.JLabel();
        jLabel120 = new javax.swing.JLabel();
        btn_billing1 = new javax.swing.JPanel();
        jLabel121 = new javax.swing.JLabel();
        jLabel122 = new javax.swing.JLabel();
        btn_hr4 = new javax.swing.JPanel();
        jLabel301 = new javax.swing.JLabel();
        jLabel302 = new javax.swing.JLabel();
        jLabel125 = new javax.swing.JLabel();
        jLabel140 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel74 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jLabel75 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel76 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jLabel77 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel78 = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        jLabel112 = new javax.swing.JLabel();
        jButton64 = new javax.swing.JButton();
        jPanel55 = new javax.swing.JPanel();
        jLabel304 = new javax.swing.JLabel();
        jPanel56 = new javax.swing.JPanel();
        jLabel309 = new javax.swing.JLabel();
        manueExit = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        manueMinimize = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        pnl_searchItm = new javax.swing.JPanel();
        txt_search_text = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_items_search = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        com_box_searchTyp = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jScrollPane55 = new javax.swing.JScrollPane();
        tbl_items_search1 = new javax.swing.JTable();
        jButton101 = new javax.swing.JButton();
        txt_search_text3 = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        pnl_addItms = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_addItems = new javax.swing.JTable();
        txt_add_wPrice = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txt_add_itemName = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        txt_add_retailPrice = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        txt_add_qty = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel50 = new javax.swing.JLabel();
        txt_add_packSize = new javax.swing.JTextField();
        jLabel91 = new javax.swing.JLabel();
        txt_add_qty1 = new javax.swing.JTextField();
        com_box_searchTyp1 = new javax.swing.JComboBox<>();
        jLabel92 = new javax.swing.JLabel();
        jButton20 = new javax.swing.JButton();
        jScrollPane51 = new javax.swing.JScrollPane();
        jTable31 = new javax.swing.JTable();
        jLabel311 = new javax.swing.JLabel();
        jLabel313 = new javax.swing.JLabel();
        jButton100 = new javax.swing.JButton();
        txt_add_qty2 = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        pnl_billing = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jButton23 = new javax.swing.JButton();
        jTextField30 = new javax.swing.JTextField();
        jButton21 = new javax.swing.JButton();
        jLabel53 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jCheckBox2 = new javax.swing.JCheckBox();
        jScrollPane43 = new javax.swing.JScrollPane();
        jTextArea16 = new javax.swing.JTextArea();
        jLabel267 = new javax.swing.JLabel();
        pnl_billingSumm = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jTextField24 = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jButton24 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton55 = new javax.swing.JButton();
        jButton56 = new javax.swing.JButton();
        jButton70 = new javax.swing.JButton();
        jButton80 = new javax.swing.JButton();
        jButton81 = new javax.swing.JButton();
        jLabel201 = new javax.swing.JLabel();
        jComboBox10 = new javax.swing.JComboBox<>();
        jButton19 = new javax.swing.JButton();
        dChooser_edt_expDate1 = new com.toedter.calendar.JDateChooser();
        dChooser_edt_expDate2 = new com.toedter.calendar.JDateChooser();
        jLabel314 = new javax.swing.JLabel();
        jLabel315 = new javax.swing.JLabel();
        pnl_hr = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jButton16 = new javax.swing.JButton();
        jTextField32 = new javax.swing.JTextField();
        jTextField33 = new javax.swing.JTextField();
        jTextField34 = new javax.swing.JTextField();
        jTextField35 = new javax.swing.JTextField();
        jButton27 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel82 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jDateChooser4 = new com.toedter.calendar.JDateChooser();
        jDateChooser5 = new com.toedter.calendar.JDateChooser();
        jLabel87 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jButton34 = new javax.swing.JButton();
        jTextField26 = new javax.swing.JTextField();
        jLabel89 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jComboBox5 = new javax.swing.JComboBox<>();
        jTextField11 = new javax.swing.JTextField();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jTextField19 = new javax.swing.JTextField();
        jTextField20 = new javax.swing.JTextField();
        jTextField21 = new javax.swing.JTextField();
        jTextField22 = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        jButton33 = new javax.swing.JButton();
        jTextField23 = new javax.swing.JTextField();
        jLabel90 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jTextField3 = new javax.swing.JTextField();
        jButton25 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jButton37 = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jLabel96 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jTextField31 = new javax.swing.JTextField();
        jLabel99 = new javax.swing.JLabel();
        jTextField36 = new javax.swing.JTextField();
        jLabel100 = new javax.swing.JLabel();
        jTextField37 = new javax.swing.JTextField();
        jTextField40 = new javax.swing.JTextField();
        jLabel103 = new javax.swing.JLabel();
        jTextField39 = new javax.swing.JTextField();
        jLabel102 = new javax.swing.JLabel();
        jTextField38 = new javax.swing.JTextField();
        jLabel101 = new javax.swing.JLabel();
        jLabel98 = new javax.swing.JLabel();
        jLabel104 = new javax.swing.JLabel();
        jTextField41 = new javax.swing.JTextField();
        jLabel105 = new javax.swing.JLabel();
        jTextField42 = new javax.swing.JTextField();
        jLabel106 = new javax.swing.JLabel();
        jTextField43 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel108 = new javax.swing.JLabel();
        jTextField45 = new javax.swing.JTextField();
        jButton38 = new javax.swing.JButton();
        jButton40 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel109 = new javax.swing.JLabel();
        jButton84 = new javax.swing.JButton();
        jLabel165 = new javax.swing.JLabel();
        jTextField81 = new javax.swing.JTextField();
        jPanel26 = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTable9 = new javax.swing.JTable();
        jTextField47 = new javax.swing.JTextField();
        jLabel110 = new javax.swing.JLabel();
        jTextField48 = new javax.swing.JTextField();
        jLabel111 = new javax.swing.JLabel();
        jTextField49 = new javax.swing.JTextField();
        jLabel123 = new javax.swing.JLabel();
        jLabel124 = new javax.swing.JLabel();
        jTextField50 = new javax.swing.JTextField();
        jLabel126 = new javax.swing.JLabel();
        jTextField52 = new javax.swing.JTextField();
        jButton43 = new javax.swing.JButton();
        jLabel127 = new javax.swing.JLabel();
        jTextField53 = new javax.swing.JTextField();
        jComboBox7 = new javax.swing.JComboBox<>();
        jButton67 = new javax.swing.JButton();
        jLabel200 = new javax.swing.JLabel();
        jTextField106 = new javax.swing.JTextField();
        jPanel30 = new javax.swing.JPanel();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTable10 = new javax.swing.JTable();
        jTextField54 = new javax.swing.JTextField();
        jLabel128 = new javax.swing.JLabel();
        jTextField55 = new javax.swing.JTextField();
        jLabel129 = new javax.swing.JLabel();
        jLabel130 = new javax.swing.JLabel();
        jLabel131 = new javax.swing.JLabel();
        jTextField57 = new javax.swing.JTextField();
        jLabel132 = new javax.swing.JLabel();
        jTextField58 = new javax.swing.JTextField();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jButton46 = new javax.swing.JButton();
        jLabel134 = new javax.swing.JLabel();
        jLabel135 = new javax.swing.JLabel();
        jButton45 = new javax.swing.JButton();
        jButton48 = new javax.swing.JButton();
        jScrollPane17 = new javax.swing.JScrollPane();
        jTable11 = new javax.swing.JTable();
        jTextField59 = new javax.swing.JTextField();
        jLabel133 = new javax.swing.JLabel();
        jButton50 = new javax.swing.JButton();
        jPanel27 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jScrollPane18 = new javax.swing.JScrollPane();
        jTable12 = new javax.swing.JTable();
        jTextField56 = new javax.swing.JTextField();
        jLabel136 = new javax.swing.JLabel();
        jTextField60 = new javax.swing.JTextField();
        jLabel137 = new javax.swing.JLabel();
        jTextField61 = new javax.swing.JTextField();
        jLabel138 = new javax.swing.JLabel();
        jLabel139 = new javax.swing.JLabel();
        jTextField62 = new javax.swing.JTextField();
        jLabel141 = new javax.swing.JLabel();
        jTextField64 = new javax.swing.JTextField();
        jButton44 = new javax.swing.JButton();
        jLabel142 = new javax.swing.JLabel();
        jTextField65 = new javax.swing.JTextField();
        jComboBox6 = new javax.swing.JComboBox<>();
        jButton66 = new javax.swing.JButton();
        jLabel171 = new javax.swing.JLabel();
        jTextField86 = new javax.swing.JTextField();
        jPanel33 = new javax.swing.JPanel();
        jScrollPane19 = new javax.swing.JScrollPane();
        jTable13 = new javax.swing.JTable();
        jTextField66 = new javax.swing.JTextField();
        jLabel143 = new javax.swing.JLabel();
        jTextField67 = new javax.swing.JTextField();
        jLabel144 = new javax.swing.JLabel();
        jLabel145 = new javax.swing.JLabel();
        jLabel146 = new javax.swing.JLabel();
        jTextField68 = new javax.swing.JTextField();
        jLabel147 = new javax.swing.JLabel();
        jTextField69 = new javax.swing.JTextField();
        jScrollPane20 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jButton47 = new javax.swing.JButton();
        jLabel148 = new javax.swing.JLabel();
        jLabel149 = new javax.swing.JLabel();
        jButton51 = new javax.swing.JButton();
        jCheckBox13 = new javax.swing.JCheckBox();
        jButton52 = new javax.swing.JButton();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTable14 = new javax.swing.JTable();
        jTextField70 = new javax.swing.JTextField();
        jLabel150 = new javax.swing.JLabel();
        jButton54 = new javax.swing.JButton();
        pnl_barcode = new javax.swing.JPanel();
        jTextField6 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jButton39 = new javax.swing.JButton();
        jTextField44 = new javax.swing.JTextField();
        jLabel113 = new javax.swing.JLabel();
        jLabel114 = new javax.swing.JLabel();
        jLabel115 = new javax.swing.JLabel();
        jTextField46 = new javax.swing.JTextField();
        jLabel116 = new javax.swing.JLabel();
        jCheckBox11 = new javax.swing.JCheckBox();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTable8 = new javax.swing.JTable();
        jButton42 = new javax.swing.JButton();
        jLabel117 = new javax.swing.JLabel();
        jLabel118 = new javax.swing.JLabel();
        lbl_main_time = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        lbl_main_date = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        pnl_quickBill = new javax.swing.JPanel();
        jPanel47 = new javax.swing.JPanel();
        txt_search_text1 = new javax.swing.JTextField();
        jLabel288 = new javax.swing.JLabel();
        jScrollPane44 = new javax.swing.JScrollPane();
        jTextArea17 = new javax.swing.JTextArea();
        jButton85 = new javax.swing.JButton();
        jLabel289 = new javax.swing.JLabel();
        jPanel48 = new javax.swing.JPanel();
        txt_search_text2 = new javax.swing.JTextField();
        jLabel290 = new javax.swing.JLabel();
        jScrollPane45 = new javax.swing.JScrollPane();
        jTextArea18 = new javax.swing.JTextArea();
        jButton86 = new javax.swing.JButton();
        jLabel291 = new javax.swing.JLabel();
        jScrollPane46 = new javax.swing.JScrollPane();
        jTable27 = new javax.swing.JTable();
        jScrollPane47 = new javax.swing.JScrollPane();
        jTable28 = new javax.swing.JTable();
        jLabel292 = new javax.swing.JLabel();
        jLabel293 = new javax.swing.JLabel();
        pnl_settings = new javax.swing.JPanel();
        jScrollPane52 = new javax.swing.JScrollPane();
        jTable29 = new javax.swing.JTable();
        jLabel305 = new javax.swing.JLabel();
        txt_search_text4 = new javax.swing.JTextField();
        jLabel306 = new javax.swing.JLabel();
        jTextField139 = new javax.swing.JPasswordField();
        jLabel307 = new javax.swing.JLabel();
        jButton93 = new javax.swing.JButton();
        jLabel308 = new javax.swing.JLabel();
        jTextField140 = new javax.swing.JPasswordField();
        jButton94 = new javax.swing.JButton();
        jCheckBox15 = new javax.swing.JCheckBox();
        jButton95 = new javax.swing.JButton();

        itemEdit.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_edt_itemName.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_edt_itemName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_edt_itemName.setSelectionColor(new java.awt.Color(110, 89, 222));
        jPanel3.add(txt_edt_itemName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 159, 267, 30));

        jLabel13.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel13.setText("Item Name");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 136, -1, -1));

        jLabel14.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel14.setText("Warranty (M)");
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 66, -1, -1));

        txt_edt_packSize.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_edt_packSize.setForeground(new java.awt.Color(51, 51, 51));
        txt_edt_packSize.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_edt_packSize.setSelectionColor(new java.awt.Color(110, 89, 222));
        jPanel3.add(txt_edt_packSize, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 89, 232, 30));

        jLabel15.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel15.setText("Qty");
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        txt_edt_qty.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_edt_qty.setForeground(new java.awt.Color(51, 51, 51));
        txt_edt_qty.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_edt_qty.setSelectionColor(new java.awt.Color(110, 89, 222));
        jPanel3.add(txt_edt_qty, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 223, 267, 30));

        jLabel16.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel16.setText("Retail Price (Rs)");
        jPanel3.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 137, -1, -1));

        txt_edt_rPrice.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_edt_rPrice.setForeground(new java.awt.Color(51, 51, 51));
        txt_edt_rPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_edt_rPrice.setSelectionColor(new java.awt.Color(110, 89, 222));
        jPanel3.add(txt_edt_rPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 159, 232, 30));

        jLabel17.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel17.setText("Item Code");
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 65, -1, -1));

        txt_edt_company.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_edt_company.setForeground(new java.awt.Color(51, 51, 51));
        txt_edt_company.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_edt_company.setSelectionColor(new java.awt.Color(110, 89, 222));
        jPanel3.add(txt_edt_company, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 88, 267, 30));
        jPanel3.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(572, 102, -1, -1));

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton3.setText("Update");
        jButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 335, 80, 39));

        jLabel49.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel49.setText("Wholesale Price (Rs)");
        jPanel3.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 264, -1, -1));

        txt_edt_wPrice.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_edt_wPrice.setForeground(new java.awt.Color(51, 51, 51));
        txt_edt_wPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_edt_wPrice.setSelectionColor(new java.awt.Color(110, 89, 222));
        jPanel3.add(txt_edt_wPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 288, 267, 30));

        dChooser_edt_expDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        dChooser_edt_expDate.setForeground(new java.awt.Color(51, 51, 51));
        dChooser_edt_expDate.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jPanel3.add(dChooser_edt_expDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 223, 232, 30));

        jPanel9.setBackground(new java.awt.Color(110, 89, 222));

        org.jdesktop.layout.GroupLayout jPanel9Layout = new org.jdesktop.layout.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 604, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 48, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel54.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel54.setText("Date");
        jPanel3.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 200, -1, -1));

        com_box_searchTyp2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        com_box_searchTyp2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Proccesor", "Mother Board", "Ram", "Rom", "Cooling", "Graphics Card", "Monitor", "Storage Drives", "PSU", "Mouse", "KeyBoard", "HeadSet", "Speakers", "LapTop", "DeskTop", "Connectors", "USB Adaptors", "Cables", "Other" }));
        com_box_searchTyp2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jPanel3.add(com_box_searchTyp2, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 287, 158, 30));

        itemEdit.getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        itemsAdder.setAlwaysOnTop(true);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jButton12.setBackground(new java.awt.Color(255, 255, 255));
        jButton12.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton12.setText("Add to Invoic List");
        jButton12.setBorder(null);
        jButton12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(110, 89, 222));

        com_box_bill_itm_searchTyp.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        com_box_bill_itm_searchTyp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item Name", "Item Code", "Category" }));
        com_box_bill_itm_searchTyp.setBorder(null);
        com_box_bill_itm_searchTyp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        com_box_bill_itm_searchTyp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                com_box_bill_itm_searchTypActionPerformed(evt);
            }
        });

        txt_search_bill_itm.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_search_bill_itm.setForeground(new java.awt.Color(51, 51, 51));
        txt_search_bill_itm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_search_bill_itm.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_search_bill_itm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_search_bill_itmKeyPressed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(255, 255, 255));
        jButton10.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton10.setText("Search");
        jButton10.setToolTipText("");
        jButton10.setBorder(null);
        jButton10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton10MousePressed(evt);
            }
        });
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        tbl_addBillItems.setAutoCreateRowSorter(true);
        tbl_addBillItems.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tbl_addBillItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Item Code", "Item Name", "Pack Size", "QTY", "W. Price", "R. Price", "Exp.Date", "Company"
            }
        ));
        tbl_addBillItems.setGridColor(new java.awt.Color(255, 255, 255));
        tbl_addBillItems.setRowHeight(20);
        tbl_addBillItems.setSelectionBackground(new java.awt.Color(110, 89, 222));
        tbl_addBillItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbl_addBillItemsMousePressed(evt);
            }
        });
        jScrollPane5.setViewportView(tbl_addBillItems);

        org.jdesktop.layout.GroupLayout jPanel8Layout = new org.jdesktop.layout.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .add(54, 54, 54)
                .add(com_box_bill_itm_searchTyp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(txt_search_bill_itm, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 157, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(41, 41, 41)
                .add(jButton10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 74, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .add(25, 25, 25)
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(com_box_bill_itm_searchTyp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txt_search_bill_itm, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTable33.setAutoCreateRowSorter(true);
        jTable33.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ));
        jTable33.setGridColor(new java.awt.Color(255, 255, 255));
        jTable33.setRowHeight(20);
        jTable33.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable33MousePressed(evt);
            }
        });
        jTable33.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable33KeyPressed(evt);
            }
        });
        jScrollPane54.setViewportView(jTable33);

        jButton11.setBackground(new java.awt.Color(255, 255, 255));
        jButton11.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_plus_math_32.png"))); // NOI18N
        jButton11.setToolTipText("");
        jButton11.setBorder(null);
        jButton11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton11MousePressed(evt);
            }
        });
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel34.setText("Serial Numbers");

        jButton109.setBackground(new java.awt.Color(255, 255, 255));
        jButton109.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton109.setText("Add Non Serial Items");
        jButton109.setToolTipText("");
        jButton109.setBorder(null);
        jButton109.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton109.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton109MousePressed(evt);
            }
        });
        jButton109.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton109ActionPerformed(evt);
            }
        });

        txt_search_bill_itm1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_search_bill_itm1.setForeground(new java.awt.Color(51, 51, 51));
        txt_search_bill_itm1.setToolTipText("Quantity");
        txt_search_bill_itm1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_search_bill_itm1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_search_bill_itm1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_search_bill_itm1KeyPressed(evt);
            }
        });

        txt_search_bill_itm2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_search_bill_itm2.setForeground(new java.awt.Color(51, 51, 51));
        txt_search_bill_itm2.setToolTipText("Quantity");
        txt_search_bill_itm2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_search_bill_itm2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_search_bill_itm2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_search_bill_itm2KeyPressed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel36.setText("Retail price:");

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPanel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                            .add(jButton12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 242, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(58, 58, 58)))
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(txt_search_bill_itm1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jButton109, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 163, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel36)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txt_search_bill_itm2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 153, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(0, 10, Short.MAX_VALUE)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 287, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(jLabel34)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jPanel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(txt_search_bill_itm1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton109, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(txt_search_bill_itm2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(66, 66, 66)
                        .add(jButton12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jLabel34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jScrollPane54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 289, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout itemsAdderLayout = new org.jdesktop.layout.GroupLayout(itemsAdder.getContentPane());
        itemsAdder.getContentPane().setLayout(itemsAdderLayout);
        itemsAdderLayout.setHorizontalGroup(
            itemsAdderLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        itemsAdderLayout.setVerticalGroup(
            itemsAdderLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
        );

        serviceAdder.setAlwaysOnTop(true);

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jScrollPane9.setViewportView(jTextArea1);

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel5.setText("Service Description");

        jLabel40.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel40.setText("QTY");

        jTextField28.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField28.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField28.setSelectionColor(new java.awt.Color(110, 89, 222));

        jTextField29.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField29.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField29.setSelectionColor(new java.awt.Color(110, 89, 222));

        jLabel42.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel42.setText("Price (Rs)");

        jLabel43.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel43.setText("Service Code :");

        jButton22.setBackground(new java.awt.Color(255, 255, 255));
        jButton22.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton22.setText("Add to Invoic List");
        jButton22.setBorder(null);
        jButton22.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jPanel18.setBackground(new java.awt.Color(110, 89, 222));

        org.jdesktop.layout.GroupLayout jPanel18Layout = new org.jdesktop.layout.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 48, Short.MAX_VALUE)
        );

        jLabel69.setBackground(new java.awt.Color(255, 255, 255));
        jLabel69.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel69.setText("Service Code");

        org.jdesktop.layout.GroupLayout jPanel17Layout = new org.jdesktop.layout.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel17Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel17Layout.createSequentialGroup()
                        .add(jLabel43)
                        .add(18, 18, 18)
                        .add(jLabel69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 127, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jLabel40)
                    .add(jTextField28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 127, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel42)
                    .add(jTextField29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 127, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 105, Short.MAX_VALUE)
                .add(jPanel17Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButton22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 242, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jScrollPane9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 272, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel5))
                .addContainerGap())
            .add(jPanel18, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel17Layout.createSequentialGroup()
                .add(jPanel18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(26, 26, 26)
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel17Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel17Layout.createSequentialGroup()
                        .add(jPanel17Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel43)
                            .add(jLabel69))
                        .add(31, 31, 31)
                        .add(jLabel40)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jLabel42)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 139, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 25, Short.MAX_VALUE)
                .add(jButton22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(42, 42, 42))
        );

        org.jdesktop.layout.GroupLayout serviceAdderLayout = new org.jdesktop.layout.GroupLayout(serviceAdder.getContentPane());
        serviceAdder.getContentPane().setLayout(serviceAdderLayout);
        serviceAdderLayout.setHorizontalGroup(
            serviceAdderLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel17, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        serviceAdderLayout.setVerticalGroup(
            serviceAdderLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel17, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        profit.setAlwaysOnTop(true);

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));

        jPanel20.setBackground(new java.awt.Color(110, 89, 222));

        org.jdesktop.layout.GroupLayout jPanel20Layout = new org.jdesktop.layout.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 48, Short.MAX_VALUE)
        );

        jDateChooser6.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser6.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        jDateChooser7.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser7.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        jButton35.setBackground(new java.awt.Color(255, 255, 255));
        jButton35.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton35.setText("Calculate");
        jButton35.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton35.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });

        jLabel94.setBackground(new java.awt.Color(255, 255, 255));
        jLabel94.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel94.setText("TO");

        jLabel95.setBackground(new java.awt.Color(255, 255, 255));
        jLabel95.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel95.setText("FROM");

        txt_edt_company1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_edt_company1.setForeground(new java.awt.Color(51, 51, 51));
        txt_edt_company1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_edt_company1.setSelectionColor(new java.awt.Color(110, 89, 222));

        jLabel27.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel27.setText("Total Cost (Rs)");

        txt_edt_company2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_edt_company2.setForeground(new java.awt.Color(51, 51, 51));
        txt_edt_company2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_edt_company2.setSelectionColor(new java.awt.Color(110, 89, 222));

        jLabel33.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel33.setText("Total Revenue (Rs)");

        jLabel68.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel68.setText("Profit (Rs)");

        txt_edt_company3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        txt_edt_company3.setForeground(new java.awt.Color(51, 51, 51));
        txt_edt_company3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        txt_edt_company3.setSelectionColor(new java.awt.Color(110, 89, 222));

        org.jdesktop.layout.GroupLayout jPanel19Layout = new org.jdesktop.layout.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel20, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel19Layout.createSequentialGroup()
                .add(27, 27, 27)
                .add(jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel19Layout.createSequentialGroup()
                        .add(jLabel95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jDateChooser6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jLabel94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jDateChooser7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(46, 46, 46)
                        .add(jButton35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(jPanel19Layout.createSequentialGroup()
                            .add(jLabel33)
                            .add(18, 18, 18)
                            .add(txt_edt_company2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 178, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(jPanel19Layout.createSequentialGroup()
                            .add(jLabel27)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(txt_edt_company1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 178, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(jPanel19Layout.createSequentialGroup()
                            .add(jLabel68)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(txt_edt_company3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 178, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel19Layout.createSequentialGroup()
                .add(jPanel20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(50, 50, 50)
                .add(jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jButton35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jDateChooser7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jLabel95)
                        .add(jLabel94))
                    .add(jDateChooser6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 70, Short.MAX_VALUE)
                .add(jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txt_edt_company1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel27))
                .add(18, 18, 18)
                .add(jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txt_edt_company2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel33))
                .add(18, 18, 18)
                .add(jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txt_edt_company3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel68))
                .add(53, 53, 53))
        );

        org.jdesktop.layout.GroupLayout profitLayout = new org.jdesktop.layout.GroupLayout(profit.getContentPane());
        profit.getContentPane().setLayout(profitLayout);
        profitLayout.setHorizontalGroup(
            profitLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel19, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        profitLayout.setVerticalGroup(
            profitLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel19, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        Warranty.setAlwaysOnTop(true);
        Warranty.setBackground(new java.awt.Color(255, 255, 255));

        jPanel34.setBackground(new java.awt.Color(255, 255, 255));

        jPanel36.setBackground(new java.awt.Color(255, 255, 255));
        jPanel36.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Warranty Invoice", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12))); // NOI18N

        jTable15.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable15.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable15.setGridColor(new java.awt.Color(255, 255, 255));
        jTable15.setRowHeight(20);
        jTable15.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable15MousePressed(evt);
            }
        });
        jScrollPane22.setViewportView(jTable15);

        jTextField71.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField71ActionPerformed(evt);
            }
        });

        jLabel151.setBackground(new java.awt.Color(255, 255, 255));
        jLabel151.setText("Total :");

        jTextField72.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField72ActionPerformed(evt);
            }
        });

        jLabel152.setBackground(new java.awt.Color(255, 255, 255));
        jLabel152.setText("Customer :");

        jLabel153.setBackground(new java.awt.Color(255, 255, 255));
        jLabel153.setText("Discription : ");

        jLabel154.setBackground(new java.awt.Color(255, 255, 255));
        jLabel154.setText("Discount (Rs) : ");

        jTextField73.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField73ActionPerformed(evt);
            }
        });

        jLabel155.setBackground(new java.awt.Color(255, 255, 255));
        jLabel155.setText("Net Amount (Rs) :");

        jTextField74.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField74ActionPerformed(evt);
            }
        });

        jTextArea5.setColumns(20);
        jTextArea5.setLineWrap(true);
        jTextArea5.setRows(5);
        jTextArea5.setWrapStyleWord(true);
        jScrollPane23.setViewportView(jTextArea5);

        jButton57.setBackground(new java.awt.Color(255, 255, 255));
        jButton57.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton57.setText("Add to Warranty");
        jButton57.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton57ActionPerformed(evt);
            }
        });

        jLabel156.setText("Invoice No : ");

        jLabel157.setBackground(new java.awt.Color(255, 255, 255));
        jLabel157.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel157.setText("AC00001");

        jTextField75.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField75ActionPerformed(evt);
            }
        });

        jLabel158.setBackground(new java.awt.Color(255, 255, 255));
        jLabel158.setText("Item Code : ");

        jLabel159.setBackground(new java.awt.Color(255, 255, 255));
        jLabel159.setText("Item Discription : ");

        jLabel160.setBackground(new java.awt.Color(255, 255, 255));
        jLabel160.setText("Unit Price : ");

        jTextField77.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField77ActionPerformed(evt);
            }
        });

        jLabel162.setBackground(new java.awt.Color(255, 255, 255));
        jLabel162.setText("QTY : ");

        jTextField79.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField79ActionPerformed(evt);
            }
        });

        jLabel163.setBackground(new java.awt.Color(255, 255, 255));
        jLabel163.setText("Warranty : ");

        jTextField80.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField80ActionPerformed(evt);
            }
        });

        jTextArea6.setColumns(20);
        jTextArea6.setLineWrap(true);
        jTextArea6.setRows(5);
        jTextArea6.setWrapStyleWord(true);
        jScrollPane24.setViewportView(jTextArea6);

        jLabel161.setBackground(new java.awt.Color(255, 255, 255));
        jLabel161.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel161.setText("Type");

        jLabel188.setText("Invoice Type : ");

        org.jdesktop.layout.GroupLayout jPanel36Layout = new org.jdesktop.layout.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel36Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel36Layout.createSequentialGroup()
                        .add(jButton57)
                        .add(346, 346, 346)
                        .add(jLabel151)
                        .add(19, 19, 19)
                        .add(jTextField71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel36Layout.createSequentialGroup()
                        .add(jLabel156)
                        .add(4, 4, 4)
                        .add(jLabel157)
                        .add(56, 56, 56)
                        .add(jLabel188)
                        .add(4, 4, 4)
                        .add(jLabel161, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 154, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 656, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(9, 9, 9)
                .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel36Layout.createSequentialGroup()
                        .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabel152, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel153, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 62, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jTextField72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 166, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jScrollPane23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel36Layout.createSequentialGroup()
                        .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel154)
                            .add(jLabel155))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jTextField73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jTextField74, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel162)
                    .add(jLabel160)
                    .add(jLabel159)
                    .add(jLabel158)
                    .add(jLabel163, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(4, 4, 4)
                .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel36Layout.createSequentialGroup()
                        .add(jTextField80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(16, 16, 16))
                    .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jTextField77, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jTextField75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jTextField79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jScrollPane24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel36Layout.createSequentialGroup()
                .add(2, 2, 2)
                .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel36Layout.createSequentialGroup()
                        .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel156)
                            .add(jLabel157)
                            .add(jLabel188)
                            .add(jLabel161))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 219, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel151)
                            .add(jTextField71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton57, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel36Layout.createSequentialGroup()
                        .add(9, 9, 9)
                        .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel36Layout.createSequentialGroup()
                                .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel154)
                                    .add(jTextField73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(7, 7, 7)
                                .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel155)
                                    .add(jTextField74, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(jPanel36Layout.createSequentialGroup()
                                .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel36Layout.createSequentialGroup()
                                        .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                            .add(jLabel152)
                                            .add(jTextField72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .add(18, 18, 18)
                                        .add(jLabel153))
                                    .add(jPanel36Layout.createSequentialGroup()
                                        .add(40, 40, 40)
                                        .add(jScrollPane23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(jLabel158)
                                    .add(jPanel36Layout.createSequentialGroup()
                                        .add(33, 33, 33)
                                        .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jPanel36Layout.createSequentialGroup()
                                                .add(118, 118, 118)
                                                .add(jLabel160))
                                            .add(jLabel159)))
                                    .add(jPanel36Layout.createSequentialGroup()
                                        .add(jTextField75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(jScrollPane24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(18, 18, 18)
                                        .add(jTextField77, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .add(18, 18, 18)
                                .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jTextField79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel162))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jTextField80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel163))))))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel37.setBackground(new java.awt.Color(255, 255, 255));
        jPanel37.setBorder(javax.swing.BorderFactory.createTitledBorder("Exchanging Item"));

        jLabel164.setBackground(new java.awt.Color(255, 255, 255));
        jLabel164.setText("Serial Number : ");

        jTextField76.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField76ActionPerformed(evt);
            }
        });
        jTextField76.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField76KeyPressed(evt);
            }
        });

        jButton58.setBackground(new java.awt.Color(255, 255, 255));
        jButton58.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton58.setText("Claim And Print New Invoice");
        jButton58.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton58ActionPerformed(evt);
            }
        });

        jTextField82.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField82ActionPerformed(evt);
            }
        });

        jLabel166.setBackground(new java.awt.Color(255, 255, 255));
        jLabel166.setText("Warranty : ");

        jLabel167.setBackground(new java.awt.Color(255, 255, 255));
        jLabel167.setText("QTY : ");

        jTextField83.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField83ActionPerformed(evt);
            }
        });

        jTextField84.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField84ActionPerformed(evt);
            }
        });

        jLabel168.setBackground(new java.awt.Color(255, 255, 255));
        jLabel168.setText("Unit Price : ");

        jTextArea7.setColumns(20);
        jTextArea7.setLineWrap(true);
        jTextArea7.setRows(5);
        jTextArea7.setWrapStyleWord(true);
        jScrollPane25.setViewportView(jTextArea7);

        jLabel169.setBackground(new java.awt.Color(255, 255, 255));
        jLabel169.setText("Item Discription : ");

        jButton59.setBackground(new java.awt.Color(255, 255, 255));
        jButton59.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton59.setText("Claimed");
        jButton59.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton59ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel37Layout = new org.jdesktop.layout.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel37Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel37Layout.createSequentialGroup()
                        .add(jLabel164)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel37Layout.createSequentialGroup()
                        .add(15, 15, 15)
                        .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jPanel37Layout.createSequentialGroup()
                                .add(jLabel168)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jTextField84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 148, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel37Layout.createSequentialGroup()
                                .add(jLabel167)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jTextField83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .add(0, 0, Short.MAX_VALUE))
            .add(jPanel37Layout.createSequentialGroup()
                .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel37Layout.createSequentialGroup()
                        .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel169)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel166, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jTextField82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 0, Short.MAX_VALUE))
                    .add(jPanel37Layout.createSequentialGroup()
                        .add(jButton58)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 12, Short.MAX_VALUE)
                        .add(jButton59)))
                .addContainerGap())
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel37Layout.createSequentialGroup()
                .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel164))
                .add(14, 14, 14)
                .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel169)
                    .add(jScrollPane25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel168))
                .add(18, 18, 18)
                .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel167))
                .add(11, 11, 11)
                .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel166))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 11, Short.MAX_VALUE)
                .add(jPanel37Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTable16.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable16.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable16.setGridColor(new java.awt.Color(255, 255, 255));
        jTable16.setRowHeight(20);
        jTable16.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable16.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable16AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jTable16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable16MousePressed(evt);
            }
        });
        jScrollPane26.setViewportView(jTable16);

        jLabel172.setText("Warranty Item List");

        jCheckBox12.setText("Claimed");
        jCheckBox12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox12ActionPerformed(evt);
            }
        });

        jTextArea11.setColumns(20);
        jTextArea11.setLineWrap(true);
        jTextArea11.setRows(5);
        jTextArea11.setWrapStyleWord(true);
        jScrollPane31.setViewportView(jTextArea11);

        jLabel199.setText("Note :");

        jTextField78.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField78ActionPerformed(evt);
            }
        });

        jLabel170.setBackground(new java.awt.Color(255, 255, 255));
        jLabel170.setText("Invoice Number :");

        jButton71.setBackground(new java.awt.Color(255, 255, 255));
        jButton71.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton71.setText("Delete Warranty");
        jButton71.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton71ActionPerformed(evt);
            }
        });

        jButton106.setBackground(new java.awt.Color(255, 255, 255));
        jButton106.setText("Search");
        jButton106.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton106ActionPerformed(evt);
            }
        });

        jButton119.setBackground(new java.awt.Color(255, 255, 255));
        jButton119.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton119.setText("Delete Claimed");
        jButton119.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton119ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel34Layout = new org.jdesktop.layout.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel34Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel36, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel34Layout.createSequentialGroup()
                        .add(jPanel37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel34Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane26)
                            .add(jPanel34Layout.createSequentialGroup()
                                .add(jLabel172)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jTextField78, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 146, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jButton106, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel34Layout.createSequentialGroup()
                                .add(jLabel199)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jScrollPane31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 434, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jCheckBox12)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jButton119, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 127, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jButton71)))))
                .addContainerGap())
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel34Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel34Layout.createSequentialGroup()
                        .add(4, 4, 4)
                        .add(jPanel34Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel172)
                            .add(jPanel34Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jTextField78, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jLabel170)
                                .add(jButton106)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 195, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel34Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 74, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel199)
                            .add(jPanel34Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jCheckBox12)
                                .add(jButton71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jButton119, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout WarrantyLayout = new org.jdesktop.layout.GroupLayout(Warranty.getContentPane());
        Warranty.getContentPane().setLayout(WarrantyLayout);
        WarrantyLayout.setHorizontalGroup(
            WarrantyLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel34, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        WarrantyLayout.setVerticalGroup(
            WarrantyLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        returnItms.setAlwaysOnTop(true);

        jPanel35.setBackground(new java.awt.Color(255, 255, 255));

        jPanel38.setBackground(new java.awt.Color(255, 255, 255));
        jPanel38.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Return Invoice", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12))); // NOI18N

        jTable17.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable17.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable17.setGridColor(new java.awt.Color(255, 255, 255));
        jTable17.setRowHeight(20);
        jTable17.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable17MousePressed(evt);
            }
        });
        jScrollPane27.setViewportView(jTable17);

        jTextField87.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField87ActionPerformed(evt);
            }
        });

        jLabel173.setBackground(new java.awt.Color(255, 255, 255));
        jLabel173.setText("Total :");

        jTextField88.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField88ActionPerformed(evt);
            }
        });

        jLabel174.setBackground(new java.awt.Color(255, 255, 255));
        jLabel174.setText("Customer :");

        jLabel175.setBackground(new java.awt.Color(255, 255, 255));
        jLabel175.setText("Discription : ");

        jLabel176.setBackground(new java.awt.Color(255, 255, 255));
        jLabel176.setText("Discount (Rs) : ");

        jTextField89.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField89ActionPerformed(evt);
            }
        });

        jLabel177.setBackground(new java.awt.Color(255, 255, 255));
        jLabel177.setText("Net Amount (Rs) :");

        jTextField90.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField90ActionPerformed(evt);
            }
        });

        jTextArea8.setColumns(20);
        jTextArea8.setLineWrap(true);
        jTextArea8.setRows(5);
        jTextArea8.setWrapStyleWord(true);
        jScrollPane28.setViewportView(jTextArea8);

        jButton60.setBackground(new java.awt.Color(255, 255, 255));
        jButton60.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton60.setText("Return ");
        jButton60.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton60ActionPerformed(evt);
            }
        });

        jLabel178.setText("Invoice No : ");

        jLabel179.setBackground(new java.awt.Color(255, 255, 255));
        jLabel179.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel179.setText("AC00001");

        jTextField91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField91ActionPerformed(evt);
            }
        });

        jLabel180.setBackground(new java.awt.Color(255, 255, 255));
        jLabel180.setText("Item Code : ");

        jLabel181.setBackground(new java.awt.Color(255, 255, 255));
        jLabel181.setText("Item Discription : ");

        jLabel182.setBackground(new java.awt.Color(255, 255, 255));
        jLabel182.setText("Unit Price : ");

        jTextField92.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField92ActionPerformed(evt);
            }
        });

        jLabel184.setBackground(new java.awt.Color(255, 255, 255));
        jLabel184.setText("QTY : ");

        jTextField94.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField94ActionPerformed(evt);
            }
        });

        jLabel185.setBackground(new java.awt.Color(255, 255, 255));
        jLabel185.setText("Warranty : ");

        jTextField95.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField95ActionPerformed(evt);
            }
        });

        jTextArea9.setColumns(20);
        jTextArea9.setLineWrap(true);
        jTextArea9.setRows(5);
        jTextArea9.setWrapStyleWord(true);
        jScrollPane29.setViewportView(jTextArea9);

        jButton65.setBackground(new java.awt.Color(255, 255, 255));
        jButton65.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton65.setText("Delete ");
        jButton65.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton65ActionPerformed(evt);
            }
        });

        jLabel183.setText("Invoice Type : ");

        jLabel186.setBackground(new java.awt.Color(255, 255, 255));
        jLabel186.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel186.setText("AC00001");

        org.jdesktop.layout.GroupLayout jPanel38Layout = new org.jdesktop.layout.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel38Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel38Layout.createSequentialGroup()
                        .add(jButton60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jButton65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel173)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel38Layout.createSequentialGroup()
                        .add(jLabel178)
                        .add(4, 4, 4)
                        .add(jLabel179)
                        .add(52, 52, 52)
                        .add(jLabel183)
                        .add(4, 4, 4)
                        .add(jLabel186, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 102, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(jPanel38Layout.createSequentialGroup()
                        .add(0, 5, Short.MAX_VALUE)
                        .add(jScrollPane27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 707, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel38Layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jPanel38Layout.createSequentialGroup()
                                .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(jLabel174, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(jLabel175, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 62, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jTextField88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 166, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jScrollPane28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(jPanel38Layout.createSequentialGroup()
                                .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jLabel177)
                                    .add(jLabel176))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jTextField89, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jTextField90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                        .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel38Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel181, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel38Layout.createSequentialGroup()
                                        .add(0, 0, Short.MAX_VALUE)
                                        .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel185, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel184)))))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel38Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel180)
                                .add(8, 8, 8))))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel38Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel182)))
                .add(18, 18, 18)
                .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jTextField95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(jTextField92)
                        .add(jTextField91)
                        .add(jTextField94)
                        .add(jScrollPane29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel38Layout.createSequentialGroup()
                .add(2, 2, 2)
                .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel178)
                    .add(jLabel179)
                    .add(jLabel183)
                    .add(jLabel186))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel38Layout.createSequentialGroup()
                        .add(147, 147, 147)
                        .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextField92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel182))
                        .add(36, 36, 36)
                        .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextField94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel184))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextField95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel185))
                        .add(0, 0, Short.MAX_VALUE))
                    .add(jPanel38Layout.createSequentialGroup()
                        .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel38Layout.createSequentialGroup()
                                .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel174)
                                    .add(jTextField88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel180)
                                    .add(jTextField91, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(18, 18, 18)
                                .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel175)
                                    .add(jScrollPane29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel181)))
                            .add(jPanel38Layout.createSequentialGroup()
                                .add(40, 40, 40)
                                .add(jScrollPane28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel38Layout.createSequentialGroup()
                                .add(jScrollPane27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 223, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel38Layout.createSequentialGroup()
                                        .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                            .add(jLabel176)
                                            .add(jTextField89, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .add(7, 7, 7)
                                        .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                            .add(jLabel177)
                                            .add(jTextField90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                    .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(jTextField87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jLabel173))
                                    .add(jPanel38Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(jButton60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jButton65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(21, Short.MAX_VALUE))))
        );

        jButton62.setBackground(new java.awt.Color(255, 255, 255));
        jButton62.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton62.setText("Submit And Print");
        jButton62.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton62ActionPerformed(evt);
            }
        });

        jTable40.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable40.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable40.setGridColor(new java.awt.Color(255, 255, 255));
        jTable40.setRowHeight(20);
        jTable40.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable40.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable40MousePressed(evt);
            }
        });
        jScrollPane30.setViewportView(jTable40);

        jLabel189.setText("Return Items");

        jButton114.setBackground(new java.awt.Color(255, 255, 255));
        jButton114.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton114.setText("Delete Returned Item ");
        jButton114.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton114ActionPerformed(evt);
            }
        });

        jTextField93.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField93ActionPerformed(evt);
            }
        });

        jLabel187.setBackground(new java.awt.Color(255, 255, 255));
        jLabel187.setText("Diifference Amount (Rs) : ");

        jLabel190.setBackground(new java.awt.Color(255, 255, 255));
        jLabel190.setText("Total Return Amount (Rs) : ");

        jTextField96.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField96ActionPerformed(evt);
            }
        });

        jLabel191.setBackground(new java.awt.Color(255, 255, 255));
        jLabel191.setText("Total Item Value (Rs) : ");

        jTextField97.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField97ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel35Layout = new org.jdesktop.layout.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel35Layout.createSequentialGroup()
                .add(jPanel35Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel35Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel35Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel35Layout.createSequentialGroup()
                                .add(jLabel189)
                                .add(0, 0, Short.MAX_VALUE))
                            .add(jPanel35Layout.createSequentialGroup()
                                .add(jScrollPane30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 707, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jPanel35Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel35Layout.createSequentialGroup()
                                        .add(jLabel187)
                                        .add(12, 12, 12)
                                        .add(jPanel35Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                            .add(jButton62, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .add(jTextField93, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 141, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel35Layout.createSequentialGroup()
                                        .add(jLabel190)
                                        .add(12, 12, 12)
                                        .add(jTextField96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 141, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel35Layout.createSequentialGroup()
                                        .add(jLabel191)
                                        .add(12, 12, 12)
                                        .add(jTextField97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 141, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))))
                    .add(jPanel38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(0, 8, Short.MAX_VALUE))
            .add(jPanel35Layout.createSequentialGroup()
                .addContainerGap()
                .add(jButton114)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel35Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jLabel189)
                .add(9, 9, 9)
                .add(jPanel35Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jScrollPane30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 223, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel35Layout.createSequentialGroup()
                        .add(jPanel35Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel191)
                            .add(jTextField97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel35Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel190)
                            .add(jTextField96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel35Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel187)
                            .add(jTextField93, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jButton62, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout returnItmsLayout = new org.jdesktop.layout.GroupLayout(returnItms.getContentPane());
        returnItms.getContentPane().setLayout(returnItmsLayout);
        returnItmsLayout.setHorizontalGroup(
            returnItmsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel35, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        returnItmsLayout.setVerticalGroup(
            returnItmsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel35, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        billSubmition.setAlwaysOnTop(true);

        jPanel24.setBackground(new java.awt.Color(255, 255, 255));

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash Invoice", "Credit Invoice", "Cheque Invoice" }));
        jComboBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox8ActionPerformed(evt);
            }
        });

        jLabel2011.setText("Invoice Type: ");

        jCheckBox14.setText("Advanced Payment");

        jTable18.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable18.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable18.setGridColor(new java.awt.Color(255, 255, 255));
        jTable18.setRowHeight(20);
        jTable18.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable18MousePressed(evt);
            }
        });
        jScrollPane32.setViewportView(jTable18);

        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Advanced Code", "Customer Name" }));

        jButton68.setText("Search ");
        jButton68.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton68ActionPerformed(evt);
            }
        });

        jLabel202.setText("Credit Cash Received :");

        jTextField108.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField108ActionPerformed(evt);
            }
        });
        jTextField108.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField108KeyTyped(evt);
            }
        });

        jLabel203.setText("Due Date :");

        jLabel206.setText("Grand Amount :");

        jTextField111.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField111KeyTyped(evt);
            }
        });

        jLabel207.setText("Due Amount :");

        jTextField112.setEditable(false);

        jButton69.setText("Print Invoice");
        jButton69.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton69ActionPerformed(evt);
            }
        });

        jLabel208.setText("Cheque Number :");

        jTextField113.setText("#");

        billGroup.add(jRadioButton3);
        jRadioButton3.setText("E-shop");

        billGroup.add(jRadioButton4);
        jRadioButton4.setSelected(true);
        jRadioButton4.setText("E-Print");

        billGroup.add(jRadioButton5);
        jRadioButton5.setText("E-Zag");

        org.jdesktop.layout.GroupLayout jPanel24Layout = new org.jdesktop.layout.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel24Layout.createSequentialGroup()
                        .add(jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel24Layout.createSequentialGroup()
                                .add(jLabel2011)
                                .add(18, 18, 18)
                                .add(jComboBox8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel24Layout.createSequentialGroup()
                                    .add(jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(jLabel207)
                                        .add(jLabel203))
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jDateChooser1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel24Layout.createSequentialGroup()
                                    .add(jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(jLabel202)
                                        .add(jLabel206))
                                    .add(18, 18, 18)
                                    .add(jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(jTextField111, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jTextField108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                            .add(jPanel24Layout.createSequentialGroup()
                                .add(jLabel208)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jTextField113, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 32, Short.MAX_VALUE)
                        .add(jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 531, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel24Layout.createSequentialGroup()
                                .add(jCheckBox14)
                                .add(58, 58, 58)
                                .add(jComboBox9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jTextField107, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jButton68))))
                    .add(jPanel24Layout.createSequentialGroup()
                        .add(jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton69)
                            .add(jPanel24Layout.createSequentialGroup()
                                .add(jRadioButton3)
                                .add(18, 18, 18)
                                .add(jRadioButton4)
                                .add(18, 18, 18)
                                .add(jRadioButton5)))
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jComboBox8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2011)
                    .add(jCheckBox14)
                    .add(jComboBox9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField107, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton68))
                .add(jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel24Layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel206)
                            .add(jTextField111, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(44, 44, 44)
                        .add(jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel202)
                            .add(jTextField108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel207)
                            .add(jTextField112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel208)
                            .add(jTextField113, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel203)
                            .add(jDateChooser1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel24Layout.createSequentialGroup()
                        .add(5, 5, 5)
                        .add(jScrollPane32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 220, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 32, Short.MAX_VALUE)
                .add(jPanel24Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jRadioButton3)
                    .add(jRadioButton4)
                    .add(jRadioButton5))
                .add(39, 39, 39)
                .add(jButton69)
                .add(31, 31, 31))
        );

        org.jdesktop.layout.GroupLayout billSubmitionLayout = new org.jdesktop.layout.GroupLayout(billSubmition.getContentPane());
        billSubmition.getContentPane().setLayout(billSubmitionLayout);
        billSubmitionLayout.setHorizontalGroup(
            billSubmitionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel24, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        billSubmitionLayout.setVerticalGroup(
            billSubmitionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel24, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        dailyCashBal.setAlwaysOnTop(true);
        dailyCashBal.setBackground(new java.awt.Color(255, 255, 255));

        jPanel40.setBackground(new java.awt.Color(255, 255, 255));

        jLabel211.setText("Debited Payments");

        jLabel219.setText("Total (Rs) : ");

        jButton74.setText("Delete");
        jButton74.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton74ActionPerformed(evt);
            }
        });

        jLabel224.setText("Today  :");

        jTable25.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable25.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable25.setGridColor(new java.awt.Color(255, 255, 255));
        jTable25.setRowHeight(20);
        jTable25.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable25MousePressed(evt);
            }
        });
        jScrollPane39.setViewportView(jTable25);

        jLabel225.setText("Today  :");

        jTable26.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable26.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable26.setGridColor(new java.awt.Color(255, 255, 255));
        jTable26.setRowHeight(20);
        jTable26.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable26MousePressed(evt);
            }
        });
        jScrollPane40.setViewportView(jTable26);

        jLabel212.setText("Credited Payments");

        jLabel220.setText("Total (Rs) : ");

        jButton75.setText("Delete");
        jButton75.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton75ActionPerformed(evt);
            }
        });

        jLabel209.setText("Search Old Payments");

        jButton76.setText("Search");
        jButton76.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton76ActionPerformed(evt);
            }
        });

        jLabel221.setText("0:0");

        jLabel222.setText("0:0");

        jLabel210.setText("Cash Balance (Rs) :");

        jLabel213.setText("0:0");

        jPanel25.setBackground(new java.awt.Color(255, 255, 255));
        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder("Add New Payment"));

        jTextField114.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField114KeyTyped(evt);
            }
        });

        jLabel214.setText("Amount (Rs)");

        jTextArea12.setColumns(20);
        jTextArea12.setLineWrap(true);
        jTextArea12.setRows(5);
        jTextArea12.setWrapStyleWord(true);
        jScrollPane33.setViewportView(jTextArea12);

        jLabel215.setText("Note ");

        jButton77.setText("Add");
        jButton77.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton77ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Cash IN");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Cash OUT");

        org.jdesktop.layout.GroupLayout jPanel25Layout = new org.jdesktop.layout.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel25Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jRadioButton2)
                    .add(jLabel215)
                    .add(jPanel25Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(jPanel25Layout.createSequentialGroup()
                            .add(jRadioButton1)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jButton77))
                        .add(jTextField114)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel214)
                        .add(jScrollPane33)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel214)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTextField114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel215)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel25Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButton77)
                    .add(jRadioButton1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jRadioButton2)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jLabel294.setBackground(new java.awt.Color(255, 255, 255));
        jLabel294.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel294.setText("Cash Balance :");

        jLabel196.setBackground(new java.awt.Color(255, 255, 255));
        jLabel196.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel196.setText("Rs");

        org.jdesktop.layout.GroupLayout jPanel40Layout = new org.jdesktop.layout.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel40Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel40Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel40Layout.createSequentialGroup()
                        .add(jLabel211)
                        .add(167, 167, 167)
                        .add(jLabel294)
                        .add(18, 18, 18)
                        .add(jLabel196, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 133, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 581, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel40Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(jPanel40Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jScrollPane40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 581, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel40Layout.createSequentialGroup()
                                .add(jPanel40Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel40Layout.createSequentialGroup()
                                        .add(311, 311, 311)
                                        .add(jLabel220)
                                        .add(18, 18, 18)
                                        .add(jLabel221, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(jLabel212))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButton74)))
                        .add(jPanel40Layout.createSequentialGroup()
                            .add(jLabel219)
                            .add(18, 18, 18)
                            .add(jLabel222, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 117, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(18, 18, 18)
                            .add(jButton75))))
                .add(18, 18, 18)
                .add(jPanel40Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel40Layout.createSequentialGroup()
                        .add(jPanel40Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jPanel40Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(jLabel209)
                                .add(jDateChooser8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 159, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jButton76))
                        .add(0, 0, Short.MAX_VALUE))
                    .add(jPanel40Layout.createSequentialGroup()
                        .add(jLabel210)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel213, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel40Layout.createSequentialGroup()
                        .add(jPanel25, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel40Layout.createSequentialGroup()
                .addContainerGap(671, Short.MAX_VALUE)
                .add(jLabel224)
                .add(18, 18, 18)
                .add(jLabel225, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 101, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel40Layout.createSequentialGroup()
                .add(jPanel40Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel224)
                    .add(jLabel225))
                .add(17, 17, 17)
                .add(jLabel209)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jDateChooser8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton76)
                .add(28, 28, 28)
                .add(jPanel40Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel210)
                    .add(jLabel213))
                .add(47, 47, 47)
                .add(jPanel25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel40Layout.createSequentialGroup()
                .add(jPanel40Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel40Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jLabel211))
                    .add(jPanel40Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel40Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel294)
                            .add(jLabel196))
                        .add(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel40Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel40Layout.createSequentialGroup()
                        .add(jScrollPane39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(5, 5, 5)
                        .add(jButton74))
                    .add(jPanel40Layout.createSequentialGroup()
                        .add(186, 186, 186)
                        .add(jPanel40Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel220)
                            .add(jLabel221))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel212)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 178, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel40Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton75)
                            .add(jPanel40Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel219)
                                .add(jLabel222))))))
        );

        org.jdesktop.layout.GroupLayout dailyCashBalLayout = new org.jdesktop.layout.GroupLayout(dailyCashBal.getContentPane());
        dailyCashBal.getContentPane().setLayout(dailyCashBalLayout);
        dailyCashBalLayout.setHorizontalGroup(
            dailyCashBalLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel40, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dailyCashBalLayout.setVerticalGroup(
            dailyCashBalLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        editEnvoice.setAlwaysOnTop(true);

        jPanel41.setBackground(new java.awt.Color(255, 255, 255));

        jPanel42.setBackground(new java.awt.Color(255, 255, 255));
        jPanel42.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Edit Invoice", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 12))); // NOI18N

        jTable19.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable19.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable19.setGridColor(new java.awt.Color(255, 255, 255));
        jTable19.setRowHeight(20);
        jTable19.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable19MousePressed(evt);
            }
        });
        jScrollPane34.setViewportView(jTable19);

        jTextField115.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField115ActionPerformed(evt);
            }
        });

        jLabel217.setBackground(new java.awt.Color(255, 255, 255));
        jLabel217.setText("Total :");

        jTextField116.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField116ActionPerformed(evt);
            }
        });

        jLabel218.setBackground(new java.awt.Color(255, 255, 255));
        jLabel218.setText("Customer :");

        jLabel223.setBackground(new java.awt.Color(255, 255, 255));
        jLabel223.setText("Discription : ");

        jLabel226.setBackground(new java.awt.Color(255, 255, 255));
        jLabel226.setText("Discount (Rs) : ");

        jTextField117.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField117ActionPerformed(evt);
            }
        });

        jLabel227.setBackground(new java.awt.Color(255, 255, 255));
        jLabel227.setText("Net Amount (Rs) :");

        jTextField118.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField118ActionPerformed(evt);
            }
        });

        jTextArea13.setColumns(20);
        jTextArea13.setLineWrap(true);
        jTextArea13.setRows(5);
        jTextArea13.setWrapStyleWord(true);
        jScrollPane35.setViewportView(jTextArea13);

        jLabel228.setText("Invoice No : ");

        jLabel229.setBackground(new java.awt.Color(255, 255, 255));
        jLabel229.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel229.setText("AC00001");

        jTextField119.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField119ActionPerformed(evt);
            }
        });

        jLabel230.setBackground(new java.awt.Color(255, 255, 255));
        jLabel230.setText("Item Code : ");

        jLabel231.setBackground(new java.awt.Color(255, 255, 255));
        jLabel231.setText("Item Discription : ");

        jLabel232.setBackground(new java.awt.Color(255, 255, 255));
        jLabel232.setText("Unit Price : ");

        jTextField120.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField120ActionPerformed(evt);
            }
        });

        jLabel233.setBackground(new java.awt.Color(255, 255, 255));
        jLabel233.setText("Cost Price : ");

        jTextField121.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField121ActionPerformed(evt);
            }
        });

        jLabel234.setBackground(new java.awt.Color(255, 255, 255));
        jLabel234.setText("QTY : ");

        jTextField122.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField122ActionPerformed(evt);
            }
        });

        jLabel235.setBackground(new java.awt.Color(255, 255, 255));
        jLabel235.setText("Warranty : ");

        jTextField123.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField123ActionPerformed(evt);
            }
        });

        jTextArea14.setColumns(20);
        jTextArea14.setLineWrap(true);
        jTextArea14.setRows(5);
        jTextArea14.setWrapStyleWord(true);
        jScrollPane36.setViewportView(jTextArea14);

        jLabel248.setBackground(new java.awt.Color(255, 255, 255));
        jLabel248.setText("Sales Rep :");

        jTextField133.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField133ActionPerformed(evt);
            }
        });

        jLabel245.setText("Invoice Date : ");

        jLabel246.setBackground(new java.awt.Color(255, 255, 255));
        jLabel246.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel246.setText("dateee");

        jButton113.setBackground(new java.awt.Color(255, 255, 255));
        jButton113.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton113.setText("Delete");
        jButton113.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton113ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel42Layout = new org.jdesktop.layout.GroupLayout(jPanel42);
        jPanel42.setLayout(jPanel42Layout);
        jPanel42Layout.setHorizontalGroup(
            jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel42Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel42Layout.createSequentialGroup()
                        .add(jButton113)
                        .add(373, 373, 373)
                        .add(jLabel217)
                        .add(18, 18, 18)
                        .add(jTextField115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel42Layout.createSequentialGroup()
                        .add(jLabel228)
                        .add(4, 4, 4)
                        .add(jLabel229)
                        .add(183, 183, 183)
                        .add(jLabel245)
                        .add(4, 4, 4)
                        .add(jLabel246, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 105, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 661, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel42Layout.createSequentialGroup()
                        .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabel218, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel223, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                            .add(jLabel248))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jTextField116, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 166, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jScrollPane35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jTextField133, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 166, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel42Layout.createSequentialGroup()
                        .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel226)
                            .add(jLabel227))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jTextField117, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jTextField118, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel234)
                    .add(jLabel231)
                    .add(jLabel230)
                    .add(jLabel235, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel42Layout.createSequentialGroup()
                        .add(3, 3, 3)
                        .add(jLabel232))
                    .add(jLabel233))
                .add(18, 18, 18)
                .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jTextField120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField119, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField121, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField122, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel42Layout.setVerticalGroup(
            jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel42Layout.createSequentialGroup()
                .add(2, 2, 2)
                .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel42Layout.createSequentialGroup()
                        .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel228)
                            .add(jLabel229)
                            .add(jLabel245)
                            .add(jLabel246))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 219, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jTextField115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jLabel217)
                                .add(jButton113, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel42Layout.createSequentialGroup()
                                .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel226)
                                    .add(jTextField117, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(7, 7, 7)
                                .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel227)
                                    .add(jTextField118, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                    .add(jPanel42Layout.createSequentialGroup()
                        .add(9, 9, 9)
                        .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel218)
                                .add(jTextField116, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel42Layout.createSequentialGroup()
                                .add(42, 42, 42)
                                .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel248)
                                    .add(jTextField133, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(42, 42, 42)
                                .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel223)
                                    .add(jScrollPane35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(jLabel230)
                            .add(jPanel42Layout.createSequentialGroup()
                                .add(33, 33, 33)
                                .add(jLabel231))
                            .add(jPanel42Layout.createSequentialGroup()
                                .add(jTextField119, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jScrollPane36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jTextField120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel232))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jTextField121, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel233))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jTextField122, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel234))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jPanel42Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jTextField123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel235))))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel43.setBackground(new java.awt.Color(255, 255, 255));
        jPanel43.setBorder(javax.swing.BorderFactory.createTitledBorder("Add New Items"));

        jTextField131.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField131ActionPerformed(evt);
            }
        });
        jTextField131.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField131KeyTyped(evt);
            }
        });

        jButton72.setBackground(new java.awt.Color(255, 255, 255));
        jButton72.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton72.setText("Add Item");
        jButton72.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton72ActionPerformed(evt);
            }
        });

        jTable37.setAutoCreateRowSorter(true);
        jTable37.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"E000001", "Nimal"},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Rap ID", "Name"
            }
        ));
        jTable37.setGridColor(new java.awt.Color(255, 255, 255));
        jTable37.setRowHeight(20);
        jTable37.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable37.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable37MousePressed(evt);
            }
        });
        jTable37.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable37KeyPressed(evt);
            }
        });
        jScrollPane59.setViewportView(jTable37);

        jTable38.setAutoCreateRowSorter(true);
        jTable38.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"E000001", "Nimal"},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Rap ID", "Name"
            }
        ));
        jTable38.setGridColor(new java.awt.Color(255, 255, 255));
        jTable38.setRowHeight(20);
        jTable38.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable38.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable38MousePressed(evt);
            }
        });
        jTable38.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable38KeyPressed(evt);
            }
        });
        jScrollPane60.setViewportView(jTable38);

        jButton110.setText("Add Non Serial Items");
        jButton110.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton110ActionPerformed(evt);
            }
        });

        jButton111.setBackground(new java.awt.Color(255, 255, 255));
        jButton111.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_plus_math_32.png"))); // NOI18N
        jButton111.setToolTipText("");
        jButton111.setBorder(null);
        jButton111.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton111ActionPerformed(evt);
            }
        });

        jTextField126.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField126ActionPerformed(evt);
            }
        });
        jTextField126.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField126KeyPressed(evt);
            }
        });

        jComboBox11.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item Name", "Item Code", "Category" }));

        jButton112.setText("Search Item");
        jButton112.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton112ActionPerformed(evt);
            }
        });

        jTextField132.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField132ActionPerformed(evt);
            }
        });
        jTextField132.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField132KeyTyped(evt);
            }
        });

        jLabel238.setBackground(new java.awt.Color(255, 255, 255));
        jLabel238.setText("Retail Price: ");

        org.jdesktop.layout.GroupLayout jPanel43Layout = new org.jdesktop.layout.GroupLayout(jPanel43);
        jPanel43.setLayout(jPanel43Layout);
        jPanel43Layout.setHorizontalGroup(
            jPanel43Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel43Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel43Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel43Layout.createSequentialGroup()
                        .add(jPanel43Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jPanel43Layout.createSequentialGroup()
                                .add(0, 0, Short.MAX_VALUE)
                                .add(jButton72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 220, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane60)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel43Layout.createSequentialGroup()
                                .add(jTextField131, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jButton110)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel238)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jTextField132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 107, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(18, 18, 18)
                        .add(jPanel43Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 210, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton111)))
                    .add(jPanel43Layout.createSequentialGroup()
                        .add(jComboBox11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 125, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jTextField126, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButton112)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel43Layout.setVerticalGroup(
            jPanel43Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel43Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel43Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField126, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jComboBox11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton112))
                .add(19, 19, 19)
                .add(jPanel43Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel43Layout.createSequentialGroup()
                        .add(jScrollPane60, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel43Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextField131, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton110)
                            .add(jTextField132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel238))
                        .add(37, 37, 37)
                        .add(jButton72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel43Layout.createSequentialGroup()
                        .add(jScrollPane59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton111)
                        .add(15, 15, 15)))
                .addContainerGap())
        );

        jButton73.setText("Save And Print");
        jButton73.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton73ActionPerformed(evt);
            }
        });

        jTable20.setAutoCreateRowSorter(true);
        jTable20.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"E000001", "Nimal"},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Rap ID", "Name"
            }
        ));
        jTable20.setGridColor(new java.awt.Color(255, 255, 255));
        jTable20.setRowHeight(20);
        jTable20.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable20MousePressed(evt);
            }
        });
        jTable20.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable20KeyPressed(evt);
            }
        });
        jScrollPane38.setViewportView(jTable20);

        jTextField124.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField124ActionPerformed(evt);
            }
        });

        jLabel236.setBackground(new java.awt.Color(255, 255, 255));
        jLabel236.setText("Customer Name: ");

        jTable21.setAutoCreateRowSorter(true);
        jTable21.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"E000001", "Nimal"},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Rap ID", "Name"
            }
        ));
        jTable21.setGridColor(new java.awt.Color(255, 255, 255));
        jTable21.setRowHeight(20);
        jTable21.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable21MousePressed(evt);
            }
        });
        jTable21.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable21KeyPressed(evt);
            }
        });
        jScrollPane41.setViewportView(jTable21);

        jLabel237.setBackground(new java.awt.Color(255, 255, 255));
        jLabel237.setText("Employee");

        jButton78.setText("Delete Whole Invoice");
        jButton78.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton78ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel41Layout = new org.jdesktop.layout.GroupLayout(jPanel41);
        jPanel41.setLayout(jPanel41Layout);
        jPanel41Layout.setHorizontalGroup(
            jPanel41Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel41Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel41Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(jPanel41Layout.createSequentialGroup()
                        .add(jPanel43, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel41Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel41Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel41Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(jPanel41Layout.createSequentialGroup()
                                        .add(jLabel236, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(jTextField124))
                                    .add(jScrollPane38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 241, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(18, 18, 18)
                                .add(jPanel41Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel237, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jScrollPane41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 203, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(jPanel41Layout.createSequentialGroup()
                                .add(163, 163, 163)
                                .add(jButton78)
                                .add(40, 40, 40)
                                .add(jButton73))))
                    .add(jPanel42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel41Layout.setVerticalGroup(
            jPanel41Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel41Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jPanel41Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel41Layout.createSequentialGroup()
                        .add(11, 11, 11)
                        .add(jPanel43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(50, Short.MAX_VALUE))
                    .add(jPanel41Layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(jPanel41Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextField124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel236)
                            .add(jLabel237))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel41Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jScrollPane38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 139, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jScrollPane41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 139, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel41Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jButton78)
                            .add(jButton73))
                        .add(95, 95, 95))))
        );

        org.jdesktop.layout.GroupLayout editEnvoiceLayout = new org.jdesktop.layout.GroupLayout(editEnvoice.getContentPane());
        editEnvoice.getContentPane().setLayout(editEnvoiceLayout);
        editEnvoiceLayout.setHorizontalGroup(
            editEnvoiceLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel41, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        editEnvoiceLayout.setVerticalGroup(
            editEnvoiceLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        chequeInvo.setAlwaysOnTop(true);

        jPanel44.setBackground(new java.awt.Color(255, 255, 255));

        jLabel249.setText("Cheque Number : ");

        jLabel250.setText("Cheque Code :");

        jLabel251.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel251.setText("Cheque Invoice Code :");

        jLabel252.setText("Invoice No :");

        jLabel253.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel253.setText("Cheque Invoice Code :");

        jLabel254.setText("Invoice Date :");

        jLabel255.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel255.setText("Cheque Invoice Code :");

        jLabel256.setText("Due Date :");

        jLabel257.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel257.setText("Cheque Invoice Code :");

        jLabel258.setText("Amount :");

        jLabel259.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel259.setText("Cheque Invoice Code :");

        jLabel260.setText("Status :");

        jLabel261.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel261.setText("Cheque Invoice Code :");

        jButton79.setText("Claim");
        jButton79.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton79ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel44Layout = new org.jdesktop.layout.GroupLayout(jPanel44);
        jPanel44.setLayout(jPanel44Layout);
        jPanel44Layout.setHorizontalGroup(
            jPanel44Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel44Layout.createSequentialGroup()
                .add(25, 25, 25)
                .add(jPanel44Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel44Layout.createSequentialGroup()
                        .add(jLabel250)
                        .add(18, 18, 18)
                        .add(jLabel251))
                    .add(jPanel44Layout.createSequentialGroup()
                        .add(jPanel44Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel252)
                            .add(jLabel254)
                            .add(jLabel256)
                            .add(jLabel258)
                            .add(jLabel260)
                            .add(jLabel249))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 44, Short.MAX_VALUE)
                        .add(jPanel44Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel44Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(jLabel261, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel259, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel257, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel255, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel253))
                            .add(jTextField125, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 157, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(79, 79, 79))))
            .add(jPanel44Layout.createSequentialGroup()
                .add(202, 202, 202)
                .add(jButton79)
                .addContainerGap())
        );
        jPanel44Layout.setVerticalGroup(
            jPanel44Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel44Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel44Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel250)
                    .add(jLabel251))
                .add(53, 53, 53)
                .add(jPanel44Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel252)
                    .add(jLabel253))
                .add(18, 18, 18)
                .add(jPanel44Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel254)
                    .add(jLabel255))
                .add(18, 18, 18)
                .add(jPanel44Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel256)
                    .add(jLabel257))
                .add(18, 18, 18)
                .add(jPanel44Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel258)
                    .add(jLabel259))
                .add(18, 18, 18)
                .add(jPanel44Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel260)
                    .add(jLabel261))
                .add(18, 18, 18)
                .add(jPanel44Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField125, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel249))
                .add(48, 48, 48)
                .add(jButton79)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout chequeInvoLayout = new org.jdesktop.layout.GroupLayout(chequeInvo.getContentPane());
        chequeInvo.getContentPane().setLayout(chequeInvoLayout);
        chequeInvoLayout.setHorizontalGroup(
            chequeInvoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        chequeInvoLayout.setVerticalGroup(
            chequeInvoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        creditInvo.setAlwaysOnTop(true);

        jPanel45.setBackground(new java.awt.Color(255, 255, 255));

        jTable22.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable22.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable22.setGridColor(new java.awt.Color(255, 255, 255));
        jTable22.setRowHeight(20);
        jTable22.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable22MousePressed(evt);
            }
        });
        jScrollPane42.setViewportView(jTable22);

        jLabel262.setText("Invoice No :");

        jLabel263.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel263.setText("inhsge");

        jLabel264.setText("Invoice Date :");

        jLabel265.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel265.setText("inhsge");

        jLabel266.setText("Payment (Rs) :");

        jPanel46.setBackground(new java.awt.Color(255, 255, 255));
        jPanel46.setBorder(javax.swing.BorderFactory.createTitledBorder("Advanced Payment "));

        jLabel270.setText("Advanced No :");

        jLabel271.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel271.setText("inhsge");

        jLabel272.setText("Advanced Date :");

        jLabel273.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel273.setText("inhsge");

        jLabel274.setText("Advanced Amount :");

        jLabel275.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel275.setText("inhsge");

        jLabel276.setText("Due Amount :");

        jLabel277.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel277.setText("inhsge");

        org.jdesktop.layout.GroupLayout jPanel46Layout = new org.jdesktop.layout.GroupLayout(jPanel46);
        jPanel46.setLayout(jPanel46Layout);
        jPanel46Layout.setHorizontalGroup(
            jPanel46Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel46Layout.createSequentialGroup()
                .add(28, 28, 28)
                .add(jPanel46Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel46Layout.createSequentialGroup()
                        .add(jLabel276)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel277, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel46Layout.createSequentialGroup()
                        .add(jLabel270)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel271, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel46Layout.createSequentialGroup()
                        .add(jPanel46Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel46Layout.createSequentialGroup()
                                .add(jLabel274)
                                .add(18, 18, 18))
                            .add(jPanel46Layout.createSequentialGroup()
                                .add(jLabel272)
                                .add(32, 32, 32)))
                        .add(jPanel46Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel273, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel275, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel46Layout.setVerticalGroup(
            jPanel46Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel46Layout.createSequentialGroup()
                .add(23, 23, 23)
                .add(jPanel46Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel270)
                    .add(jLabel271))
                .add(18, 18, 18)
                .add(jPanel46Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel272)
                    .add(jLabel273))
                .add(18, 18, 18)
                .add(jPanel46Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel274)
                    .add(jLabel275))
                .add(18, 18, 18)
                .add(jPanel46Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel276)
                    .add(jLabel277))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel268.setText("Invoice Type :");

        jLabel269.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel269.setText("inhsge");

        jTextField134.setText(" ");
        jTextField134.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField134KeyTyped(evt);
            }
        });

        jButton82.setText("Add");
        jButton82.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton82ActionPerformed(evt);
            }
        });

        jButton83.setText("Claimed");
        jButton83.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton83ActionPerformed(evt);
            }
        });

        jLabel278.setText("Credit ID :");

        jLabel279.setText("Credit ID :");

        jLabel280.setText("Invoice Amount :");

        jLabel281.setText("Credit ID :");

        jLabel282.setText("Payed Amount :");

        jLabel283.setText("Credit ID :");

        jLabel284.setText("Due Payment :");

        jLabel285.setText("Credit ID :");

        jLabel286.setText("Due Date :");

        jLabel287.setText("Credit ID :");

        org.jdesktop.layout.GroupLayout jPanel45Layout = new org.jdesktop.layout.GroupLayout(jPanel45);
        jPanel45.setLayout(jPanel45Layout);
        jPanel45Layout.setHorizontalGroup(
            jPanel45Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel45Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel45Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel45Layout.createSequentialGroup()
                        .add(jPanel45Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel45Layout.createSequentialGroup()
                                .add(jScrollPane42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 661, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jPanel46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel45Layout.createSequentialGroup()
                                .add(jLabel262)
                                .add(18, 18, 18)
                                .add(jLabel263, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(38, 38, 38)
                                .add(jLabel264)
                                .add(18, 18, 18)
                                .add(jLabel265, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(10, 10, 10)
                                .add(jLabel268)
                                .add(18, 18, 18)
                                .add(jLabel269, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel45Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jLabel266)
                        .add(18, 18, 18)
                        .add(jTextField134, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jButton82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButton83)
                        .add(659, 659, 659))
                    .add(jPanel45Layout.createSequentialGroup()
                        .add(jPanel45Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel45Layout.createSequentialGroup()
                                .add(jLabel278)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jLabel279, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel280)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jLabel281, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel282)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jLabel283, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel284)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jLabel285, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel45Layout.createSequentialGroup()
                                .add(jLabel286)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jLabel287, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(0, 0, Short.MAX_VALUE))))
        );
        jPanel45Layout.setVerticalGroup(
            jPanel45Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel45Layout.createSequentialGroup()
                .add(18, 18, 18)
                .add(jPanel45Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel262)
                    .add(jLabel263)
                    .add(jLabel264)
                    .add(jLabel265)
                    .add(jLabel268)
                    .add(jLabel269))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel45Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel46, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jScrollPane42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel45Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel278)
                    .add(jLabel279)
                    .add(jLabel280)
                    .add(jLabel281)
                    .add(jLabel282)
                    .add(jLabel283)
                    .add(jLabel284)
                    .add(jLabel285))
                .add(18, 18, 18)
                .add(jPanel45Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel286)
                    .add(jLabel287))
                .add(26, 26, 26)
                .add(jPanel45Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel266)
                    .add(jTextField134, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton82)
                    .add(jButton83))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout creditInvoLayout = new org.jdesktop.layout.GroupLayout(creditInvo.getContentPane());
        creditInvo.getContentPane().setLayout(creditInvoLayout);
        creditInvoLayout.setHorizontalGroup(
            creditInvoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 963, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        creditInvoLayout.setVerticalGroup(
            creditInvoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        addItemTypes.setAlwaysOnTop(true);

        jPanel57.setBackground(new java.awt.Color(255, 255, 255));

        jTable30.setAutoCreateRowSorter(true);
        jTable30.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"E000001", "Nimal"},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Rap ID", "Name"
            }
        ));
        jTable30.setGridColor(new java.awt.Color(255, 255, 255));
        jTable30.setRowHeight(20);
        jTable30.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable30MousePressed(evt);
            }
        });
        jTable30.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable30KeyPressed(evt);
            }
        });
        jScrollPane50.setViewportView(jTable30);

        jLabel310.setBackground(new java.awt.Color(255, 255, 255));
        jLabel310.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel310.setText("Add New Type");

        jTextField144.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jButton98.setText("ADD");
        jButton98.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton98ActionPerformed(evt);
            }
        });

        jButton99.setText("Delete");
        jButton99.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton99ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel57Layout = new org.jdesktop.layout.GroupLayout(jPanel57);
        jPanel57.setLayout(jPanel57Layout);
        jPanel57Layout.setHorizontalGroup(
            jPanel57Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel57Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel57Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jButton98)
                    .add(jPanel57Layout.createSequentialGroup()
                        .add(jPanel57Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jButton99)
                            .add(jScrollPane50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 246, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel57Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel310)
                            .add(jTextField144, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 186, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel57Layout.setVerticalGroup(
            jPanel57Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel57Layout.createSequentialGroup()
                .add(34, 34, 34)
                .add(jPanel57Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel57Layout.createSequentialGroup()
                        .add(jLabel310)
                        .add(14, 14, 14)
                        .add(jTextField144, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButton98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 281, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout addItemTypesLayout = new org.jdesktop.layout.GroupLayout(addItemTypes.getContentPane());
        addItemTypes.getContentPane().setLayout(addItemTypesLayout);
        addItemTypesLayout.setHorizontalGroup(
            addItemTypesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel57, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        addItemTypesLayout.setVerticalGroup(
            addItemTypesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel57, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        adminLogin.setAlwaysOnTop(true);

        jPanel49.setBackground(new java.awt.Color(255, 255, 255));

        jButton87.setBackground(new java.awt.Color(255, 255, 255));
        jButton87.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton87.setForeground(new java.awt.Color(102, 102, 102));
        jButton87.setText("Okay");
        jButton87.setBorder(null);
        jButton87.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton87.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton87ActionPerformed(evt);
            }
        });

        jTextField136.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField136.setForeground(new java.awt.Color(51, 51, 51));
        jTextField136.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField136.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField136KeyPressed(evt);
            }
        });

        jLabel195.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel195.setForeground(new java.awt.Color(51, 51, 51));
        jLabel195.setText("Enter the Password");

        org.jdesktop.layout.GroupLayout jPanel49Layout = new org.jdesktop.layout.GroupLayout(jPanel49);
        jPanel49.setLayout(jPanel49Layout);
        jPanel49Layout.setHorizontalGroup(
            jPanel49Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel49Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel49Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLabel195)
                    .add(jTextField136, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 217, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 35, Short.MAX_VALUE)
                .add(jButton87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(24, 24, 24))
        );
        jPanel49Layout.setVerticalGroup(
            jPanel49Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel49Layout.createSequentialGroup()
                .add(24, 24, 24)
                .add(jLabel195)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel49Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField136, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout adminLoginLayout = new org.jdesktop.layout.GroupLayout(adminLogin.getContentPane());
        adminLogin.getContentPane().setLayout(adminLoginLayout);
        adminLoginLayout.setHorizontalGroup(
            adminLoginLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel49, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        adminLoginLayout.setVerticalGroup(
            adminLoginLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        jPanel50.setBackground(new java.awt.Color(255, 255, 255));

        jTable23.setAutoCreateRowSorter(true);
        jTable23.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"E000001", "Nimal"},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Rap ID", "Name"
            }
        ));
        jTable23.setGridColor(new java.awt.Color(255, 255, 255));
        jTable23.setRowHeight(20);
        jTable23.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable23MousePressed(evt);
            }
        });
        jTable23.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable23KeyPressed(evt);
            }
        });
        jScrollPane48.setViewportView(jTable23);

        jLabel295.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel295.setText("Available Types");

        jButton88.setBackground(new java.awt.Color(255, 255, 255));
        jButton88.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton88.setText("Save");
        jButton88.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton88ActionPerformed(evt);
            }
        });

        jTextField137.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField137ActionPerformed(evt);
            }
        });

        jLabel296.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel296.setText("New Type");

        jButton89.setBackground(new java.awt.Color(255, 255, 255));
        jButton89.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton89.setText("Delete");
        jButton89.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton89ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel50Layout = new org.jdesktop.layout.GroupLayout(jPanel50);
        jPanel50.setLayout(jPanel50Layout);
        jPanel50Layout.setHorizontalGroup(
            jPanel50Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel50Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel50Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel295)
                    .add(jPanel50Layout.createSequentialGroup()
                        .add(jScrollPane48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 273, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(37, 37, 37)
                        .add(jPanel50Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel50Layout.createSequentialGroup()
                                .add(jTextField137, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 204, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jButton88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jLabel296)
                            .add(jButton89, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel50Layout.setVerticalGroup(
            jPanel50Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel50Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel295)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel50Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel50Layout.createSequentialGroup()
                        .add(jLabel296)
                        .add(2, 2, 2)
                        .add(jPanel50Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextField137, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(28, 28, 28)
                        .add(jButton89, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 245, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout editItemTypeLayout = new org.jdesktop.layout.GroupLayout(editItemType.getContentPane());
        editItemType.getContentPane().setLayout(editItemTypeLayout);
        editItemTypeLayout.setHorizontalGroup(
            editItemTypeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel50, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        editItemTypeLayout.setVerticalGroup(
            editItemTypeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        jPanel51.setBackground(new java.awt.Color(255, 255, 255));

        jTable24.setAutoCreateRowSorter(true);
        jTable24.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"E000001", "Nimal"},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Rap ID", "Name"
            }
        ));
        jTable24.setGridColor(new java.awt.Color(255, 255, 255));
        jTable24.setRowHeight(20);
        jTable24.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable24MousePressed(evt);
            }
        });
        jTable24.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable24KeyPressed(evt);
            }
        });
        jScrollPane49.setViewportView(jTable24);

        jLabel297.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel297.setText("Available Types");

        jButton90.setBackground(new java.awt.Color(255, 255, 255));
        jButton90.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton90.setText("Save");
        jButton90.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton90ActionPerformed(evt);
            }
        });

        jTextField138.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField138ActionPerformed(evt);
            }
        });

        jLabel298.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel298.setText("New Type");

        jButton91.setBackground(new java.awt.Color(255, 255, 255));
        jButton91.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton91.setText("Delete");
        jButton91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton91ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel51Layout = new org.jdesktop.layout.GroupLayout(jPanel51);
        jPanel51.setLayout(jPanel51Layout);
        jPanel51Layout.setHorizontalGroup(
            jPanel51Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel51Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel51Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel297)
                    .add(jPanel51Layout.createSequentialGroup()
                        .add(jScrollPane49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 273, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(37, 37, 37)
                        .add(jPanel51Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel51Layout.createSequentialGroup()
                                .add(jTextField138, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 204, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jButton90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jLabel298)
                            .add(jButton91, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel51Layout.setVerticalGroup(
            jPanel51Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel51Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel297)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel51Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel51Layout.createSequentialGroup()
                        .add(jLabel298)
                        .add(2, 2, 2)
                        .add(jPanel51Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextField138, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(28, 28, 28)
                        .add(jButton91, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 245, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout editItemJobTypeLayout = new org.jdesktop.layout.GroupLayout(editItemJobType.getContentPane());
        editItemJobType.getContentPane().setLayout(editItemJobTypeLayout);
        editItemJobTypeLayout.setHorizontalGroup(
            editItemJobTypeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel51, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        editItemJobTypeLayout.setVerticalGroup(
            editItemJobTypeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        adminLogin1.setAlwaysOnTop(true);

        jPanel52.setBackground(new java.awt.Color(255, 255, 255));

        jButton92.setBackground(new java.awt.Color(255, 255, 255));
        jButton92.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton92.setForeground(new java.awt.Color(102, 102, 102));
        jButton92.setText("Okay");
        jButton92.setBorder(null);
        jButton92.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton92.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton92ActionPerformed(evt);
            }
        });

        jTextField141.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField141.setForeground(new java.awt.Color(51, 51, 51));
        jTextField141.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField141.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField141KeyPressed(evt);
            }
        });

        jLabel299.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel299.setForeground(new java.awt.Color(51, 51, 51));
        jLabel299.setText("Enter the Password");

        org.jdesktop.layout.GroupLayout jPanel52Layout = new org.jdesktop.layout.GroupLayout(jPanel52);
        jPanel52.setLayout(jPanel52Layout);
        jPanel52Layout.setHorizontalGroup(
            jPanel52Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel52Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel52Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLabel299)
                    .add(jTextField141, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 217, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 35, Short.MAX_VALUE)
                .add(jButton92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(24, 24, 24))
        );
        jPanel52Layout.setVerticalGroup(
            jPanel52Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel52Layout.createSequentialGroup()
                .add(24, 24, 24)
                .add(jLabel299)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel52Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField141, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout adminLogin1Layout = new org.jdesktop.layout.GroupLayout(adminLogin1.getContentPane());
        adminLogin1.getContentPane().setLayout(adminLogin1Layout);
        adminLogin1Layout.setHorizontalGroup(
            adminLogin1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel52, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        adminLogin1Layout.setVerticalGroup(
            adminLogin1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        adminLogin2.setAlwaysOnTop(true);

        jPanel53.setBackground(new java.awt.Color(255, 255, 255));

        jButton96.setBackground(new java.awt.Color(255, 255, 255));
        jButton96.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton96.setForeground(new java.awt.Color(102, 102, 102));
        jButton96.setText("Okay");
        jButton96.setBorder(null);
        jButton96.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton96.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton96ActionPerformed(evt);
            }
        });

        jTextField142.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField142.setForeground(new java.awt.Color(51, 51, 51));
        jTextField142.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField142.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField142KeyPressed(evt);
            }
        });

        jLabel300.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel300.setForeground(new java.awt.Color(51, 51, 51));
        jLabel300.setText("Enter the Password");

        org.jdesktop.layout.GroupLayout jPanel53Layout = new org.jdesktop.layout.GroupLayout(jPanel53);
        jPanel53.setLayout(jPanel53Layout);
        jPanel53Layout.setHorizontalGroup(
            jPanel53Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel53Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel53Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLabel300)
                    .add(jTextField142, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 217, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 35, Short.MAX_VALUE)
                .add(jButton96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(24, 24, 24))
        );
        jPanel53Layout.setVerticalGroup(
            jPanel53Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel53Layout.createSequentialGroup()
                .add(24, 24, 24)
                .add(jLabel300)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel53Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField142, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout adminLogin2Layout = new org.jdesktop.layout.GroupLayout(adminLogin2.getContentPane());
        adminLogin2.getContentPane().setLayout(adminLogin2Layout);
        adminLogin2Layout.setHorizontalGroup(
            adminLogin2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel53, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        adminLogin2Layout.setVerticalGroup(
            adminLogin2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        adminLogin3.setAlwaysOnTop(true);

        jPanel54.setBackground(new java.awt.Color(255, 255, 255));

        jButton97.setBackground(new java.awt.Color(255, 255, 255));
        jButton97.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton97.setForeground(new java.awt.Color(102, 102, 102));
        jButton97.setText("Okay");
        jButton97.setBorder(null);
        jButton97.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton97.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton97ActionPerformed(evt);
            }
        });

        jTextField143.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField143.setForeground(new java.awt.Color(51, 51, 51));
        jTextField143.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        jLabel303.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel303.setForeground(new java.awt.Color(51, 51, 51));
        jLabel303.setText("Enter the Password");

        org.jdesktop.layout.GroupLayout jPanel54Layout = new org.jdesktop.layout.GroupLayout(jPanel54);
        jPanel54.setLayout(jPanel54Layout);
        jPanel54Layout.setHorizontalGroup(
            jPanel54Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel54Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel54Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLabel303)
                    .add(jTextField143, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 217, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 35, Short.MAX_VALUE)
                .add(jButton97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(24, 24, 24))
        );
        jPanel54Layout.setVerticalGroup(
            jPanel54Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel54Layout.createSequentialGroup()
                .add(24, 24, 24)
                .add(jLabel303)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel54Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField143, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout adminLogin3Layout = new org.jdesktop.layout.GroupLayout(adminLogin3.getContentPane());
        adminLogin3.getContentPane().setLayout(adminLogin3Layout);
        adminLogin3Layout.setHorizontalGroup(
            adminLogin3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel54, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        adminLogin3Layout.setVerticalGroup(
            adminLogin3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        addJobTypes.setAlwaysOnTop(true);

        jPanel59.setBackground(new java.awt.Color(255, 255, 255));

        jTable32.setAutoCreateRowSorter(true);
        jTable32.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"E000001", "Nimal"},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Rap ID", "Name"
            }
        ));
        jTable32.setGridColor(new java.awt.Color(255, 255, 255));
        jTable32.setRowHeight(20);
        jTable32.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable32MousePressed(evt);
            }
        });
        jTable32.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable32KeyPressed(evt);
            }
        });
        jScrollPane53.setViewportView(jTable32);

        jLabel312.setBackground(new java.awt.Color(255, 255, 255));
        jLabel312.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel312.setText("Add New Type");

        jTextField146.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jButton102.setText("ADD");
        jButton102.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton102ActionPerformed(evt);
            }
        });

        jButton103.setText("Delete");
        jButton103.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton103ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel59Layout = new org.jdesktop.layout.GroupLayout(jPanel59);
        jPanel59.setLayout(jPanel59Layout);
        jPanel59Layout.setHorizontalGroup(
            jPanel59Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel59Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel59Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jButton102)
                    .add(jPanel59Layout.createSequentialGroup()
                        .add(jPanel59Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jButton103)
                            .add(jScrollPane53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 246, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel59Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel312)
                            .add(jTextField146, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 186, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel59Layout.setVerticalGroup(
            jPanel59Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel59Layout.createSequentialGroup()
                .add(34, 34, 34)
                .add(jPanel59Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel59Layout.createSequentialGroup()
                        .add(jLabel312)
                        .add(14, 14, 14)
                        .add(jTextField146, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButton102, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 281, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout addJobTypesLayout = new org.jdesktop.layout.GroupLayout(addJobTypes.getContentPane());
        addJobTypes.getContentPane().setLayout(addJobTypesLayout);
        addJobTypesLayout.setHorizontalGroup(
            addJobTypesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        addJobTypesLayout.setVerticalGroup(
            addJobTypesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel59, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        edit_billed_Items.setAlwaysOnTop(true);
        edit_billed_Items.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                edit_billed_ItemsWindowClosed(evt);
            }
        });

        jPanel58.setBackground(new java.awt.Color(255, 255, 255));

        jTable34.setAutoCreateRowSorter(true);
        jTable34.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable34.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"C000001", "Chamara", "Hettipola"},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Customa ID", "Name", "City"
            }
        ));
        jTable34.setGridColor(new java.awt.Color(255, 255, 255));
        jTable34.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable34MousePressed(evt);
            }
        });
        jScrollPane56.setViewportView(jTable34);
        if (jTable34.getColumnModel().getColumnCount() > 0) {
            jTable34.getColumnModel().getColumn(2).setResizable(false);
        }

        jButton104.setBackground(new java.awt.Color(255, 255, 255));
        jButton104.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton104.setText("Delete");
        jButton104.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton104.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton104.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton104ActionPerformed(evt);
            }
        });

        jButton105.setBackground(new java.awt.Color(255, 255, 255));
        jButton105.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton105.setText("Add More");
        jButton105.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton105.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton105.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton105ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel58Layout = new org.jdesktop.layout.GroupLayout(jPanel58);
        jPanel58.setLayout(jPanel58Layout);
        jPanel58Layout.setHorizontalGroup(
            jPanel58Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel58Layout.createSequentialGroup()
                .add(29, 29, 29)
                .add(jButton104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton105, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(34, 34, 34))
            .add(jPanel58Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 387, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel58Layout.setVerticalGroup(
            jPanel58Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel58Layout.createSequentialGroup()
                .add(7, 7, 7)
                .add(jScrollPane56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 219, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel58Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton105, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout edit_billed_ItemsLayout = new org.jdesktop.layout.GroupLayout(edit_billed_Items.getContentPane());
        edit_billed_Items.getContentPane().setLayout(edit_billed_ItemsLayout);
        edit_billed_ItemsLayout.setHorizontalGroup(
            edit_billed_ItemsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel58, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        edit_billed_ItemsLayout.setVerticalGroup(
            edit_billed_ItemsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        edit_edit_billed_Items.setAlwaysOnTop(true);
        edit_edit_billed_Items.setBackground(new java.awt.Color(255, 255, 255));

        jPanel60.setBackground(new java.awt.Color(255, 255, 255));

        jTable35.setAutoCreateRowSorter(true);
        jTable35.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable35.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"C000001", "Chamara", "Hettipola"},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Customa ID", "Name", "City"
            }
        ));
        jTable35.setGridColor(new java.awt.Color(255, 255, 255));
        jTable35.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable35MousePressed(evt);
            }
        });
        jScrollPane57.setViewportView(jTable35);
        if (jTable35.getColumnModel().getColumnCount() > 0) {
            jTable35.getColumnModel().getColumn(2).setResizable(false);
        }

        jButton107.setBackground(new java.awt.Color(255, 255, 255));
        jButton107.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton107.setText("Delete");
        jButton107.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton107.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton107.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton107ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel60Layout = new org.jdesktop.layout.GroupLayout(jPanel60);
        jPanel60.setLayout(jPanel60Layout);
        jPanel60Layout.setHorizontalGroup(
            jPanel60Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel60Layout.createSequentialGroup()
                .add(jPanel60Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel60Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane57, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 303, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel60Layout.createSequentialGroup()
                        .add(110, 110, 110)
                        .add(jButton107, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(142, Short.MAX_VALUE))
        );
        jPanel60Layout.setVerticalGroup(
            jPanel60Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel60Layout.createSequentialGroup()
                .add(7, 7, 7)
                .add(jScrollPane57, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 212, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton107, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout edit_edit_billed_ItemsLayout = new org.jdesktop.layout.GroupLayout(edit_edit_billed_Items.getContentPane());
        edit_edit_billed_Items.getContentPane().setLayout(edit_edit_billed_ItemsLayout);
        edit_edit_billed_ItemsLayout.setHorizontalGroup(
            edit_edit_billed_ItemsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel60, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        edit_edit_billed_ItemsLayout.setVerticalGroup(
            edit_edit_billed_ItemsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(edit_edit_billed_ItemsLayout.createSequentialGroup()
                .add(jPanel60, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        edit_edit_billed_Items1.setAlwaysOnTop(true);

        jPanel61.setBackground(new java.awt.Color(255, 255, 255));

        jTable36.setAutoCreateRowSorter(true);
        jTable36.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable36.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"C000001", "Chamara", "Hettipola"},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Customa ID", "Name", "City"
            }
        ));
        jTable36.setGridColor(new java.awt.Color(255, 255, 255));
        jTable36.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable36.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable36MousePressed(evt);
            }
        });
        jScrollPane58.setViewportView(jTable36);
        if (jTable36.getColumnModel().getColumnCount() > 0) {
            jTable36.getColumnModel().getColumn(2).setResizable(false);
        }

        jButton108.setBackground(new java.awt.Color(255, 255, 255));
        jButton108.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton108.setText("Delete");
        jButton108.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton108.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton108.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton108ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel61Layout = new org.jdesktop.layout.GroupLayout(jPanel61);
        jPanel61.setLayout(jPanel61Layout);
        jPanel61Layout.setHorizontalGroup(
            jPanel61Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel61Layout.createSequentialGroup()
                .add(jPanel61Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel61Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 303, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel61Layout.createSequentialGroup()
                        .add(110, 110, 110)
                        .add(jButton108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel61Layout.setVerticalGroup(
            jPanel61Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel61Layout.createSequentialGroup()
                .add(7, 7, 7)
                .add(jScrollPane58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 212, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout edit_edit_billed_Items1Layout = new org.jdesktop.layout.GroupLayout(edit_edit_billed_Items1.getContentPane());
        edit_edit_billed_Items1.getContentPane().setLayout(edit_edit_billed_Items1Layout);
        edit_edit_billed_Items1Layout.setHorizontalGroup(
            edit_edit_billed_Items1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel61, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        edit_edit_billed_Items1Layout.setVerticalGroup(
            edit_edit_billed_Items1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        adminLogin_item_edit.setAlwaysOnTop(true);

        jPanel62.setBackground(new java.awt.Color(255, 255, 255));

        jButton115.setBackground(new java.awt.Color(255, 255, 255));
        jButton115.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton115.setForeground(new java.awt.Color(102, 102, 102));
        jButton115.setText("Okay");
        jButton115.setBorder(null);
        jButton115.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton115.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton115ActionPerformed(evt);
            }
        });

        jTextField145.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField145.setForeground(new java.awt.Color(51, 51, 51));
        jTextField145.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField145.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField145KeyPressed(evt);
            }
        });

        jLabel316.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel316.setForeground(new java.awt.Color(51, 51, 51));
        jLabel316.setText("Enter the Password");

        org.jdesktop.layout.GroupLayout jPanel62Layout = new org.jdesktop.layout.GroupLayout(jPanel62);
        jPanel62.setLayout(jPanel62Layout);
        jPanel62Layout.setHorizontalGroup(
            jPanel62Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel62Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel62Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLabel316)
                    .add(jTextField145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 217, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 35, Short.MAX_VALUE)
                .add(jButton115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(24, 24, 24))
        );
        jPanel62Layout.setVerticalGroup(
            jPanel62Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel62Layout.createSequentialGroup()
                .add(24, 24, 24)
                .add(jLabel316)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel62Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout adminLogin_item_editLayout = new org.jdesktop.layout.GroupLayout(adminLogin_item_edit.getContentPane());
        adminLogin_item_edit.getContentPane().setLayout(adminLogin_item_editLayout);
        adminLogin_item_editLayout.setHorizontalGroup(
            adminLogin_item_editLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel62, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        adminLogin_item_editLayout.setVerticalGroup(
            adminLogin_item_editLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel62, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        adminLogin_item_delete.setAlwaysOnTop(true);

        jPanel63.setBackground(new java.awt.Color(255, 255, 255));

        jButton116.setBackground(new java.awt.Color(255, 255, 255));
        jButton116.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton116.setForeground(new java.awt.Color(102, 102, 102));
        jButton116.setText("Okay");
        jButton116.setBorder(null);
        jButton116.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton116.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton116ActionPerformed(evt);
            }
        });

        jTextField147.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField147.setForeground(new java.awt.Color(51, 51, 51));
        jTextField147.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField147.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField147KeyPressed(evt);
            }
        });

        jLabel317.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel317.setForeground(new java.awt.Color(51, 51, 51));
        jLabel317.setText("Enter the Password");

        org.jdesktop.layout.GroupLayout jPanel63Layout = new org.jdesktop.layout.GroupLayout(jPanel63);
        jPanel63.setLayout(jPanel63Layout);
        jPanel63Layout.setHorizontalGroup(
            jPanel63Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel63Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel63Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLabel317)
                    .add(jTextField147, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 217, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 35, Short.MAX_VALUE)
                .add(jButton116, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(24, 24, 24))
        );
        jPanel63Layout.setVerticalGroup(
            jPanel63Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel63Layout.createSequentialGroup()
                .add(24, 24, 24)
                .add(jLabel317)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel63Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField147, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton116, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout adminLogin_item_deleteLayout = new org.jdesktop.layout.GroupLayout(adminLogin_item_delete.getContentPane());
        adminLogin_item_delete.getContentPane().setLayout(adminLogin_item_deleteLayout);
        adminLogin_item_deleteLayout.setHorizontalGroup(
            adminLogin_item_deleteLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel63, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        adminLogin_item_deleteLayout.setVerticalGroup(
            adminLogin_item_deleteLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel63, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        adminLogin_item_delete_sn.setAlwaysOnTop(true);

        jPanel64.setBackground(new java.awt.Color(255, 255, 255));

        jButton117.setBackground(new java.awt.Color(255, 255, 255));
        jButton117.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton117.setForeground(new java.awt.Color(102, 102, 102));
        jButton117.setText("Okay");
        jButton117.setBorder(null);
        jButton117.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton117.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton117ActionPerformed(evt);
            }
        });

        jTextField148.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextField148.setForeground(new java.awt.Color(51, 51, 51));
        jTextField148.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jTextField148.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField148KeyPressed(evt);
            }
        });

        jLabel318.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel318.setForeground(new java.awt.Color(51, 51, 51));
        jLabel318.setText("Enter the Password");

        org.jdesktop.layout.GroupLayout jPanel64Layout = new org.jdesktop.layout.GroupLayout(jPanel64);
        jPanel64.setLayout(jPanel64Layout);
        jPanel64Layout.setHorizontalGroup(
            jPanel64Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel64Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel64Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLabel318)
                    .add(jTextField148, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 217, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 35, Short.MAX_VALUE)
                .add(jButton117, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(24, 24, 24))
        );
        jPanel64Layout.setVerticalGroup(
            jPanel64Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel64Layout.createSequentialGroup()
                .add(24, 24, 24)
                .add(jLabel318)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel64Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField148, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton117, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout adminLogin_item_delete_snLayout = new org.jdesktop.layout.GroupLayout(adminLogin_item_delete_sn.getContentPane());
        adminLogin_item_delete_sn.getContentPane().setLayout(adminLogin_item_delete_snLayout);
        adminLogin_item_delete_snLayout.setHorizontalGroup(
            adminLogin_item_delete_snLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel64, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        adminLogin_item_delete_snLayout.setVerticalGroup(
            adminLogin_item_delete_snLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        edit_edit_billed_Items2.setAlwaysOnTop(true);

        jPanel65.setBackground(new java.awt.Color(255, 255, 255));

        jTable39.setAutoCreateRowSorter(true);
        jTable39.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable39.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"C000001", "Chamara", "Hettipola"},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Customa ID", "Name", "City"
            }
        ));
        jTable39.setGridColor(new java.awt.Color(255, 255, 255));
        jTable39.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jTable39.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable39MousePressed(evt);
            }
        });
        jScrollPane61.setViewportView(jTable39);
        if (jTable39.getColumnModel().getColumnCount() > 0) {
            jTable39.getColumnModel().getColumn(2).setResizable(false);
        }

        jButton118.setBackground(new java.awt.Color(255, 255, 255));
        jButton118.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton118.setText("Warranty");
        jButton118.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton118.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton118.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton118ActionPerformed(evt);
            }
        });
	}
    private void bgFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bgFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_bgFocusLost

    private void manueExitMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manueExitMousePressed
        System.exit(0);
    }//GEN-LAST:event_manueExitMousePressed

    private void manueMinimizeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manueMinimizeMousePressed
        setState(MainManue1.ICONIFIED);
    }//GEN-LAST:event_manueMinimizeMousePressed

    private void bgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgMouseClicked
//        String[] all = {"Item Name", "Company"};
//        
//        for(String item : all){
//            choice1.addItem(item);
//        }
    }//GEN-LAST:event_bgMouseClicked

    private void jButton2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MousePressed
       
    }//GEN-LAST:event_jButton2MousePressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int selectedRow = this.tbl_items_search.getSelectedRow();
            if(selectedRow == -1){
                JOptionPane.showMessageDialog(this, "Pleace select a Item to Edit","Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                this.adminLogin_item_edit.setSize(375,175);
                this.adminLogin_item_edit.setTitle("Admin Access");   
                this.adminLogin_item_edit.setLocationRelativeTo(this);
                this.adminLogin_item_edit.setVisible(true);
            }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
            
            storeItemData st = new storeItemData();
        
            String name = this.txt_add_packSize.getText();
            String itmCode = st.generateItemCode(this);
            
            
            String w = this.txt_add_qty1.getText();
            
            String q  = this.txt_add_qty.getText();
            
            String w_p = this.txt_add_wPrice.getText();
            
            String r_p = this.txt_add_retailPrice.getText();
            String supplier = this.txt_add_qty2.getText();
            
            Date d = new Date();
            SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf1.format(d);
            
            String type = (String)com_box_searchTyp1.getSelectedItem();
            
           if(st.validateItmName(name) & st.validatePackSize(w) & st.validateRprice(r_p) & st.validateWprice(w_p) & st.validateQTY(q) & st.validateEXPdate(date)){
               int warranty = Integer.parseInt(w);
               int qty = Integer.parseInt(q);
               double w_price = Double.parseDouble(w_p);
               double r_price = Double.parseDouble(r_p);
               //String itemCode = st.addTempItem(name, warranty, qty, w_price, r_price, date,type, this);
               String itemCodee = st.updateTempItem(name, warranty, qty, w_price, r_price, date, type,supplier, itmCode, this);
               
               if(itemCodee != null){
                   JOptionPane.showMessageDialog(this, "New Item "+name+" Added Successfully","Item Details", JOptionPane.INFORMATION_MESSAGE);
                   
                    this.txt_add_itemName.setText("");
                    this.txt_add_packSize.setText("");
                    this.txt_add_qty.setText("");
                    this.txt_add_wPrice.setText("");
                    this.txt_add_retailPrice.setText("");
                    this.txt_add_qty1.setText("");
                    this.txt_add_qty2.setText("");
                            
                    String id = st.generateItemCode(this);
                    this.jLabel313.setText(id);

                    ResultSet rsff = st.getSubItemData(id);
                    this.jTable31.setModel(DbUtils.resultSetToTableModel(rsff));

                    int subItemsCount = st.getSubItemCount(id);
                    this.txt_add_qty.setText(String.valueOf(subItemsCount));
                    
                    boolean avlb = st.checkItemRecordAvailability(this);
//        System.out.println(avl);

                    String itm_name = "temp prod";
                    int wa = 0;
                    int qq = -1;
                    double ww = 1.00;
                    double rr = 1.00;
                    String tt = "no";
                    String dd = "2021-01-01";

                    if(avlb){
                        System.out.println("true");
                    }
                    else{
                        System.out.println("false");
                        st.addTempItem(itm_name, wa, qq, ww, rr, dd, tt, this);
        }
               }
               else{
                   JOptionPane.showMessageDialog(this, "Item Added Failed..!!","Error",JOptionPane.ERROR_MESSAGE);
               } 
               searchItems si = new searchItems();
               ResultSet rs = si.showUpdatedItemDetails();
               this.tbl_addItems.setModel(DbUtils.resultSetToTableModel(rs));
               //this.store_movie_data.dispose();
                
                
           }
           else{
               getToolkit().beep();
                JOptionPane.showMessageDialog(this, "Pleace Fill the all Text Fields To Add a Item..!!","Error",JOptionPane.ERROR_MESSAGE);
           }
           
//            this.txt_add_itemName.setText("");
//            this.txt_add_packSize.setText("");
//            this.txt_add_qty.setText("");
//            this.txt_add_wPrice.setText("");
//            this.txt_add_retailPrice.setText("");
//            this.txt_add_qty1.setText("");
           
           
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.txt_add_itemName.setText("");
        this.txt_add_packSize.setText("");
        this.txt_add_qty.setText("");
        this.txt_add_wPrice.setText("");
        this.txt_add_retailPrice.setText("");
        this.txt_add_qty1.setText("");
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        searchItems s = new searchItems();
        
        if(this.com_box_searchTyp.getSelectedItem().toString().equals("Item Name")){
            ResultSet a = s.searchByItemName(this.txt_search_text.getText().toString());
            System.out.println(a);
            this.tbl_items_search.setModel(DbUtils.resultSetToTableModel(a));
        }
        else if(this.com_box_searchTyp.getSelectedItem().toString().equals("Item Code")){
            ResultSet a = s.searchByItemCode(this.txt_search_text.getText().toString());
            this.tbl_items_search.setModel(DbUtils.resultSetToTableModel(a));
        }  
        else if(this.com_box_searchTyp.getSelectedItem().toString().equals("Category")){
            ResultSet a = s.searchByItemType(this.txt_search_text.getText().toString());
            this.tbl_items_search.setModel(DbUtils.resultSetToTableModel(a));
        } 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void com_box_searchTypActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_com_box_searchTypActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_com_box_searchTypActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int selectedRow = this.tbl_items_search.getSelectedRow();
            if(selectedRow == -1){
                JOptionPane.showMessageDialog(this, "Pleace select a Item to delete","Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                this.adminLogin_item_delete.setSize(375,175);
                this.adminLogin_item_delete.setTitle("Admin Access");   
                this.adminLogin_item_delete.setLocationRelativeTo(this);
                this.adminLogin_item_delete.setVisible(true);
            }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        editItemData ei = new editItemData();
        searchItems si = new searchItems();

        String itmId = this.txt_edt_company.getText();
        String name = this.txt_edt_itemName.getText();
        int warranty = Integer.parseInt(this.txt_edt_packSize.getText());
        int qty = Integer.parseInt(this.txt_edt_qty.getText());
        double w_price = Double.parseDouble(this.txt_edt_wPrice.getText());
        double r_price = Double.parseDouble(this.txt_edt_rPrice.getText());
        String type = this.com_box_searchTyp2.getSelectedItem().toString();
 
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String date = df.format(dChooser_edt_expDate.getDate());
        
        ei.UpdateItemData(name, warranty, qty, w_price, r_price, date,type, itmId, itemEdit);

        ResultSet rs;
        rs = si.showItemDetails();
        
        if(rs ==null){
            JOptionPane.showMessageDialog(itemEdit, "Cannot Refresh Details!","Database Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            this.tbl_items_search.setModel(DbUtils.resultSetToTableModel(rs));
        }
        this.itemEdit.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MousePressed
        this.itemsAdder.setSize(900,450);
        this.itemsAdder.setTitle("Add Items to Invoce");   
        this.itemsAdder.setLocationRelativeTo(this);
        this.itemsAdder.setVisible(true);
        this.txt_search_bill_itm.requestFocusInWindow();
        
        searchItems sii = new searchItems();
        ResultSet a = sii.showItemDetails();
        this.tbl_addBillItems.setModel(DbUtils.resultSetToTableModel(a));
        
        
        
        items_add_to_bill ddd = new items_add_to_bill();
        //ddd.checkBillRecordAvailability(this);
        
        boolean avl = ddd.checkBillRecordAvailability(this);
//        System.out.println(avl);

        String bill_date = "2002-02-15 05:03:42";
        double total = 1;
        int bill_dis = 1;
        String cust_id = "C000001";
        String e_id = "E000001";
        double net_amount = 1;
        int setle_days = 1;
        String status = "PENDIN";
        int days = 0;

        if(avl){
            System.out.println("true");
        }
        else{
            System.out.println("false");
            ddd.addTempDataToBill(bill_date, total, bill_dis, cust_id, e_id, net_amount, setle_days,status,days, this);
        }
        
        
        this.txt_search_bill_itm.setText("");
//        this.jTextField15.setText("");
//        this.jTextField14.setText("");
//        this.jTextField13.setText("");
//        this.jTextField16.setText("");
//        this.jTextField18.setText("");
//        this.jTextField17.setText("");
//        this.jTextField25.setText("");
//
//        this.jTextField2.setText("");
     
        
    }//GEN-LAST:event_jButton7MousePressed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jButton8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8MousePressed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        items_add_to_bill juki = new items_add_to_bill();
        
        String eID = this.jTextField5.getText();
        String custID = this.jTextField4.getText();
        String totall = this.jTextField7.getText();
        
        if(juki.validateCustomer(custID) & juki.validateEmp(eID) & juki.validateTotal(totall)){
            this.billSubmition.setSize(840,410);
            this.billSubmition.setTitle("Print Invoce");   
            this.billSubmition.setLocationRelativeTo(this);
            this.billSubmition.setVisible(true);

            double total = Double.parseDouble(this.jTextField7.getText());
            int bill_dis = Integer.parseInt(this.jTextField8.getText());    
            double net_amount = (total)-(bill_dis);
            this.jTextField111.setText(String.valueOf(net_amount));
            
            this.jTextField108.setEditable(false);
            this.jTextField112.setEditable(false);
            this.jTextField113.setEditable(false);
            this.jDateChooser1.setEnabled(false);
            
            this.jCheckBox14.setSelected(false);
            this.jTextField108.setText("");
            this.jTextField112.setText("0");
            this.jTextField113.setText("#");
            this.jDateChooser1.setDate(null);
        }
        else{
            JOptionPane.showMessageDialog(this, "Customer, Sales Rep, Total can't be EMPTY.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        
        
//        cashBalancing cbb = new cashBalancing();
//        items_add_to_bill fff = new items_add_to_bill();
//        
//        Date d = new Date();
//        SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
//        String t = sdf.format(d);
//        lbl_main_time.setText(t);
//                
//        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
//        String da = sdf1.format(d);
//        lbl_main_date.setText(da);
//        
//        String billID = fff.generateBill_id(this);
//        
//        
//        //String s3=s1.concat(s2);  
//                
//        String bill_date = da.concat(t);
//        double total = fff.calculateTotal(billID);
//        int bill_dis = Integer.parseInt(this.jTextField8.getText());
//        String cust_id = this.jTextField4.getText();
//        String e_id = this.jTextField5.getText();
//        double net_amount = (total)-(bill_dis);
//        int setle_days = 0;
//        
//        String status = "PENDING";
//        
//        int itmCount = jTable3.getRowCount();
//        
//        int no_extra_bonous;
//            
//            if(jCheckBox2.isSelected()){
//                no_extra_bonous=1;
//            }
//            else{
//                no_extra_bonous=0;
//            }
//  
//         
//        System.out.println(bill_date);
//        fff.UpdateBillData(bill_date, total, bill_dis, cust_id, e_id, net_amount, setle_days, status, itmCount,no_extra_bonous, billID, this); 
//        
//        
//        try {
//            String query = "update items set qty = qty- ? where itm_code = ?";
//            PreparedStatement pst = conn.prepareStatement(query);
//            
//            for(int i=0; i<jTable3.getRowCount(); i++){
//                String itemId = (String)jTable3.getValueAt(i, 1);
//                int qty = (int)jTable3.getValueAt(i, 4);
//                
//                pst.setInt(1, qty);
//                pst.setString(2, itemId);
//                pst.executeUpdate();
//            }
//            
//            //JOptionPane.showMessageDialog(this, "Invoice Successfull","Movie Details", JOptionPane.INFORMATION_MESSAGE);
//        } catch (SQLException ex) {
//            ex.printStackTrace();
//            Logger.getLogger(MainManue.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        
//        items_add_to_bill ff = new items_add_to_bill();
//        
//        String id = ff.getBill_id(this);
//        
//        String eid = this.jTextField5.getText();
//        HashMap a = new HashMap();
//        a.put("invo", id);
//        try {
////            Class.forName("com.mysql.jdbc.Driver");
////            coooon = DriverManager.getConnection("jdbc:mysql://localhost:3306/pharmacy_db?autoReconnect=true&useSSL=false","root", "root"); 
//            InputStream file = getClass().getResourceAsStream("/classes/ggg.jrxml");
//            JasperDesign jdesign = JRXmlLoader.load(file);
////            JasperDesign jdesign1 = JRXmlLoader.load("C:\\Users\\ASD\\Documents\\NetBeansProjects\\Pharmacy\\src\\classes\\123.jrxml");
////            String sss = "select * from bill_items where bill_id='"+id+"'";
////            String sss1 = "select * from employee where e_id='"+eid+"'";
////            JRDesignQuery updateQuery = new JRDesignQuery();
////            JRDesignQuery updateQuery1 = new JRDesignQuery();
////            updateQuery.setText(sss);
////            updateQuery1.setText(sss1);
////            
////            jdesign.setQuery(updateQuery);
////            jdesign1.setQuery(updateQuery1);
//            
//            JasperReport jreport = JasperCompileManager.compileReport(jdesign);
//            JasperPrint jprint = JasperFillManager.fillReport(jreport, a, conn);
//            
//            JasperViewer.viewReport(jprint, false);
//            //JasperViewer.viewReport(jasperPrint, false);
//            
//            try {
//            updateBill();
//            } catch (ParseException ex) {
//                Logger.getLogger(MainManue.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//        
//        String note = billID.concat(" - invoice payment");
//        
//        cbb.addDebitePayments(note, net_amount, da, t, this);
//        setCashBalance();
//        
//        
//        items_add_to_bill dfdd = new items_add_to_bill();
//        String billid = dfdd.generateBill_id(this);
//        this.jLabel47.setText(billid);
//        
//        ResultSet rs = dfdd.getAddedItemsBy_bill_ID(billid);
//        this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));
//        
//        this.jTextField4.setText("");
//        this.jTextField5.setText("");
// 
//        this.jTextField7.setText("");
//        
//        this.jTextField8.setText("");
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MousePressed
     
    }//GEN-LAST:event_jButton10MousePressed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        items_add_to_bill jjkkii = new items_add_to_bill();
        searchItems pissa = new searchItems(); 
        
        String selectedSN = this.txt_search_bill_itm.getText();
        
        String status = jjkkii.getItemStatus(selectedSN);
        
        if(status.equals("no")){
            JOptionPane.showMessageDialog(itemsAdder, "This "+selectedSN+" Item has already been added.!","Database Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            String SearchedItmName = pissa.getItemCodeBySubItemName(selectedSN);
        
            String SearchedItmCode = pissa.getItemCodeBySubItemCode(selectedSN);

            String NextBillid = jjkkii.generateBill_id(this);

            String SavedItemName = jjkkii.getItemNameFromBillItemTable(SearchedItmCode,NextBillid);

            if(SearchedItmName.equals(SavedItemName)){
                String BillItemID = jjkkii.getBillItemIDFromBillItemTable(SearchedItmCode,NextBillid);

                String bbbbbbbbb = jjkkii.addBillSubItems(selectedSN, BillItemID, itemsAdder);

                if(bbbbbbbbb != null){
                   try {
                        String queryy = "update bill_items set qty=qty+1 where bill_item_id = ?";
                        PreparedStatement pstl = conn.prepareStatement(queryy);

                        pstl.setString(1, BillItemID);      
                        pstl.executeUpdate();

                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    try {
                        String queryyy = "update sub_items set inStock=? where sn = ?";
                        PreparedStatement pstlu = conn.prepareStatement(queryyy);

                        pstlu.setString(1, "no");
                        pstlu.setString(2, selectedSN);
                        pstlu.executeUpdate();

                     } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                     }

                    double rrrrrPrice = jjkkii.getRetailPrice(BillItemID);
                    
                    double wwwwwPrice = jjkkii.getCostPrice(BillItemID);
                    
                    int qqqqqty = jjkkii.getQTY(BillItemID);
                    
                    double NewValue = calculateBillItemValue(qqqqqty,rrrrrPrice);
                    double NewCostValue = calculateBillItemCostValue(qqqqqty,wwwwwPrice);

                    try {
                        String queryy = "update bill_items set value=?, costValue=? where bill_item_id = ?";
                        PreparedStatement pstl = conn.prepareStatement(queryy);

                        pstl.setDouble(1, NewValue);
                        pstl.setDouble(2, NewCostValue);
                        pstl.setString(3, BillItemID);
                        pstl.executeUpdate();

                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    } 
                }


                ResultSet rs = jjkkii.getAddedItemsBy_bill_ID(NextBillid);
                this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));

                double calculatedValue = jjkkii.calculateTotal(NextBillid);
                this.jTextField7.setText(String.valueOf(calculatedValue));
                
                this.txt_search_bill_itm.setText("");
                this.txt_search_bill_itm.requestFocusInWindow();
            }
            else{
                String itmCode ="";
                String name="";
                String warranty="";
                String w_price="";
                String r_price=this.txt_search_bill_itm2.getText();
                String type="";

                Date d = new Date();
                SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
                String date = sdf1.format(d); 

                int qty,free,dis;
                try{
                    ResultSet rsg = jjkkii.getItemDetails(selectedSN);
                    while(rsg.next()){
                        itmCode = rsg.getString("itm_code");
                        name = rsg.getString("itm_name");
                        warranty = rsg.getString("warranty");   
                        w_price = rsg.getString("w_price");
                        //r_price = rsg.getString("r_price");
                        type = rsg.getString("type");              
                    }
                qty = 1;
                free = 0;
                dis = 0;
                int wwarranty = Integer.parseInt(warranty);
                double ww_price = Double.parseDouble(w_price);
                double rr_price = Double.parseDouble(r_price);
                String cashBalID = "no";
                String billID = jjkkii.generateBill_id(this);
                double valu = calculateBillItemValue(qty,rr_price);
                double costValue = calculateBillItemCostValue(qty,ww_price);

                String billItemCode = jjkkii.addItemsToBill(itmCode, name, wwarranty, qty, free, ww_price, dis, rr_price, date, valu, billID,costValue,cashBalID, itemsAdder);

                if(billItemCode != null){
                    jjkkii.addBillSubItems(selectedSN, billItemCode, itemsAdder);
                    try {
                        String queryyy = "update sub_items set inStock=? where sn = ?";
                        PreparedStatement pstlu = conn.prepareStatement(queryyy);

                        pstlu.setString(1, "no");
                        pstlu.setString(2, selectedSN);
                        pstlu.executeUpdate();

                     } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                     }
                }
                else{
                    JOptionPane.showMessageDialog(this, "Date Base Error.!","Error",JOptionPane.ERROR_MESSAGE);
                }
                }
                catch(Exception e){
                    //JOptionPane.showMessageDialog(this, "Cannot Save Movie Details!","Error",JOptionPane.ERROR_MESSAGE);
                }

                ResultSet rs = jjkkii.getAddedItemsBy_bill_ID(NextBillid);
                this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));

                double calculatedValue = jjkkii.calculateTotal(NextBillid);
                this.jTextField7.setText(String.valueOf(calculatedValue));
                
                this.txt_search_bill_itm.setText("");
                this.txt_search_bill_itm.requestFocusInWindow();
            }
            
        }

        
        
        
        
        
        
        
        
        
        
        
            
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
//        items_add_to_bill aaa = new items_add_to_bill();
//         
//        try{
//            String wCode = this.jTextField109.getText();
//            String itmCode = this.jTextField15.getText();
//            String name = this.jTextField14.getText().concat(" --").concat(wCode).concat("--");
//            int packSize = Integer.parseInt(this.jTextField13.getText());
//            int qty = Integer.parseInt(this.jTextField2.getText());
//            double w_price = Double.parseDouble(this.jTextField18.getText());
//            //double price = Double.parseDouble(this.jTextField3.getText());
//            
//            int free = 0;
//            int dis = 0;
//            
//            double r_price = Double.parseDouble(this.jTextField17.getText());
//            double valu = ((qty * r_price)-((qty * r_price)*dis/100));
//            
//            double costValue = (w_price * qty);
//            
//            String billID = aaa.generateBill_id(this);
//
//
//            Date d = new Date();
//            SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
//            String date = sdf1.format(d); 
//
//            int avl_qty = Integer.parseInt(this.jTextField16.getText());
//        
//            if(avl_qty >= (qty+free)){
//                String cashBalID = "no";
//                String billItemCode = aaa.addItemsToBill(itmCode, name, packSize, qty, free, w_price, dis, r_price, date, valu, billID,costValue,cashBalID, this);
//                JOptionPane.showMessageDialog(itemsAdder, "Item Added Successfully","Item Details", JOptionPane.INFORMATION_MESSAGE);
//            }
//            else{
//                JOptionPane.showMessageDialog(itemsAdder, "Available quantity is not enought","Error",JOptionPane.ERROR_MESSAGE);
//            }
//            
//            ResultSet rs = aaa.getAddedItemsBy_bill_ID(billID);
//            this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));
//            
//            double calculatedValue = aaa.calculateTotal(billID);
//            this.jTextField7.setText(String.valueOf(calculatedValue));
//            
//            }      
//        
//        catch(Exception e){
//                 e.printStackTrace();
//        }
//        
//        this.jTextField15.setText("");
//        this.jTextField14.setText("");
//        this.jTextField13.setText("");
//        this.jTextField2.setText("");
//        this.jTextField18.setText("");
//
//        this.jTextField17.setText("");
//        this.jTextField25.setText("");
//        this.jTextField16.setText("");
//        this.jTextField109.setText("");
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        items_add_to_bill iii = new items_add_to_bill(); 
        String billIDD = this.jLabel47.getText();
         
        int selectedRow = this.jTable3.getSelectedRow();
        
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Select a Item to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            String billItemCode = this.jTable3.getModel().getValueAt(selectedRow, 0).toString();
            String aaa = iii.checkSNAvailability(billItemCode);
            
            if(aaa.equals("")){
                int userSelection = JOptionPane.showConfirmDialog(null,"Are you sure to delete this Item?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
                if(userSelection == 0){  
                    boolean gg = iii.deleteAddedBillItems(billItemCode);
                    
                    if(gg){
                        try {
                            String query = "update items set qty = qty+ ? where itm_code = ?";
                            PreparedStatement pst = conn.prepareStatement(query);

                                for(int i=0; i<jTable3.getRowCount(); i++){
                                    String itemId = (String)jTable3.getValueAt(i, 1);
                                    int qty = (int)jTable3.getValueAt(i, 4);

                                    pst.setInt(1, qty);
                                    pst.setString(2, itemId);
                                    pst.executeUpdate();
                                }
                        } catch (SQLException ex) {
                            ex.printStackTrace();
                            Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        
                        double rrrrrPrice1 = iii.getRetailPrice(billItemCode);

                        double wwwwwPrice1 = iii.getCostPrice(billItemCode);

                        int qqqqqty1 = iii.getQTY(billItemCode);

                        double NewValue1 = calculateBillItemValue(qqqqqty1,rrrrrPrice1);
                        double NewCostValue1 = calculateBillItemCostValue(qqqqqty1,wwwwwPrice1);
                        
                        double calculatedValue = iii.calculateTotal(billIDD);
                        this.jTextField7.setText(String.valueOf(calculatedValue));
                                //bill total eka update karanna    
                    }
                    
                    
                    String billID = iii.generateBill_id(this);
                    ResultSet rs = iii.getAddedItemsBy_bill_ID(billID);

                    //ResultSet rs = s.showItemDetails();
                    this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));

                    double calculatedValue = iii.calculateTotal(billID);
                    this.jTextField7.setText(String.valueOf(calculatedValue));
                }
            }
            else{
                items_add_to_bill jiu87 = new items_add_to_bill();
                int selectedRow321123 = this.jTable3.getSelectedRow();

                if(selectedRow321123 == -1){
                    JOptionPane.showMessageDialog(this, "Select a Product to Edit.!","Error",JOptionPane.ERROR_MESSAGE);
                }
                else{
                    this.edit_billed_Items.setSize(425,340);
                    this.edit_billed_Items.setTitle("Edit Bill Items");   
                    this.edit_billed_Items.setLocationRelativeTo(this);
                    this.edit_billed_Items.setVisible(true);

                    String ProductItmCode = this.jTable3.getModel().getValueAt(selectedRow321123, 0).toString();

                    ResultSet jjuy = jiu87.getSubItemDataFromBill(ProductItmCode);
                    this.jTable34.setModel(DbUtils.resultSetToTableModel(jjuy));
                }
                
//                int userSelection = JOptionPane.showConfirmDialog(null,"Are you sure to delete this Item?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
//                if(userSelection == 0){  
//                    iii.deleteAddedBillItems(billItemCode);
//
//                    String billID = iii.generateBill_id(this);
//                    ResultSet rs = iii.getAddedItemsBy_bill_ID(billID);
//
//                    //ResultSet rs = s.showItemDetails();
//                    this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));
//
//                    double calculatedValue = iii.calculateTotal(billID);
//                    this.jTextField7.setText(String.valueOf(calculatedValue));
//                }
            
            }
        }
//            int userSelection = JOptionPane.showConfirmDialog(null,"Are you sure to delete this Item?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
//            if(userSelection == 0){
//                items_add_to_bill iii = new items_add_to_bill();
//                String billItemCode = this.jTable3.getModel().getValueAt(selectedRow, 0).toString(); 
//                iii.deleteAddedBillItems(billItemCode);
//                
//                String billID = iii.generateBill_id(this);
//                ResultSet rs = iii.getAddedItemsBy_bill_ID(billID);
//                
//                //ResultSet rs = s.showItemDetails();
//                this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));
//                
//                double calculatedValue = iii.calculateTotal(billID);
//                this.jTextField7.setText(String.valueOf(calculatedValue));
//            }
//        }

            
            

    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton7MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7MouseReleased

    private void jTextField30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField30ActionPerformed
        items_add_to_bill ddd = new items_add_to_bill();
        ResultSet rs4 = ddd.searchCustomerByName(this.jTextField30.getText());
        this.jTable5.setModel(DbUtils.resultSetToTableModel(rs4));
    }//GEN-LAST:event_jTextField30ActionPerformed

    private void jTextField30InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextField30InputMethodTextChanged
        
    }//GEN-LAST:event_jTextField30InputMethodTextChanged

    private void jTextField30AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTextField30AncestorAdded
        
    }//GEN-LAST:event_jTextField30AncestorAdded

    private void jTextField30ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTextField30ComponentAdded
        
    }//GEN-LAST:event_jTextField30ComponentAdded

    private void jTextField30HierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jTextField30HierarchyChanged
        
    }//GEN-LAST:event_jTextField30HierarchyChanged

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        searchItems s = new searchItems();
        
        if(this.com_box_bill_itm_searchTyp.getSelectedItem().toString().equals("Item Name")){
            ResultSet a = s.searchByItemName(this.txt_search_bill_itm.getText().toString());
            System.out.println(a);
            this.tbl_addBillItems.setModel(DbUtils.resultSetToTableModel(a));
        }
        else if(this.com_box_bill_itm_searchTyp.getSelectedItem().toString().equals("Item Code")){
            ResultSet ab = s.searchByItemCode(this.txt_search_bill_itm.getText().toString());
            this.tbl_addBillItems.setModel(DbUtils.resultSetToTableModel(ab));
        }
        else if(this.com_box_bill_itm_searchTyp.getSelectedItem().toString().equals("Category")){
            ResultSet aj = s.searchByItemType(this.txt_search_bill_itm.getText().toString());
            this.tbl_addBillItems.setModel(DbUtils.resultSetToTableModel(aj));
        } 
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        billSearch bs = new billSearch();
        
        DateFormat dff = new SimpleDateFormat("yyyy-MM-dd");

   
        if((this.jComboBox2.getSelectedItem().toString().equals("Invoice No"))){
            ResultSet rs1= bs.showCompleteBillDetailsByBillId(this.jTextField24.getText().toString());
            this.jTable4.setModel(DbUtils.resultSetToTableModel(rs1));
        }
        else if((this.jComboBox2.getSelectedItem().toString().equals("Customer"))){
            ResultSet rs2= bs.showCompleteBillDetailsByParmacyName(this.jTextField24.getText().toString());
            this.jTable4.setModel(DbUtils.resultSetToTableModel(rs2));
        }
        else if((this.jComboBox2.getSelectedItem().toString().equals("Date"))){
            String FromSelectedDate = dff.format(dChooser_edt_expDate1.getDate());
            String ToSelectedDate = dff.format(dChooser_edt_expDate2.getDate());
            ResultSet rs2= bs.showCompleteBillDetailsByDate(FromSelectedDate,ToSelectedDate);
            this.jTable4.setModel(DbUtils.resultSetToTableModel(rs2));
        }
        else if((this.jComboBox2.getSelectedItem().toString().equals("Customer & Date"))){
            String FromSelectedDate2 = dff.format(dChooser_edt_expDate1.getDate());
            String ToSelectedDate2 = dff.format(dChooser_edt_expDate2.getDate());
            ResultSet rs2= bs.showCompleteBillDetailsByDateANDcustomer(FromSelectedDate2,ToSelectedDate2,this.jTextField24.getText().toString());
            this.jTable4.setModel(DbUtils.resultSetToTableModel(rs2));
        }      
        else if((this.jComboBox2.getSelectedItem().toString().equals("Serial Number"))){
            System.out.println("ffffffffffffffff");
            String ddd = bs.getBillItemIDBySN(this.jTextField24.getText().toString());
            System.out.println(ddd);
            String ggg = bs.getBillIDByBillItemID(ddd);
            System.out.println(ggg);
            ResultSet rs111= bs.showCompleteBillDetailsByBillId(ggg);
            this.jTable4.setModel(DbUtils.resultSetToTableModel(rs111));
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        int selectedRow = this.jTable4.getSelectedRow();
        
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Select a Invoice to Preview.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            String billl = this.jTable4.getModel().getValueAt(selectedRow, 0).toString();
            String invoTypeee = this.jTable4.getModel().getValueAt(selectedRow, 7).toString();
            
            if(invoTypeee.equals("Cash")){
                HashMap ab = new HashMap();
                ab.put("invoNum", billl);
                try {

                    InputStream file = getClass().getResourceAsStream("/classes/cashInvo.jrxml");
                    JasperDesign jdesign = JRXmlLoader.load(file);

                    JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                    JasperViewer.viewReport(jprint, false);

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            else if(invoTypeee.equals("Cash Advanced")){
                HashMap ab = new HashMap();
                ab.put("invoNum", billl);
                try {

                    InputStream file = getClass().getResourceAsStream("/classes/cashInvo_1.jrxml");
                    JasperDesign jdesign = JRXmlLoader.load(file);

                    JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                    JasperViewer.viewReport(jprint, false);

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            else if(invoTypeee.equals("Credit")){
                HashMap ab = new HashMap();
                ab.put("invoNum", billl);
                try {

                    InputStream file = getClass().getResourceAsStream("/classes/CreditInvo.jrxml");
                    JasperDesign jdesign = JRXmlLoader.load(file);

                    JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                    JasperViewer.viewReport(jprint, false);

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            else if(invoTypeee.equals("Credit Advanced")){
                HashMap ab = new HashMap();
                ab.put("invoNum", billl);
                try {

                    InputStream file = getClass().getResourceAsStream("/classes/CreditInvo_1.jrxml");
                    JasperDesign jdesign = JRXmlLoader.load(file);

                    JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                    JasperViewer.viewReport(jprint, false);

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            else if(invoTypeee.equals("Cheque")){
                HashMap ab = new HashMap();
                ab.put("invoNum", billl);
                try {

                    InputStream file = getClass().getResourceAsStream("/classes/Cheque.jrxml");
                    JasperDesign jdesign = JRXmlLoader.load(file);

                    JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                    JasperViewer.viewReport(jprint, false);

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }     
        } 
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        this.profit.setSize(635,377);
        this.profit.setTitle("Calculate Profit");   
        this.profit.setLocationRelativeTo(this);
        this.profit.setVisible(true);
       
        this.txt_edt_company1.setText("");
        this.txt_edt_company2.setText("");
        this.txt_edt_company3.setText("");
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jTextField19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField19ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField19ActionPerformed

    private void jTextField23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField23ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField23ActionPerformed

    private void jTextField26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField26ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField26ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
       int selectedRow = this.jTable1.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Pleace select a Customer to calculate!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            
            String custID = this.jTable1.getModel().getValueAt(selectedRow, 0).toString();
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            String from = df.format(jDateChooser5.getDate());
            String to = df.format(jDateChooser4.getDate());
            
            try {
            Statement stmnt6 = conn.createStatement();
            ResultSet rs = stmnt6.executeQuery("SELECT SUM(net_amount) FROM bill where cust_id='"+custID+"' and bill_date BETWEEN '"+from+"' AND '"+to+"'");
            while(rs.next()){
                double calc = rs.getDouble("SUM(net_amount)");
                this.jTextField26.setText(String.valueOf(calc));
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        }
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        hr hrr =new hr();
        
        String name = this.jTextField10.getText();
        String addr1 = this.jTextField12.getText();
        String addr2 = this.jTextField32.getText();
        String city = this.jTextField33.getText();
        String state = this.jTextField34.getText();
        String conNo = this.jTextField35.getText();
        
        if(hrr.validateCustName(name)& hrr.validateCustAddrL1(addr1) & hrr.validateCustAddrL2(addr2) & hrr.validateCustCity(city) & hrr.validateCustConNo(conNo) & hrr.validateCustState(state)){
            Date d = new Date();     
            SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
            String reg_date = sdf1.format(d);
            double credit_bal = 0;
            

            String custID = hrr.addCustomer(name, addr1, addr2, city, state, conNo, reg_date,credit_bal, this);
            JOptionPane.showMessageDialog(this, "Customer Added Successfully","Movie Details", JOptionPane.INFORMATION_MESSAGE);

            ResultSet rs = hrr.showUpdatedCustDetails();
            this.jTable1.setModel(DbUtils.resultSetToTableModel(rs));

            this.jTextField10.setText("");
            this.jTextField12.setText("");
            this.jTextField32.setText("");
            this.jTextField33.setText("");
            this.jTextField34.setText("");
            this.jTextField35.setText("");
        }
        else{
            getToolkit().beep();
            JOptionPane.showMessageDialog(this, "Pleace Fill the all Text Fields..!!","Error",JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        this.jTextField10.setText("");
        this.jTextField12.setText("");
        this.jTextField32.setText("");
        this.jTextField33.setText("");
        this.jTextField34.setText("");
        this.jTextField35.setText("");
        
        this.jButton27.setEnabled(false);
        this.jButton16.setEnabled(true);
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        int selectedRow = this.jTable1.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Pleace select a Customer to edit details!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            String custID = this.jTable1.getModel().getValueAt(selectedRow, 0).toString();
 
            hr hrrr = new hr();
            try{
                ResultSet rs = hrrr.getCustomerDetails(custID);
                while(rs.next()){
                   String cust_id = rs.getString("cust_id");
                   String name = rs.getString("name");
                   String address_nile_1 = rs.getString("address_nile_1");
                   String address_nile_2 = rs.getString("address_nile_2");
                   String city = rs.getString("city");
                   String state = rs.getString("state");
                   String contactNo = rs.getString("contactNo");
                    
                    this.jLabel55.setText(cust_id);
                    this.jTextField10.setText(name);
                    this.jTextField12.setText(address_nile_1);
                    this.jTextField32.setText(address_nile_2);
                    this.jTextField33.setText(city);
                    this.jTextField34.setText(state);
                    this.jTextField35.setText(contactNo);
                    
                    this.jButton27.setEnabled(true);
                    this.jButton16.setEnabled(false);
                    
                }
            }
            catch(Exception e){
                //JOptionPane.showMessageDialog(this, "Cannot Save Movie Details!","Error",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        int selectedRow = this.jTable1.getSelectedRow();
    
        String custID = this.jTable1.getModel().getValueAt(selectedRow, 0).toString();
        String name = this.jTable1.getModel().getValueAt(selectedRow, 1).toString();
        
        this.jLabel84.setText(custID);
        this.jLabel86.setText(name);
        
    }//GEN-LAST:event_jTable1MousePressed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        hr hrrr =new hr();
        
        String name = this.jTextField10.getText();
        String addr1 = this.jTextField12.getText();
        String addr2 = this.jTextField32.getText();
        String city = this.jTextField33.getText();
        String state = this.jTextField34.getText();
        String conNo = this.jTextField35.getText();
        String custID = this.jLabel55.getText();
   
        hrrr.UpdateCustomerData(name, addr1, addr2, city, state, conNo, custID, this);

        ResultSet rs;
        rs = hrrr.showUpdatedCustDetails();
        
        if(rs ==null){
            JOptionPane.showMessageDialog(itemEdit, "Cannot Refresh Customer Details!","Database Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            this.jTable1.setModel(DbUtils.resultSetToTableModel(rs));
        }
        
        this.jTextField10.setText("");
        this.jTextField12.setText("");
        this.jTextField32.setText("");
        this.jTextField33.setText("");
        this.jTextField34.setText("");
        this.jTextField35.setText("");
        
        this.jButton27.setEnabled(false);
        this.jButton16.setEnabled(true);
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        hr hhr=new hr();
        int selectedRow = this.jTable1.getSelectedRow();
        
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Select a Customer to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            int userSelection = JOptionPane.showConfirmDialog(null,"Are you sure to delete this Customer?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if(userSelection == 0){
                searchItems s = new searchItems();
                String custID = this.jTable1.getModel().getValueAt(selectedRow, 0).toString();
                hhr.deleteCustomer(custID);
                ResultSet rs = hhr.showUpdatedCustDetails();
                this.jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            }
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        hr hhrr = new hr();
        
        if(this.jComboBox1.getSelectedItem().toString().equals("Name")){
            ResultSet ar = hhrr.searchByCusName(this.jTextField1.getText().toString());
            this.jTable1.setModel(DbUtils.resultSetToTableModel(ar));
        }
        else if(this.jComboBox1.getSelectedItem().toString().equals("Customer ID")){
            ResultSet arr = hhrr.searchByCusID(this.jTextField1.getText().toString());
            this.jTable1.setModel(DbUtils.resultSetToTableModel(arr));
        }
        else if(this.jComboBox1.getSelectedItem().toString().equals("City")){
            ResultSet arrr = hhrr.searchByCusCity(this.jTextField1.getText().toString());
            this.jTable1.setModel(DbUtils.resultSetToTableModel(arrr));
        }
        else if(this.jComboBox1.getSelectedItem().toString().equals("State")){
            ResultSet arrrr = hhrr.searchByCusState(this.jTextField1.getText().toString());
            this.jTable1.setModel(DbUtils.resultSetToTableModel(arrrr));
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
       hr hr1 =new hr();
        
        String fname = this.jTextField19.getText();
        String lname = this.jTextField20.getText();
        String addr = this.jTextField21.getText();
        String conNo = this.jTextField22.getText();
        
        if(hr1.validateRepName1(fname) & hr1.validateRepName2(lname) & hr1.validateRepAddr(addr) & hr1.validateRepConn(conNo)){
            Date d = new Date();     
            SimpleDateFormat sdf12 = new SimpleDateFormat("yyyy-MM-dd");
            String regdate = sdf12.format(d);

            String repID = hr1.addRep(fname, lname, addr, conNo, regdate, this);
            JOptionPane.showMessageDialog(this, "Employee Added Successfully","Movie Details", JOptionPane.INFORMATION_MESSAGE);

            ResultSet rs = hr1.showUpdatedRepDetails();
            this.jTable7.setModel(DbUtils.resultSetToTableModel(rs));

            this.jTextField19.setText("");
            this.jTextField20.setText("");
            this.jTextField21.setText("");
            this.jTextField22.setText("");
        }
        else{
            getToolkit().beep();
            JOptionPane.showMessageDialog(this, "Pleace Fill the all Text Fields To Add a Employee..!!","Error",JOptionPane.ERROR_MESSAGE);
        }
        

     
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        int selectedRow = this.jTable7.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Pleace select a Sales Rep to edit details!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            String repID = this.jTable7.getModel().getValueAt(selectedRow, 0).toString();
 
            hr hr2 = new hr();
            try{
                ResultSet rs = hr2.getRepDetails(repID);
                while(rs.next()){
                   String rep_id = rs.getString("e_id");
                   String fname = rs.getString("f_name");
                   String lname = rs.getString("l_name");
                   String address = rs.getString("address");
                   String contactNo = rs.getString("contactNo");
                   
                    
                    this.jLabel63.setText(rep_id);
                    this.jTextField19.setText(fname);
                    this.jTextField20.setText(lname);
                    this.jTextField21.setText(address);
                    this.jTextField22.setText(contactNo);
                    
                    this.jButton31.setEnabled(true);
                    this.jButton30.setEnabled(false);
                    
                }
            }
            catch(Exception e){
                //JOptionPane.showMessageDialog(this, "Cannot Save Movie Details!","Error",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        hr hr3 =new hr();
        
        String fname = this.jTextField19.getText();
        String lname = this.jTextField20.getText();
        String addr = this.jTextField21.getText();
        String contact = this.jTextField22.getText();
        String repID = this.jLabel63.getText();
   
        hr3.UpdateRepData(fname, lname, addr, contact, repID, this);

        ResultSet rss;
        rss = hr3.showUpdatedRepDetails();
        
        if(rss ==null){
            JOptionPane.showMessageDialog(itemEdit, "Cannot Refresh Employee Details!","Database Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            this.jTable7.setModel(DbUtils.resultSetToTableModel(rss));
        }
        
        this.jTextField19.setText("");
        this.jTextField20.setText("");
        this.jTextField21.setText("");
        this.jTextField22.setText("");
        
        this.jButton31.setEnabled(false);
        this.jButton30.setEnabled(true);
        
        String repCode = hr3.generateRepCode(this);
        this.jLabel63.setText(repCode);
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        this.jTextField19.setText("");
        this.jTextField20.setText("");
        this.jTextField21.setText("");
        this.jTextField22.setText("");
        
        this.jButton31.setEnabled(false);
        this.jButton30.setEnabled(true);
    }//GEN-LAST:event_jButton32ActionPerformed

    private void jTable7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable7MousePressed
        int selectedRow = this.jTable7.getSelectedRow();
        
        String repID = this.jTable7.getModel().getValueAt(selectedRow, 0).toString();
        String repFName = this.jTable7.getModel().getValueAt(selectedRow, 1).toString();
        String repLName = this.jTable7.getModel().getValueAt(selectedRow, 2).toString();
        
        this.jLabel72.setText(repID);
        this.jLabel79.setText(repFName +"  "+ repLName);
    }//GEN-LAST:event_jTable7MousePressed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        hr hr4=new hr();
        int selectedRow = this.jTable7.getSelectedRow();
        
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Select a Employee to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            int userSelection = JOptionPane.showConfirmDialog(null,"Are you sure to delete this Employee?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if(userSelection == 0){
                String repID = this.jTable7.getModel().getValueAt(selectedRow, 0).toString();
                hr4.deleteRep(repID);
                ResultSet rs8 = hr4.showUpdatedRepDetails();
                this.jTable7.setModel(DbUtils.resultSetToTableModel(rs8));
            }
        }
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        int selectedRow = this.jTable7.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Pleace select a Employee to calculate!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            
            String reppID = this.jTable7.getModel().getValueAt(selectedRow, 0).toString();
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            String fromm = df.format(jDateChooser3.getDate());
            String too = df.format(jDateChooser2.getDate());
            
            try {
            Statement stmnt6 = conn.createStatement();
            ResultSet rs = stmnt6.executeQuery("SELECT SUM(net_amount) FROM bill where e_id='"+reppID+"' and bill_date BETWEEN '"+fromm+"' AND '"+too+"'");
            while(rs.next()){
                double calcu = rs.getDouble("SUM(net_amount)");
                this.jTextField23.setText(String.valueOf(calcu));
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        }
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jButton21MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton21MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton21MousePressed

    private void jButton21MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton21MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton21MouseReleased

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        items_add_to_bill jukid = new items_add_to_bill();
        
        String eID = this.jTextField5.getText();
        String custID = this.jTextField4.getText();
        String totall = this.jTextField7.getText();
        
        if(jukid.validateCustomer(custID) & jukid.validateEmp(eID) & jukid.validateTotal(totall)){
            storeItemData sss = new storeItemData();
        
            this.jLabel69.setText(sss.generateItemCode(this));

            items_add_to_bill ddd = new items_add_to_bill();
            //ddd.checkBillRecordAvailability(this);

            boolean avl = ddd.checkBillRecordAvailability(this);
    //        System.out.println(avl);

            String bill_date = "2002-02-15 05:03:42";
            double total = 1;
            int bill_dis = 1;
            String cust_id = "C000001";
            String e_id = "E000001";
            double net_amount = 1;
            int setle_days = 1;
            String status = "PENDIN";
            int days = 0;

            if(avl){
                System.out.println("true");
            }
            else{
                System.out.println("false");
                ddd.addTempDataToBill(bill_date, total, bill_dis, cust_id, e_id, net_amount, setle_days,status,days, this);
            }


            this.txt_search_bill_itm.setText("");
//            this.jTextField15.setText("");
//            this.jTextField14.setText("");
//            this.jTextField13.setText("");
//            this.jTextField16.setText("");
//            this.jTextField18.setText("");
//            this.jTextField17.setText("");
//            this.jTextField25.setText("");
//
//            this.jTextField2.setText("");

            this.jTextArea1.setText("");
            this.jTextField28.setText("");
            this.jTextField29.setText("");

            items_add_to_bill fff = new items_add_to_bill();
                cashBalancing cbb = new cashBalancing();
                Date d = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
                String t = sdf.format(d);


                SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
                String da = sdf1.format(d);


                String billID = fff.generateBill_id(this);
    ;  

                 bill_date = da.concat(t);
                 total = fff.calculateTotal(billID);
                 bill_dis = Integer.parseInt(this.jTextField8.getText());
                 cust_id = "C000001";
                 e_id = this.jTextField5.getText();
                 net_amount = (total)-(bill_dis);
                 setle_days = 0;

                 status = "COMPLETE";

                int itmCount = jTable3.getRowCount();

                int no_extra_bonous;

                    if(jCheckBox2.isSelected()){
                        no_extra_bonous=1;
                    }
                    else{
                        no_extra_bonous=0;
                    }
                String advancedCode = "no";
                double advAmount = 0;
                String invoiceType = "Quick Invoice";
                String recevingDate = da;
                String creditCodeChequeCode = "no";
                double grangAmount = net_amount;
                String discrip = this.jTextArea16.getText();

                System.out.println(bill_date);
                boolean isOkk = fff.UpdateBillData(bill_date, total, bill_dis, cust_id, e_id, net_amount, setle_days, status, itmCount, no_extra_bonous, advancedCode, advAmount, invoiceType, recevingDate, creditCodeChequeCode, grangAmount,t,discrip, billID, billSubmition); 

                if (isOkk){
                   try {
                    String query = "update items set qty = qty- ? where itm_code = ?";
                    PreparedStatement pst = conn.prepareStatement(query);

                        for(int i=0; i<jTable3.getRowCount(); i++){
                            String itemId = (String)jTable3.getValueAt(i, 1);
                            int qty = (int)jTable3.getValueAt(i, 4);

                            pst.setInt(1, qty);
                            pst.setString(2, itemId);
                            pst.executeUpdate();
                        }
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    items_add_to_bill ff = new items_add_to_bill();

                    String id = ff.getBill_id(this);

                    String note = billID.concat(" - Quick payment");

                    cbb.addDebitePayments(note, net_amount, da, t, this);
                    setCashBalance();


                    items_add_to_bill dfdd = new items_add_to_bill();
                    String billid = dfdd.generateBill_id(this);
                    this.jLabel47.setText(billid);

                    ResultSet rs = dfdd.getAddedItemsBy_bill_ID(billid);
                    this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));

                    this.jTextField4.setText("");
                    this.jTextField5.setText("");

                    this.jTextField7.setText("");

                    this.jTextField8.setText(""); 
                }
                
        }
        else{
            JOptionPane.showMessageDialog(this, "Customer, Sales Rep, Total can't be EMPTY.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        
        
     
        
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        items_add_to_bill aaa = new items_add_to_bill();
         
        try{
            String itmCode = this.jLabel69.getText();
            String name = this.jTextArea1.getText();
            int packSize = 0;
            int qty = Integer.parseInt(this.jTextField28.getText());
            double w_price = 0;
            //double price = Double.parseDouble(this.jTextField3.getText());
            int free = 0;
            int dis = 0;
            
            double r_price = Double.parseDouble(this.jTextField29.getText());
            double valu = ((qty * r_price)-((qty * r_price)*dis/100));
            
            String billID = aaa.generateBill_id(this);

            Date d = new Date();
            SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf1.format(d); 
            
            double costValue = (w_price * qty);
            String cashBalID = "no";
            String billItemCode = aaa.addItemsToBill(itmCode, name, packSize, qty, free, w_price, dis, r_price, date, valu, billID,costValue,cashBalID, this);
            JOptionPane.showMessageDialog(itemsAdder, "Item Added Successfully","Item Details", JOptionPane.INFORMATION_MESSAGE);
            
          
            
            ResultSet rs = aaa.getAddedItemsBy_bill_ID(billID);
            this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));
            
            double calculatedValue = aaa.calculateTotal(billID);
            this.jTextField7.setText(String.valueOf(calculatedValue));
            
            }      
        
        catch(Exception e){
                 e.printStackTrace();
        }
        
       

        this.jTextArea1.setText("");
        this.jTextField28.setText("");
        this.jTextField29.setText("");
        
        storeItemData sss = new storeItemData();
        
        sss.increaseNoOfItemsByOne();
        this.jLabel69.setText(sss.generateItemCode(this));
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
            DateFormat dfd = new SimpleDateFormat("yyyy-MM-dd");
            String ff = dfd.format(jDateChooser6.getDate());
            String tt = dfd.format(jDateChooser7.getDate());
        if( ff.equals("")& tt.equals("")){
                JOptionPane.showMessageDialog(profit, "Pleas Select both Days.!","Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                String from = df.format(jDateChooser6.getDate());
                String to = df.format(jDateChooser7.getDate());

                System.out.println(from);

                try {
                    Statement stmnt8 = conn.createStatement();
                    ResultSet rs = stmnt8.executeQuery("SELECT SUM(net_amount) FROM bill where bill_date BETWEEN '"+from+"' AND '"+to+"' AND status='COMPLETE'");
                        while(rs.next()){
                            double NetAmtSUM = rs.getDouble("SUM(net_amount)");
                            this.txt_edt_company2.setText(String.valueOf(NetAmtSUM));
                            System.out.println(NetAmtSUM);
                        }    
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }

                try {
                    Statement stmnt7 = conn.createStatement();
                    ResultSet r2 = stmnt7.executeQuery("SELECT SUM(bill_items.costValue) FROM bill bill INNER JOIN bill_items bill_items ON bill.bill_id = bill_items.bill_id where bill_items.exp_date BETWEEN '"+from+"' AND '"+to+"' AND bill.status='COMPLETE'");

                    while(r2.next()){
                        double wPriceSUM = r2.getDouble("SUM(bill_items.costValue)");
                        this.txt_edt_company1.setText(String.valueOf(wPriceSUM));
                        System.out.println(wPriceSUM);
                    }    
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
                double prof = (Double.parseDouble(this.txt_edt_company2.getText())) - (Double.parseDouble(this.txt_edt_company1.getText()));
                this.txt_edt_company3.setText(String.valueOf(prof));

            }
              
        
    }//GEN-LAST:event_jButton35ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        
        hr nh = new hr();
        if(this.jComboBox3.getSelectedItem().toString().equals("JOB id")){
            ResultSet arr = nh.searchByJobID(this.jTextField3.getText().toString());
            this.jTable6.setModel(DbUtils.resultSetToTableModel(arr));
        }
        else if(this.jComboBox3.getSelectedItem().toString().equals("Customer Name")){
            ResultSet arrr = nh.searchJobByCusName(this.jTextField3.getText().toString());
            this.jTable6.setModel(DbUtils.resultSetToTableModel(arrr));
        }
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed
        int selectedRow = this.jTable6.getSelectedRow();
        String type = this.jTable6.getModel().getValueAt(selectedRow, 1).toString();
        
        if(type.equals("LapTop")){
            if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Select a Job to Preview.!","Error",JOptionPane.ERROR_MESSAGE);
            }
        
            String jobID = this.jTable6.getModel().getValueAt(selectedRow, 0).toString();

            HashMap abb = new HashMap();
            abb.put("jobID", jobID);
            try {

                InputStream file = getClass().getResourceAsStream("/classes/job.jrxml");
                JasperDesign jdesign = JRXmlLoader.load(file);

                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                JasperPrint jprint = JasperFillManager.fillReport(jreport, abb, conn);

                JasperViewer.viewReport(jprint, false);

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        else{
            if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Select a Job to Preview.!","Error",JOptionPane.ERROR_MESSAGE);
            }
        
            String jobIDd = this.jTable6.getModel().getValueAt(selectedRow, 0).toString();

            HashMap abb = new HashMap();
            abb.put("jobID1", jobIDd);
            try {

                InputStream file = getClass().getResourceAsStream("/classes/job1.jrxml");
                JasperDesign jdesign = JRXmlLoader.load(file);

                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                JasperPrint jprint = JasperFillManager.fillReport(jreport, abb, conn);

                JasperViewer.viewReport(jprint, false);

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_jButton36ActionPerformed

    private void jButton37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton37ActionPerformed
        int selectedRow = this.jTable6.getSelectedRow();
        
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Select a Job to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            int userSelection = JOptionPane.showConfirmDialog(null,"Are you sure to delete this Job?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if(userSelection == 0){
                hr dds = new hr();
                String itemCode = this.jTable6.getModel().getValueAt(selectedRow, 0).toString();
                dds.deleteJob(itemCode);
                ResultSet rsg = dds.showUpdatedJobDetails();
                this.jTable6.setModel(DbUtils.resultSetToTableModel(rsg));
            }
        }
    }//GEN-LAST:event_jButton37ActionPerformed

    private void jTable6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable6MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable6MousePressed

    private void jButton40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton40ActionPerformed
        this.jTextField31.setText("");
            this.jTextField36.setText("");
            this.jTextField37.setText("");
            this.jTextField41.setText("");
            this.jTextField43.setText("");
            this.jTextField38.setText("");
            this.jTextField39.setText("");
            this.jTextField40.setText("");
            this.jTextField42.setText("");
            this.jTextField45.setText("");
            this.jTextArea2.setText("");
            
            this.jCheckBox1.setSelected(false);
            this.jCheckBox4.setSelected(false);
            this.jCheckBox5.setSelected(false);
            this.jCheckBox6.setSelected(false);
            this.jCheckBox7.setSelected(false);
            this.jCheckBox3.setSelected(false);
            this.jCheckBox8.setSelected(false);
            this.jCheckBox9.setSelected(false);
            this.jCheckBox10.setSelected(false);
    }//GEN-LAST:event_jButton40ActionPerformed

    private void jTextField45ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTextField45ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField45ComponentAdded

    private void jTextField45HierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jTextField45HierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField45HierarchyChanged

    private void jTextField45AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTextField45AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField45AncestorAdded

    private void jTextField45InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextField45InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField45InputMethodTextChanged

    private void jTextField45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField45ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField45ActionPerformed

    private void jButton38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton38ActionPerformed
        hr h65 = new hr();
        
        String type,cust,Proccesor, ram, mb, kb, battery, hdd, rom, vga, charger, status, date, dis, mobile;
        int days =0;
        
        Date dd = new Date();     
        SimpleDateFormat sdf1l = new SimpleDateFormat("yyyy-MM-dd");
        date = sdf1l.format(dd);
        
        cust = this.jTextField45.getText();
        mobile = this.jTextField81.getText();
        dis = this.jTextArea2.getText();
        
        status = "INCOMPLETE";
        
        type = this.jComboBox4.getSelectedItem().toString();
            
            if(jCheckBox1.isSelected()){
                Proccesor = ("yes  ").concat(this.jTextField31.getText());
            }
            else{
                Proccesor = "no";
            }
            
            if(jCheckBox4.isSelected()){
                ram = ("yes  ").concat(this.jTextField36.getText()).concat("GB");
            }
            else{
                ram = "no";
            }
            
            if(jCheckBox5.isSelected()){
                mb = ("yes  ").concat(this.jTextField37.getText());
            }
            else{
                mb = "no";
            }
            
            if(jCheckBox6.isSelected()){
                kb = ("yes  ").concat(this.jTextField41.getText());
            }
            else{
                kb = "no";
            }
            
            if(jCheckBox7.isSelected()){
                battery = ("yes  ").concat(this.jTextField43.getText());
            }
            else{
                battery = "no";
            }
            
            if(jCheckBox3.isSelected()){
                hdd = ("yes  ").concat(this.jTextField38.getText()).concat("GB");
            }
            else{
                hdd = "no";
            }
            
            if(jCheckBox8.isSelected()){
                rom = ("yes  ").concat(this.jTextField39.getText());
            }
            else{
                rom = "no";
            }
            
            if(jCheckBox9.isSelected()){
                vga = ("yes  ").concat(this.jTextField40.getText());
            }
            else{
                vga = "no";
            }
            
            if(jCheckBox10.isSelected()){
                charger = ("yes  ").concat(this.jTextField42.getText());
            }
            else{
                charger = "no";
            }
            
            if(h65.validateJobCust(cust)&h65.validateJobCutMobile(mobile)){
                String jobID = h65.addJob(type, cust, Proccesor, ram, mb, kb, battery, hdd, rom, vga, charger, status, days, date,dis, mobile, this);
                
                if(jobID != null){
                    JOptionPane.showMessageDialog(this, "Job Added Successfully","Job Details", JOptionPane.INFORMATION_MESSAGE);
                    
                    this.jTextField31.setText("");
                    this.jTextField36.setText("");
                    this.jTextField37.setText("");
                    this.jTextField41.setText("");
                    this.jTextField43.setText("");
                    this.jTextField38.setText("");
                    this.jTextField39.setText("");
                    this.jTextField40.setText("");
                    this.jTextField42.setText("");
                    this.jTextField45.setText("");
                    this.jTextArea2.setText("");
                    this.jTextField81.setText("");
                    
                    this.jCheckBox1.setSelected(false);
                    this.jCheckBox4.setSelected(false);
                    this.jCheckBox5.setSelected(false);
                    this.jCheckBox6.setSelected(false);
                    this.jCheckBox7.setSelected(false);
                    this.jCheckBox3.setSelected(false);
                    this.jCheckBox8.setSelected(false);
                    this.jCheckBox9.setSelected(false);
                    this.jCheckBox10.setSelected(false);



                    ResultSet rs3334 = h65.showUpdatedJobDetails();
                    this.jTable6.setModel(DbUtils.resultSetToTableModel(rs3334));



                    if(type.equals("LapTop")){

                        String jobIDd = this.jLabel97.getText();

                        HashMap abb = new HashMap();
                        abb.put("jobID", jobIDd);
                        try {

                            InputStream file = getClass().getResourceAsStream("/classes/job.jrxml");
                            JasperDesign jdesign = JRXmlLoader.load(file);

                            JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                            JasperPrint jprint = JasperFillManager.fillReport(jreport, abb, conn);

                            JasperViewer.viewReport(jprint, false);

                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }
                    else if(type.equals("DeskTop")){


                        String jobIDd = this.jLabel97.getText();

                        HashMap abb = new HashMap();
                        abb.put("jobID1", jobIDd);
                        try {

                            InputStream file = getClass().getResourceAsStream("/classes/job1.jrxml");
                            JasperDesign jdesign = JRXmlLoader.load(file);

                            JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                            JasperPrint jprint = JasperFillManager.fillReport(jreport, abb, conn);

                            JasperViewer.viewReport(jprint, false);

                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }
                    else{


                    String jobIDd = this.jLabel97.getText();

                    HashMap abb = new HashMap();
                    abb.put("jobID1", jobIDd);
                    try {

                        InputStream file = getClass().getResourceAsStream("/classes/job1_1.jrxml");
                        JasperDesign jdesign = JRXmlLoader.load(file);

                        JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                        JasperPrint jprint = JasperFillManager.fillReport(jreport, abb, conn);

                        JasperViewer.viewReport(jprint, false);

                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }

                    this.jLabel97.setText(h65.generateJobCode(this));
                        }
            }
            else{
                if(!h65.validateJobCust(cust)){
                    JOptionPane.showMessageDialog(this, "Invalied Customer Name.!","Error",JOptionPane.ERROR_MESSAGE);
                }
                else if(!h65.validateJobCutMobile(mobile)){
                    JOptionPane.showMessageDialog(this, "Invalied Mobile Number.!","Error",JOptionPane.ERROR_MESSAGE);
                }

            }     
    }//GEN-LAST:event_jButton38ActionPerformed

    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        int selectedRow = this.jTable6.getSelectedRow();
        
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Select a Job to Update.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            int userSelection = JOptionPane.showConfirmDialog(null,"Are you sure to Update this Job?", "Confirm Update", JOptionPane.YES_NO_OPTION);
            if(userSelection == 0){
                items_add_to_bill i4 = new items_add_to_bill();
                String billNo = this.jTable6.getModel().getValueAt(selectedRow, 0).toString();
                
                String query = "update job set status = ? where jobCode = ?";
                try {
                    PreparedStatement pst = conn.prepareStatement(query);
                    pst.setString(1, "COMPLETE");
                    pst.setString(2, billNo);
                    pst.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                }
                hr hg1 = new hr();
                ResultSet rs3334 = hg1.showUpdatedJobDetails();
                this.jTable6.setModel(DbUtils.resultSetToTableModel(rs3334));
  
            }
        }
    }//GEN-LAST:event_jButton41ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if(jCheckBox1.isSelected()){
                this.jTextField31.setEnabled(true);
                
            }
            else{
                this.jTextField31.setEnabled(false);
            }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        if(jCheckBox4.isSelected()){
                this.jTextField36.setEnabled(true);
                
            }
            else{
                this.jTextField36.setEnabled(false);
            }
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        if(jCheckBox5.isSelected()){
                this.jTextField37.setEnabled(true);
                
            }
            else{
                this.jTextField37.setEnabled(false);
            }
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        if(jCheckBox6.isSelected()){
                this.jTextField41.setEnabled(true);
                
            }
            else{
                this.jTextField41.setEnabled(false);
            }
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
        if(jCheckBox7.isSelected()){
                this.jTextField43.setEnabled(true);
                
            }
            else{
                this.jTextField43.setEnabled(false);
            }
    }//GEN-LAST:event_jCheckBox7ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        if(jCheckBox3.isSelected()){
                this.jTextField38.setEnabled(true);
                
            }
            else{
                this.jTextField38.setEnabled(false);
            }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox8ActionPerformed
        if(jCheckBox8.isSelected()){
                this.jTextField39.setEnabled(true);
                
            }
            else{
                this.jTextField39.setEnabled(false);
            }
    }//GEN-LAST:event_jCheckBox8ActionPerformed

    private void jCheckBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox9ActionPerformed
        if(jCheckBox9.isSelected()){
                this.jTextField40.setEnabled(true);
                
            }
            else{
                this.jTextField40.setEnabled(false);
            }
    }//GEN-LAST:event_jCheckBox9ActionPerformed

    private void jCheckBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox10ActionPerformed
        if(jCheckBox10.isSelected()){
                this.jTextField42.setEnabled(true);
                
            }
            else{
                this.jTextField42.setEnabled(false);
            }
    }//GEN-LAST:event_jCheckBox10ActionPerformed

    private void jTabbedPane1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTabbedPane1AncestorAdded
        hr hhg = new hr();
        
        String jobid = hhg.generateJobCode(this);
        this.jLabel97.setText(jobid);
    }//GEN-LAST:event_jTabbedPane1AncestorAdded

    private void btn_hrMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_hrMousePressed
        resetColor(btn_search);
        resetColor(btn_add);
        resetColor(btn_billing);
        resetColor(btn_bill_summ);
        resetColor(btn_hr2);
        setColor(btn_hr);
        resetColor(btn_hr4);
        resetColor(btn_billing1);
        this.pnl_settings.setVisible(false);
        this.pnl_hr.setVisible(true);
        this.pnl_searchItm.setVisible(false);
        this.pnl_addItms.setVisible(false);
        this.pnl_billing.setVisible(false);
        this.pnl_billingSumm.setVisible(false);
        this.pnl_barcode.setVisible(false);
        this.pnl_quickBill.setVisible(false);

        this.jPanel10.setVisible(false);
        this.jPanel13.setVisible(false);
        this.jPanel14.setVisible(false);
        this.jPanel15.setVisible(false);
        this.jPanel16.setVisible(true);
        this.jPanel55.setVisible(false);
        this.jPanel56.setVisible(false);
        
        setJobTypes();

        hr hrhr=new hr();
        this.jLabel55.setText(hrhr.generateCustomerCode(this));

        ResultSet rs = hrhr.showUpdatedCustDetails();
        this.jTable1.setModel(DbUtils.resultSetToTableModel(rs));

        this.jButton27.setEnabled(false);

        ResultSet rs33 = hrhr.showUpdatedRepDetails();
        this.jTable7.setModel(DbUtils.resultSetToTableModel(rs33));

        this.jButton31.setEnabled(false);

        String repCode = hrhr.generateRepCode(this);
        this.jLabel63.setText(repCode);

        ResultSet rs333 = hrhr.showUpdatedJobDetails();
        this.jTable6.setModel(DbUtils.resultSetToTableModel(rs333));
        
        quotation kkl = new quotation();
        boolean avla = kkl.checkQuotationRecordAvailability(this);
//        System.out.println(avl);

        String q_date = "2002-02-15";
        double totall = 1;
        int q_dis = 1;
        String qcust_id = "C000001";
        String discription = "temp";
        double q_net_amount = 1;
        int qItmCount = 0;
        String status = "noComplete";

        if(avla){
            System.out.println("true");
        }
        else{
            System.out.println("false");
            kkl.addTempDataToQuotation(q_date, totall, q_dis, q_net_amount, qItmCount, discription, qcust_id, this);
        }
        
        advancedCustomer jkkl = new advancedCustomer();
        boolean availabe = jkkl.checkAdvancedCustRecordAvailability(this);
        
        if(availabe){
            System.out.println("true");
        }
        else{
            System.out.println("false");
            jkkl.addTempDataToAdvancedCust(q_date, totall, q_net_amount, q_net_amount, qItmCount, discription, qcust_id, status, this);
        }

        String qqid = kkl.generateQuotation_id(this);
        ResultSet rsw = kkl.getAddedItemsBy_qid(qqid);
        this.jTable13.setModel(DbUtils.resultSetToTableModel(rsw));
        
        this.jLabel149.setText(qqid);
        
        items_add_to_bill dfds = new items_add_to_bill();
        ResultSet rs32 = dfds.showCustomersDetails();
        this.jTable14.setModel(DbUtils.resultSetToTableModel(rs32));
        
        ResultSet rs322 = dfds.showCustomersDetails();
        this.jTable11.setModel(DbUtils.resultSetToTableModel(rs322));
        
        
        double calculatTot = kkl.calculate_q_Total(qqid);
        this.jTextField66.setText(String.valueOf(calculatTot));
        
        
        String Adv_idd = jkkl.generateAdvancedCust_id(this);
        ResultSet rswwfl = jkkl.getAddedItemsBy_advancedCust_ID(Adv_idd);
        this.jTable10.setModel(DbUtils.resultSetToTableModel(rswwfl));
        
        double calTot = jkkl.calculate_adv_Total(Adv_idd);
        this.jTextField54.setText(String.valueOf(calTot));
        
        this.jLabel135.setText(Adv_idd);

    }//GEN-LAST:event_btn_hrMousePressed

    private void btn_bill_summMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_bill_summMousePressed
        resetColor(btn_search);
        resetColor(btn_add);
        resetColor(btn_billing);
        setColor(btn_bill_summ);
        resetColor(btn_hr);
        resetColor(btn_hr2);
        resetColor(btn_hr4);
        resetColor(btn_billing1);
        
        this.pnl_settings.setVisible(false);
        this.pnl_hr.setVisible(false);
        this.pnl_searchItm.setVisible(false);
        this.pnl_addItms.setVisible(false);
        this.pnl_billing.setVisible(false);
        this.pnl_billingSumm.setVisible(true);
        this.pnl_barcode.setVisible(false);
        this.pnl_quickBill.setVisible(false);

        this.jPanel10.setVisible(false);
        this.jPanel13.setVisible(false);
        this.jPanel14.setVisible(false);
        this.jPanel15.setVisible(true);
        this.jPanel16.setVisible(false);
        this.jPanel55.setVisible(false);
        this.jPanel56.setVisible(false);

        billSearch kkk = new billSearch();
        ResultSet rs1 = kkk.showAllPendingBillDetails();
        this.jTable4.setModel(DbUtils.resultSetToTableModel(rs1));
        
        items_add_to_bill dfdd = new items_add_to_bill();
        ResultSet rs11 = dfdd.showEmployeeDetails();
        this.jTable21.setModel(DbUtils.resultSetToTableModel(rs11));

        ResultSet rs2 = dfdd.showCustomersDetails();
        this.jTable20.setModel(DbUtils.resultSetToTableModel(rs2));

    }//GEN-LAST:event_btn_bill_summMousePressed

    private void btn_billingMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_billingMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_billingMouseReleased

    private void btn_billingMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_billingMousePressed
        resetColor(btn_search);
        resetColor(btn_add);
        setColor(btn_billing);
        resetColor(btn_bill_summ);
        resetColor(btn_hr);
        resetColor(btn_hr2);
        resetColor(btn_hr4);
        resetColor(btn_billing1);
        this.pnl_settings.setVisible(false);
        this.pnl_hr.setVisible(false);
        this.pnl_searchItm.setVisible(false);
        this.pnl_addItms.setVisible(false);
        this.pnl_billing.setVisible(true);
        this.pnl_billingSumm.setVisible(false);
        this.pnl_barcode.setVisible(false);
        this.pnl_quickBill.setVisible(false);

        this.jPanel10.setVisible(false);
        this.jPanel13.setVisible(false);
        this.jPanel14.setVisible(true);
        this.jPanel15.setVisible(false);
        this.jPanel16.setVisible(false);
        this.jPanel55.setVisible(false);
        this.jPanel56.setVisible(false);

        this.jTextField4.setText("");
        this.jTextField5.setText("");

        this.jTextField7.setText("");

        this.jTextField8.setText("0");

        items_add_to_bill dfd = new items_add_to_bill();
        String billid = dfd.generateBill_id(this);
        this.jLabel47.setText(billid);

        ResultSet rs = dfd.getAddedItemsBy_bill_ID(billid);
        this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));

        ResultSet rs1 = dfd.showEmployeeDetails();
        this.jTable2.setModel(DbUtils.resultSetToTableModel(rs1));

        ResultSet rs2 = dfd.showCustomersDetails();
        this.jTable5.setModel(DbUtils.resultSetToTableModel(rs2));

        String billID = dfd.generateBill_id(this);
        double calculatedValue = dfd.calculateTotal(billID);
        this.jTextField7.setText(String.valueOf(calculatedValue));
    }//GEN-LAST:event_btn_billingMousePressed

    private void btn_addMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_addMousePressed
        resetColor(btn_search);
        setColor(btn_add);
        resetColor(btn_billing);
        resetColor(btn_bill_summ);
        resetColor(btn_hr);
        resetColor(btn_hr2);
        resetColor(btn_hr4);
        resetColor(btn_billing1);
        this.pnl_settings.setVisible(false);
        this.pnl_hr.setVisible(false);
        this.pnl_searchItm.setVisible(false);
        this.pnl_addItms.setVisible(true);
        this.pnl_billing.setVisible(false);
        this.pnl_billingSumm.setVisible(false);
        this.pnl_barcode.setVisible(false);
        this.pnl_quickBill.setVisible(false);

        this.jPanel10.setVisible(false);
        this.jPanel13.setVisible(true);
        this.jPanel14.setVisible(false);
        this.jPanel15.setVisible(false);
        this.jPanel16.setVisible(false);
        this.jPanel55.setVisible(false);
        this.jPanel56.setVisible(false);

        this.txt_add_itemName.setText("");
        this.txt_add_packSize.setText("");
        this.txt_add_qty.setText("");
        this.txt_add_wPrice.setText("");
        this.txt_add_retailPrice.setText("");

        storeItemData stf = new storeItemData();
        Component comp = null;
        
        String id = stf.generateItemCode(comp);
        this.jLabel313.setText(id);
        
        ResultSet rsff = stf.getSubItemData(id);
        this.jTable31.setModel(DbUtils.resultSetToTableModel(rsff));
        
        int subItemsCount = stf.getSubItemCount(id);
        this.txt_add_qty.setText(String.valueOf(subItemsCount));
        
        searchItems si = new searchItems();
        ResultSet rs = si.showUpdatedItemDetails();
        this.tbl_addItems.setModel(DbUtils.resultSetToTableModel(rs));
        
        setItemTypes();
        
        storeItemData ghyt = new storeItemData();
        //ddd.checkBillRecordAvailability(this);
        
        boolean avlb = ghyt.checkItemRecordAvailability(this);
//        System.out.println(avl);

        String itm_name = "temp prod";
        int warranty = 0;
        int qty = -1;
        double w_price = 1.00;
        double r_price = 1.00;
        String type = "no";
        String date = "2021-01-01";

        if(avlb){
            System.out.println("true");
        }
        else{
            System.out.println("false");
            ghyt.addTempItem(itm_name, warranty, qty, w_price, r_price, date, type, comp);
        }
        this.txt_add_itemName.requestFocusInWindow();
    }//GEN-LAST:event_btn_addMousePressed

    private void btn_searchMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_searchMousePressed
        setColor(btn_search);
        resetColor(btn_add);
        resetColor(btn_billing);
        resetColor(btn_bill_summ);
        resetColor(btn_hr);
        resetColor(btn_hr2);
        resetColor(btn_hr4);
        resetColor(btn_billing1);
        this.pnl_settings.setVisible(false);
        this.pnl_searchItm.setVisible(true);
        this.pnl_addItms.setVisible(false);
        this.pnl_billing.setVisible(false);
        this.pnl_billingSumm.setVisible(false);
        this.pnl_hr.setVisible(false);
        this.pnl_barcode.setVisible(false);
        this.pnl_quickBill.setVisible(false);
        

        this.jPanel10.setVisible(true);
        this.jPanel13.setVisible(false);
        this.jPanel14.setVisible(false);
        this.jPanel15.setVisible(false);
        this.jPanel16.setVisible(false);
        this.jPanel55.setVisible(false);
        this.jPanel56.setVisible(false);

        searchItems si = new searchItems();
        ResultSet rs = si.showItemDetails();
        this.tbl_items_search.setModel(DbUtils.resultSetToTableModel(rs));
        
        this.txt_search_text.requestFocusInWindow();

    }//GEN-LAST:event_btn_searchMousePressed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jButton39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton39ActionPerformed
        barcode bb = new barcode();

       boolean avlbl = bb.checkBarcodeDataAvailability(this);
       
       if(avlbl){
           System.out.println("AAA");
            String mb = bb.getMainBarCode(this);
            HashMap abb = new HashMap();
            abb.put("mainBarcodeID", mb);
            try {
                InputStream file3 = getClass().getResourceAsStream("/classes/barCord.jrxml");
                JasperDesign jdesign = JRXmlLoader.load(file3);

                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                JasperPrint jprint = JasperFillManager.fillReport(jreport, abb, conn);

                JasperViewer.viewReport(jprint, false);       
            } catch (Exception e) {
                e.printStackTrace();
            }

            bb.addMainBarcode(this);
        }
       else{
           System.out.println("DDD");
           String mb1 = bb.getPreviousMainBarCode(this);
           System.out.println(mb1);
            HashMap abbb = new HashMap();
            abbb.put("mainBarcodeID", mb1);
            try {
                InputStream file3 = getClass().getResourceAsStream("/classes/barCord.jrxml");
                JasperDesign jdesign = JRXmlLoader.load(file3);

                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                JasperPrint jprint = JasperFillManager.fillReport(jreport, abbb, conn);

                JasperViewer.viewReport(jprint, false);       
            } catch (Exception e) {
                e.printStackTrace();
            }
       }
        
    }//GEN-LAST:event_jButton39ActionPerformed

    private void jTextField44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField44ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField44ActionPerformed

    private void jTextField46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField46ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField46ActionPerformed

    private void jCheckBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox11ActionPerformed

    private void jButton42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton42ActionPerformed
        barcode bb = new barcode();
        
        int qty = Integer.parseInt(this.jTextField6.getText());
        String mobel = this.jTextField9.getText();
        String type = this.jTextField44.getText();
        String price = this.jTextField46.getText();
       
        String duplicate = "";
        if(jCheckBox11.isSelected()){
            for(int i=0; i<qty; i++){
                bb.addBarcodeItems2(mobel, this, type,this, price);
               
                duplicate = "yes";
            }
            bb.increaseNoOfBarcodeItmsByOne();
        }
        else{
            for(int i=0; i<qty; i++){
                bb.addBarcodeItems1(mobel, this, type,this, price);
            }
            duplicate = "no";
        }
        
        bb.addBundelBarcode(mobel, type, qty, price, duplicate, this);
        
        ResultSet rs4 = bb.ShowBundelBarcodes(bb.getMainBarCode(this));
        this.jTable8.setModel(DbUtils.resultSetToTableModel(rs4));
        
        int lblCount = 0;
        for(int i=0; i<jTable8.getRowCount(); i++){
                //String itemId = (String)jTable3.getValueAt(i, 1);
                //String qtyy = (String)jTable8.getValueAt(i, 4);
                int xx = (int)jTable8.getValueAt(i, 4);
                lblCount = lblCount + xx;
                
        }
        
        this.jLabel117.setText(Integer.toString(lblCount));
        
    }//GEN-LAST:event_jButton42ActionPerformed

    private void btn_hr2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_hr2MousePressed
        resetColor(btn_search);
        resetColor(btn_add);
        resetColor(btn_billing);
        resetColor(btn_bill_summ);
        resetColor(btn_hr);
        setColor(btn_hr2);
        resetColor(btn_hr4);
        resetColor(btn_billing1);
        
        this.pnl_settings.setVisible(false);
        this.pnl_hr.setVisible(false);
        this.pnl_searchItm.setVisible(false);
        this.pnl_addItms.setVisible(false);
        this.pnl_billing.setVisible(false);
        this.pnl_billingSumm.setVisible(false);
        this.pnl_barcode.setVisible(true);
        this.pnl_quickBill.setVisible(false);

        this.jPanel10.setVisible(false);
        this.jPanel13.setVisible(false);
        this.jPanel14.setVisible(false);
        this.jPanel15.setVisible(false);
        this.jPanel16.setVisible(false);
        this.jPanel23.setVisible(true);
        this.jPanel55.setVisible(false);
        this.jPanel56.setVisible(false);
        
        barcode fg = new barcode();
        ResultSet rs4 = fg.ShowBundelBarcodes(fg.getMainBarCode(this));
        this.jTable8.setModel(DbUtils.resultSetToTableModel(rs4));
    }//GEN-LAST:event_btn_hr2MousePressed

    private void jTable9MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable9MousePressed
        int selectedRow784 = this.jTable9.getSelectedRow();
        
        String itmCordee = this.jTable9.getModel().getValueAt(selectedRow784, 0).toString();
        String itmDiscripe = this.jTable9.getModel().getValueAt(selectedRow784, 1).toString();
        int itmQTye = (int)jTable9.getValueAt(selectedRow784, 3);
            String Warrantye = String.valueOf(this.jTable9.getModel().getValueAt(selectedRow784, 2).toString());
            String r_pricee = String.valueOf(this.jTable9.getModel().getValueAt(selectedRow784, 4).toString());
            //int dis = this.jTable4.getModel().getValueAt(selectedRow, 5).toString();
            
            //String invoID = this.jTable4.getModel().getValueAt(selectedRow, 0).toString();
            
            
            this.jTextField48.setText(itmCordee);
            this.jTextField49.setText(itmDiscripe);
            this.jTextField52.setText(Integer.toString(itmQTye));
            this.jTextField50.setText(r_pricee);
            this.jTextField53.setText(Warrantye);
    }//GEN-LAST:event_jTable9MousePressed

    private void jTextField47ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField47ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField47ActionPerformed

    private void jTextField48ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField48ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField48ActionPerformed

    private void jTextField49ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField49ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField49ActionPerformed

    private void jTextField50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField50ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField50ActionPerformed

    private void jTextField52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField52ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField52ActionPerformed

    private void jButton43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton43ActionPerformed
        quotation qwe = new quotation();
        advancedCustomer ggghi = new advancedCustomer();
        
        int selectedRowgl = this.jTable9.getSelectedRow();
        
        if(selectedRowgl == -1){
            JOptionPane.showMessageDialog(this, "Select a Item to Add..!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            int qtyy = Integer.parseInt(this.jTextField106.getText());
            try{   
                if(qwe.validateQTY(String.valueOf(qtyy))){
                    String itmCode = this.jTextField48.getText();
                    String nameq = this.jTextField49.getText();
                    int warrantyy = Integer.parseInt(this.jTextField53.getText());



                    int free = 0;
                    int dis = 0;

                    double r_price = Double.parseDouble(this.jTextField50.getText());
                    double valuees = ((qtyy * r_price)-((qtyy * r_price)*dis/100));

                    //double costValue = (w_price * qtyy);

                    String qid13 = ggghi.generateAdvancedCust_id(this);
                    
                    Date d = new Date();
                    SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
                    String date = sdf1.format(d); 
                    ggghi.addItemsToAdvancedCust(itmCode, nameq, warrantyy, qtyy, r_price, date, qid13, valuees, this);
                    this.jTextField106.setText("1");

                    ResultSet rs = ggghi.getAddedItemsBy_advancedCust_ID(qid13);
                    this.jTable10.setModel(DbUtils.resultSetToTableModel(rs));

                    double calculatTott = ggghi.calculate_adv_Total(qid13);
                    this.jTextField54.setText(String.valueOf(calculatTott));
                }
                else{
                    getToolkit().beep();
                    JOptionPane.showMessageDialog(this, "Billing QTY can't be 0 ..!","Error",JOptionPane.ERROR_MESSAGE);
                }   
            }      

            catch(Exception e){
                     e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton43ActionPerformed

    private void jTable10MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable10MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable10MousePressed

    private void jTextField54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField54ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField54ActionPerformed

    private void jTextField55ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField55ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField55ActionPerformed

    private void jTextField57ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField57ActionPerformed
        double Amt = Double.parseDouble(this.jTextField57.getText());
        double t = Double.parseDouble(this.jTextField54.getText());
        
        this.jTextField58.setText(String.valueOf(t - Amt));
    }//GEN-LAST:event_jTextField57ActionPerformed

    private void jTextField58ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField58ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField58ActionPerformed

    private void jButton45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton45ActionPerformed
        advancedCustomer gty = new advancedCustomer();
        quotation ghj = new quotation();
        //items_add_to_bill fff = new items_add_to_bill();
        
        Date d = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
        String tt = sdf.format(d);
        
                
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String dad = sdf1.format(d);
        
        
        String avd_id = gty.generateAdvancedCust_id(this);
        
        
        //String s3=s1.concat(s2);  
                
        String bill_date = dad.concat(tt);
        double totalel = gty.calculate_adv_Total(avd_id);
        
        String cust_id = this.jTextField55.getText();
        String q_discrip = this.jTextArea3.getText();
        
        
        //String uu = String.valueOf(advAmt);
        
        int rCount = this.jTable10.getRowCount();
        String statatat = "Not Completed";
        

        

        
        
        
        if(ghj.validateCustomer(cust_id) & ghj.validateDiscription(this.jTextField57.getText())){
            
            int advAmt = Integer.parseInt(this.jTextField57.getText());
            double due_amountt = (totalel)-(advAmt);
            String ooo = gty.updateAdvancedCustData(bill_date, totalel, advAmt, due_amountt, rCount, q_discrip, cust_id, statatat, avd_id, this);
            
            if(ooo==null){
                System.out.println("ERROR");
            }
            else{
                HashMap aa = new HashMap();
                aa.put("invoNum", avd_id);
                
                try { 
                    InputStream file = getClass().getResourceAsStream("/classes/advancedCust.jrxml");
                    JasperDesign jdesign = JRXmlLoader.load(file);

                    JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    JasperPrint jprint = JasperFillManager.fillReport(jreport, aa, conn);

                    JasperViewer.viewReport(jprint, false); 

                    try {
                    updateBill();
                    } catch (ParseException ex) {
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }
                
                        String q_date = "2002-02-15";
                        double totall = 1;
                        String qcust_id = "C000001";
                        String discription = "temp";
                        double q_net_amount = 1;
                        int qItmCount = 0;
                        String status = "noComplete";

                        

                        advancedCustomer jkkl = new advancedCustomer();
                        boolean availabe = jkkl.checkAdvancedCustRecordAvailability(this);

                        if(availabe){
                            System.out.println("true");
                        }
                        else{
                            System.out.println("false");
                            jkkl.addTempDataToAdvancedCust(q_date, totall, q_net_amount, q_net_amount, qItmCount, discription, qcust_id, status, this);
                        }
            }
            this.jTextField59.setText("");
            this.jTextField55.setText("");
            this.jTextArea3.setText("");
            this.jTextField57.setText("");
            this.jTextField58.setText("");
            this.jTextField54.setText("");
            
            String Adv_idd = gty.generateAdvancedCust_id(this);
            this.jLabel135.setText(Adv_idd);
            
            String note = "Advanced Payment from ".concat(avd_id).concat(". Customer - ").concat(cust_id);
            cashBalancing jow = new cashBalancing();
            jow.addDebitePayments(note, advAmt, dad, tt, this);
            setCashBalance();
                
        }
        else{
            getToolkit().beep();
            JOptionPane.showMessageDialog(this, "Pleace Fill the all Data...!!","Error",JOptionPane.ERROR_MESSAGE);
        }
        
        
        
        
        
        
        String Adv_idd = gty.generateAdvancedCust_id(this);
        ResultSet rswwf = gty.getAddedItemsBy_advancedCust_ID(Adv_idd);
        this.jTable10.setModel(DbUtils.resultSetToTableModel(rswwf));
        
    }//GEN-LAST:event_jButton45ActionPerformed

    private void jButton46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton46ActionPerformed
        int selectedRowgl = this.jTable10.getSelectedRow();
        
        if(selectedRowgl == -1){
            JOptionPane.showMessageDialog(this, "Select a Item to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            int userSelection = JOptionPane.showConfirmDialog(null,"Are you sure to delete this Item?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if(userSelection == 0){
                advancedCustomer jki = new advancedCustomer();
                String advDtemCode = this.jTable10.getModel().getValueAt(selectedRowgl, 0).toString();
                jki.deleteAddedAdvancedCustItems(advDtemCode);
                
                String advCusID = this.jLabel135.getText();
                ResultSet rsd4 = jki.getAddedItemsBy_advancedCust_ID(advCusID);
                
                //ResultSet rs = s.showItemDetails();
                this.jTable10.setModel(DbUtils.resultSetToTableModel(rsd4));
                
                double calculatedValueee = jki.calculate_adv_Total(advCusID);
                this.jTextField54.setText(String.valueOf(calculatedValueee));
            }
        }
    }//GEN-LAST:event_jButton46ActionPerformed

    private void jButton48ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton48ActionPerformed
        
    }//GEN-LAST:event_jButton48ActionPerformed

    private void jTextField59ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField59ActionPerformed
        items_add_to_bill dddhj = new items_add_to_bill();
        ResultSet rs4fp = dddhj.searchCustomerByName(this.jTextField59.getText());
        this.jTable11.setModel(DbUtils.resultSetToTableModel(rs4fp));
    }//GEN-LAST:event_jTextField59ActionPerformed

    private void jTextField53ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField53ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField53ActionPerformed

    private void jButton50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton50ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton50ActionPerformed

    private void jTable12MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable12MousePressed
        int selectedRow78 = this.jTable12.getSelectedRow();
        
        String itmCorde = this.jTable12.getModel().getValueAt(selectedRow78, 0).toString();
        String itmDiscrip = this.jTable12.getModel().getValueAt(selectedRow78, 1).toString();
        int itmQTy = (int)jTable12.getValueAt(selectedRow78, 3);
            String Warranty = String.valueOf(this.jTable12.getModel().getValueAt(selectedRow78, 2).toString());
            String r_price = String.valueOf(this.jTable12.getModel().getValueAt(selectedRow78, 4).toString());
            
            //int dis = this.jTable4.getModel().getValueAt(selectedRow, 5).toString();
            
            //String invoID = this.jTable4.getModel().getValueAt(selectedRow, 0).toString();
            
            
            this.jTextField60.setText(itmCorde);
            this.jTextField61.setText(itmDiscrip);
            this.jTextField64.setText(Integer.toString(itmQTy));
            this.jTextField62.setText(r_price);
            
            this.jTextField65.setText(Warranty);
    }//GEN-LAST:event_jTable12MousePressed

    private void jTextField56ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField56ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField56ActionPerformed

    private void jTextField60ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField60ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField60ActionPerformed

    private void jTextField61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField61ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField61ActionPerformed

    private void jTextField62ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField62ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField62ActionPerformed

    private void jTextField64ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField64ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField64ActionPerformed

    private void jButton44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton44ActionPerformed
        quotation qwe = new quotation();
        
        int selectedRowgl = this.jTable12.getSelectedRow();
        
        if(selectedRowgl == -1){
            JOptionPane.showMessageDialog(this, "Select a Item to Add..!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            int qtyy = Integer.parseInt(this.jTextField86.getText());
            try{   
                if(qwe.validateQTY(String.valueOf(qtyy))){
                    String itmCode = this.jTextField60.getText();
                    String nameq = this.jTextField61.getText();
                    int warrantyy = Integer.parseInt(this.jTextField65.getText());



                    int free = 0;
                    int dis = 0;

                    double r_price = Double.parseDouble(this.jTextField62.getText());
                    double valuee = ((qtyy * r_price)-((qtyy * r_price)*dis/100));


                    String qid = qwe.generateQuotation_id(this);


                    Date d = new Date();
                    SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
                    String date = sdf1.format(d); 
                    qwe.addItemsToQuotation(itmCode, nameq, warrantyy, qtyy, r_price, date, qid, valuee, this);
                    this.jTextField86.setText("1");

                    ResultSet rs = qwe.getAddedItemsBy_qid(qid);
                    this.jTable13.setModel(DbUtils.resultSetToTableModel(rs));

                    double calculatTot = qwe.calculate_q_Total(qid);
                    this.jTextField66.setText(String.valueOf(calculatTot));
                }
                else{
                    getToolkit().beep();
                    JOptionPane.showMessageDialog(this, "Quotation QTY can't be 0 ..!","Error",JOptionPane.ERROR_MESSAGE);
                }   
            }      

            catch(Exception e){
                     e.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_jButton44ActionPerformed

    private void jTextField65ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField65ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField65ActionPerformed

    private void jTable13MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable13MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable13MousePressed

    private void jTextField66ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField66ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField66ActionPerformed

    private void jTextField67ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField67ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField67ActionPerformed

    private void jTextField68ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField68ActionPerformed
        double tot = Double.parseDouble(this.jTextField66.getText());
        double discc = Double.parseDouble(this.jTextField68.getText());
        
        this.jTextField69.setText(String.valueOf(tot - discc));
    }//GEN-LAST:event_jTextField68ActionPerformed

    private void jTextField69ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField69ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField69ActionPerformed

    private void jButton47ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton47ActionPerformed
        int selectedRowg = this.jTable13.getSelectedRow();
        
        if(selectedRowg == -1){
            JOptionPane.showMessageDialog(this, "Select a Item to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            int userSelection = JOptionPane.showConfirmDialog(null,"Are you sure to delete this Item?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if(userSelection == 0){
                quotation jki = new quotation();
                String qtemCode = this.jTable13.getModel().getValueAt(selectedRowg, 0).toString();
                jki.deleteAddedQuotationItems(qtemCode);
                
                String qqID = jki.generateQuotation_id(this);
                ResultSet rsd = jki.getAddedItemsBy_qid(qqID);
                
                //ResultSet rs = s.showItemDetails();
                this.jTable13.setModel(DbUtils.resultSetToTableModel(rsd));
                
                double calculatedValuee = jki.calculate_q_Total(qqID);
                this.jTextField66.setText(String.valueOf(calculatedValuee));
            }
        }
    }//GEN-LAST:event_jButton47ActionPerformed

    private void jButton51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton51ActionPerformed
        quotation ghy = new quotation();
        //items_add_to_bill fff = new items_add_to_bill();
        
        Date d = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
        String t = sdf.format(d);
        
                
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String da = sdf1.format(d);
        
        
        String qiid = ghy.generateQuotation_id(this);
        
        
        //String s3=s1.concat(s2);  
                
        String bill_date = da.concat(t);
        double totale = ghy.calculate_q_Total(qiid);
        int q_dis = Integer.parseInt(this.jTextField68.getText());
        String cust_id = this.jTextField67.getText();
        String q_discrip = this.jTextArea4.getText();
        double net_amountt = (totale)-(q_dis);
        

        int no_extra_bonous;
            
            if(jCheckBox13.isSelected()){
                no_extra_bonous=1;
            }
            else{
                no_extra_bonous=0;
            }

        System.out.println(bill_date);
        
        
        if(ghy.validateCustomer(cust_id)){
            
            String ggggg = ghy.updateQuotationData(da, totale, q_dis, net_amountt, no_extra_bonous, q_discrip, cust_id, qiid, this);
            if(ggggg == null){
                System.out.println("Erroe");
            }
            else{
                HashMap aa = new HashMap();
                aa.put("invoNum", qiid);
                
                try { 
                    InputStream file = getClass().getResourceAsStream("/classes/quotation.jrxml");
                    JasperDesign jdesign = JRXmlLoader.load(file);

                    JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    JasperPrint jprint = JasperFillManager.fillReport(jreport, aa, conn);

                    JasperViewer.viewReport(jprint, false); 

                    try {
                    updateBill();
                    } catch (ParseException ex) {
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }
                this.jTextField67.setText("");
                this.jTextArea4.setText("");
                this.jTextField68.setText("0");
                this.jTextField69.setText("");
                this.jTextField66.setText("");
                this.jTextField70.setText("");
            }
            
            
            String qiidd = ghy.generateQuotation_id(this);
            this.jLabel149.setText(qiidd);
            
            quotation kkl = new quotation();
            boolean avla = kkl.checkQuotationRecordAvailability(this);

            String q_date = "2002-02-15";
            double totall = 1;
            int q_diss = 1;
            String qcust_id = "C000001";
            String discription = "temp";
            double q_net_amount = 1;
            int qItmCount = 0;

            if(avla){
                System.out.println("true");
            }
            else{
                System.out.println("false");
                kkl.addTempDataToQuotation(q_date, totall, q_diss, q_net_amount, qItmCount, discription, qcust_id, this);
            }
                
        }
        else{
            getToolkit().beep();
            JOptionPane.showMessageDialog(this, "Pleace Fill the all Data...!!","Error",JOptionPane.ERROR_MESSAGE);
        }
        
        items_add_to_bill ff = new items_add_to_bill();
        
        String id = ghy.getQuotation_id(this);
        
        
        String qqidd = ghy.generateQuotation_id(this);
        ResultSet rsww = ghy.getAddedItemsBy_qid(qqidd);
        this.jTable13.setModel(DbUtils.resultSetToTableModel(rsww));
        
      
        
        
        
    }//GEN-LAST:event_jButton51ActionPerformed

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton52ActionPerformed

    private void jTextField70ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField70ActionPerformed
        items_add_to_bill dddh = new items_add_to_bill();
        ResultSet rs4f = dddh.searchCustomerByName(this.jTextField70.getText());
        this.jTable14.setModel(DbUtils.resultSetToTableModel(rs4f));
    }//GEN-LAST:event_jTextField70ActionPerformed

    private void jButton54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton54ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton54ActionPerformed

    private void jButton55ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton55ActionPerformed
        items_add_to_bill hghh = new items_add_to_bill();
        cashBalancing hyt = new cashBalancing();
        
        int selectedRow = this.jTable4.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Pleace select a Invoice to Warranty","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            this.Warranty.setSize(1280,720);
            this.Warranty.setTitle("Warranty Exchanges");   
            this.Warranty.setLocationRelativeTo(this);
            this.Warranty.setVisible(true);
            String invoID = this.jTable4.getModel().getValueAt(selectedRow, 0).toString();
            String Customer = this.jTable4.getModel().getValueAt(selectedRow, 2).toString();
            int dis = (int)jTable4.getValueAt(selectedRow, 5);
            String total = String.valueOf(this.jTable4.getModel().getValueAt(selectedRow, 4).toString());
            //int dis = this.jTable4.getModel().getValueAt(selectedRow, 5).toString();
            String netAmt = String.valueOf(this.jTable4.getModel().getValueAt(selectedRow, 6).toString());
            String billDiscrip = String.valueOf(this.jTable4.getModel().getValueAt(selectedRow, 8).toString());
            String billType = String.valueOf(this.jTable4.getModel().getValueAt(selectedRow, 7).toString());
            //String invoID = this.jTable4.getModel().getValueAt(selectedRow, 0).toString();
            
            
            this.jLabel157.setText(invoID);
            this.jTextField72.setText(Customer);
            this.jTextField73.setText(Integer.toString(dis));
            this.jTextField71.setText(total);
            this.jTextField74.setText(netAmt);
            this.jTextArea5.setText(billDiscrip);
            this.jLabel161.setText(billType);
            //this.jLabel179.setText(invoID);
            
            
            
            ResultSet rs3 = hghh.getAddedItemsBy_bill_ID(invoID);
            this.jTable15.setModel(DbUtils.resultSetToTableModel(rs3));
            
            ResultSet rs99 = hyt.getAllNonClaimedWarranties();
            this.jTable16.setModel(DbUtils.resultSetToTableModel(rs99));
 
            this.jTextField76.setText("");
            
            this.jTextArea7.setText("");
            this.jTextField84.setText("");
            this.jTextField83.setText("");
            this.jTextField82.setText("");
            
            String hhh = hyt.getInvoiceDis(invoID);
                
            this.jTextArea5.setText(hhh);
//            this.jTextArea7.setText("");
//            this.jTextField81.setText("");
//            this.jTextField82.setText("");
//            this.jTextField83.setText("");
//            this.jTextField84.setText("");
//            this.jTextField135.setText("");
//            this.jTextField85.setText("");
            
        }
        
    }//GEN-LAST:event_jButton55ActionPerformed

    private void jButton56ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton56ActionPerformed
        items_add_to_bill hgh = new items_add_to_bill();
        cashBalancing fff = new cashBalancing();
        int selectedRow = this.jTable4.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Pleace select a Invoice to Return items!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            this.returnItms.setSize(1280,720);
            this.returnItms.setTitle("Return Items");   
            this.returnItms.setLocationRelativeTo(this);
            this.returnItms.setVisible(true);
            String invoID = this.jTable4.getModel().getValueAt(selectedRow, 0).toString();
            String Customer = this.jTable4.getModel().getValueAt(selectedRow, 2).toString();
            int dis = (int)jTable4.getValueAt(selectedRow, 5);
            String total = String.valueOf(this.jTable4.getModel().getValueAt(selectedRow, 4).toString());
            //int dis = this.jTable4.getModel().getValueAt(selectedRow, 5).toString();
            String netAmt = String.valueOf(this.jTable4.getModel().getValueAt(selectedRow, 6).toString());
            String billDiscrip = String.valueOf(this.jTable4.getModel().getValueAt(selectedRow, 8).toString());
            //String invoID = this.jTable4.getModel().getValueAt(selectedRow, 0).toString();
            
            
            this.jLabel179.setText(invoID);
            this.jTextField88.setText(Customer);
            this.jTextField89.setText(Integer.toString(dis));
            this.jTextField87.setText(total);
            this.jTextField90.setText(netAmt);
            this.jTextArea8.setText(billDiscrip);
            //this.jLabel179.setText(invoID);
            
            
            
            ResultSet rs = hgh.getAddedItemsBy_bill_ID(invoID);
            this.jTable17.setModel(DbUtils.resultSetToTableModel(rs));
            
            ResultSet rs99dgf = fff.getAllReturnItemsByInvoice(invoID);
            this.jTable40.setModel(DbUtils.resultSetToTableModel(rs99dgf));
        }    
        
        
        
            
    }//GEN-LAST:event_jButton56ActionPerformed

    private void jTextField95ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField95ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField95ActionPerformed

    private void jTextField94ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField94ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField94ActionPerformed

    private void jTextField92ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField92ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField92ActionPerformed

    private void jTextField91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField91ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField91ActionPerformed

    private void jButton60ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton60ActionPerformed
        items_add_to_bill iii = new items_add_to_bill();
        String billIDD = this.jLabel229.getText();

        int selectedRow7bgg = this.jTable17.getSelectedRow();
        if(selectedRow7bgg == -1){
            JOptionPane.showMessageDialog(returnItms, "Select a Item to Return.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            String billItemCodeh = this.jTable17.getModel().getValueAt(selectedRow7bgg, 0).toString();
            String strItemCode = this.jTable17.getModel().getValueAt(selectedRow7bgg, 1).toString();
            String qyyt = this.jTable17.getModel().getValueAt(selectedRow7bgg, 4).toString();
            String r_pprice = this.jTable17.getModel().getValueAt(selectedRow7bgg, 7).toString();
            int INTqty = Integer.parseInt(qyyt);
            String aaa = iii.checkSNAvailability(billItemCodeh);
            if(aaa.equals("")){
                this.edit_edit_billed_Items4.setSize(340,85);
                this.edit_edit_billed_Items4.setTitle("Non-serial items Return");
                this.edit_edit_billed_Items4.setLocationRelativeTo(this);
                this.edit_edit_billed_Items4.setVisible(true);
            }
            else{
                items_add_to_bill jiu87dsf = new items_add_to_bill();
                
                    this.edit_edit_billed_Items3.setSize(340,300);
                    this.edit_edit_billed_Items3.setTitle("Serial items Return");
                    this.edit_edit_billed_Items3.setLocationRelativeTo(this);
                    this.edit_edit_billed_Items3.setVisible(true);

                    String ProductItmCoded = this.jTable17.getModel().getValueAt(selectedRow7bgg, 0).toString();

                    ResultSet jjuyyfa = jiu87dsf.getSubItemDataFromBill(ProductItmCoded);
                    this.jTable41.setModel(DbUtils.resultSetToTableModel(jjuyyfa));
                
            }
        }
//        System.out.println("ffffff");
//        
//        int selectedRow2 = this.jTable4.getSelectedRow();
//            
//        String billIdd = this.jTable4.getModel().getValueAt(selectedRow2, 0).toString();
//        String creditCode = String.valueOf(this.jTable4.getModel().getValueAt(selectedRow2, 9).toString());
//        
//        int selectedRow0111 = this.jTable17.getSelectedRow();
//        if(selectedRow0111 == -1){
//            JOptionPane.showMessageDialog(returnItms, "Pleace select an Item to Return!","Error",JOptionPane.ERROR_MESSAGE);
//        }
//        else{
//            System.out.println("dddd");
//            
//            
//            String billItmID = this.jTable17.getModel().getValueAt(selectedRow0111, 0).toString();
//            int qtyy = (int)jTable17.getValueAt(selectedRow0111, 4);
//            String itemCodee = this.jTable17.getModel().getValueAt(selectedRow0111, 1).toString();
//            String itemName = this.jTable17.getModel().getValueAt(selectedRow0111, 2).toString();
//            String valuee = String.valueOf(this.jTable17.getModel().getValueAt(selectedRow0111, 8).toString());
//            String r_price = String.valueOf(this.jTable17.getModel().getValueAt(selectedRow0111, 6).toString());
//            
//            String bilID = this.jLabel179.getText();
//            
//            double netAmt = Double.parseDouble(this.jTextField90.getText());
//            double totttt = Double.parseDouble(this.jTextField87.getText());
//            
//            double vvv =  parseDouble(valuee);
//            double rrrr =  parseDouble(r_price);   
//
//            double finalValue = 0;
//            
//
//            
//            this.jTextField87.setText(String.valueOf(netTotal));
//            this.jTextField90.setText(String.valueOf(newNetVal));
//           
//            if(returnVlu == 0){
//                finalValue = finalQTY * rrrr;
//            }
//            else{
//                finalValue = vvv - returnVlu;
//            }
//            
//            String finalItmName = itemName.concat("-- (RETURNED-").concat(String.valueOf(returnVlu)).concat(")").concat(String.valueOf(returnQTY)).concat(" Items.");
//            
//            //billItem update............
//            try {
//            String query1 = "update bill_items set item_name = ?, qty = ?, value = ? where bill_item_id = ?";
//            PreparedStatement pst1 = conn.prepareStatement(query1);
//                pst1.setString(1, finalItmName);
//                pst1.setInt(2, finalQTY);
//                pst1.setDouble(3, finalValue);
//                pst1.setString(4, billItmID);
//                pst1.executeUpdate();
//            //JOptionPane.showMessageDialog(this, "Invoice Successfull","Movie Details", JOptionPane.INFORMATION_MESSAGE);
//            } catch (SQLException ex) {
//                ex.printStackTrace();
//                Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            // bill update...............
//            try {
//            String query1 = "update bill set total = ?, net_amount = ? where bill_id = ?";
//            PreparedStatement pst11 = conn.prepareStatement(query1);
//                pst11.setDouble(1, netTotal);
//                pst11.setDouble(2, newNetVal); 
//                pst11.setString(3, bilID);
//                pst11.executeUpdate();
//            } catch (SQLException ex) {
//                ex.printStackTrace();
//                Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            
//            //credite invoice due amount update........
//            
//            if(!creditCode.equals("no")){
//                try {
//                String query1 = "update creditedinvoices set dueAmt = dueAmt- ? where cdID = ?";
//                PreparedStatement pst111 = conn.prepareStatement(query1);
//                    pst111.setDouble(1, returnVlu);       
//                    pst111.setString(2, creditCode);
//                    pst111.executeUpdate();
//                } catch (SQLException ex) {
//                    ex.printStackTrace();
//                    Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//            else{
//                System.out.println("do nothing");
//            }
//
//            Date d = new Date();
//            SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
//        String tt = sdf.format(d);
//        
//                
//        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
//        String day = sdf1.format(d);
//        
//            
//            cashBalancing ggg = new cashBalancing();
//            String notee = (String.valueOf(returnQTY)).concat(" of ").concat(itemCodee).concat(" item/s Returned from ").concat(billIdd).concat(" invoice.");
//            
//            System.out.println(notee);
//            ggg.addCreditedPayments(notee, returnVlu, day, tt, this);
//            setCashBalance();
//
//            try {
//            String query = "update items set qty = qty+ ? where itm_code = ?";
//            PreparedStatement pst = conn.prepareStatement(query);
//
//                pst.setInt(1, returnQTY);
//                pst.setString(2, itemCodee);
//                pst.executeUpdate();
//            
//            
//            //JOptionPane.showMessageDialog(this, "Invoice Successfull","Movie Details", JOptionPane.INFORMATION_MESSAGE);
//            } catch (SQLException ex) {
//                ex.printStackTrace();
//                Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            items_add_to_bill huy = new items_add_to_bill();
//            ResultSet rs = huy.getAddedItemsBy_bill_ID(billIdd);
//            this.jTable17.setModel(DbUtils.resultSetToTableModel(rs));
//            
//            ggg.addReturnedItems(returnVlu, itemCodee, returnQTY, billIdd, billItmID, day, tt, this);
//            JOptionPane.showMessageDialog(returnItms, "Item Return Successfull","Movie Details", JOptionPane.INFORMATION_MESSAGE);
//        }
        
        
        
    }//GEN-LAST:event_jButton60ActionPerformed

    private void jTextField90ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField90ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField90ActionPerformed

    private void jTextField89ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField89ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField89ActionPerformed

    private void jTextField88ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField88ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField88ActionPerformed

    private void jTextField87ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField87ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField87ActionPerformed

    private void jTable17MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable17MousePressed
        int selectedRow1 = this.jTable17.getSelectedRow();
        
        String itmCorde = this.jTable17.getModel().getValueAt(selectedRow1, 1).toString();
        String itmDiscrip = this.jTable17.getModel().getValueAt(selectedRow1, 2).toString();
        int QQTy = (int)jTable17.getValueAt(selectedRow1, 4);
            String Warranty = String.valueOf(this.jTable17.getModel().getValueAt(selectedRow1, 3).toString());
            String r_price = String.valueOf(this.jTable17.getModel().getValueAt(selectedRow1, 5).toString());
            //String w_price = String.valueOf(this.jTable17.getModel().getValueAt(selectedRow1, 5).toString());
            //int dis = this.jTable4.getModel().getValueAt(selectedRow, 5).toString();
            
            //String invoID = this.jTable4.getModel().getValueAt(selectedRow, 0).toString();
            
            
            this.jTextField91.setText(itmCorde);
            this.jTextArea9.setText(itmDiscrip);
            this.jTextField94.setText(Integer.toString(QQTy));
            this.jTextField92.setText(r_price);
            this.jTextField95.setText(Warranty);
    }//GEN-LAST:event_jTable17MousePressed

    private void jButton62ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton62ActionPerformed
        int selectedRow = this.jTable4.getSelectedRow();
                    
                        String billl = this.jTable4.getModel().getValueAt(selectedRow, 0).toString();
                        String invoTypeee = this.jTable4.getModel().getValueAt(selectedRow, 7).toString();

                        if(invoTypeee.equals("Cash")){
                            HashMap ab = new HashMap();
                            ab.put("invoNum", billl);
                            try {

                                InputStream file = getClass().getResourceAsStream("/classes/cashInvo.jrxml");
                                JasperDesign jdesign = JRXmlLoader.load(file);

                                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                                JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                                JasperViewer.viewReport(jprint, false);

                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        }
                        else if(invoTypeee.equals("Cash Advanced")){
                            HashMap ab = new HashMap();
                            ab.put("invoNum", billl);
                            try {

                                InputStream file = getClass().getResourceAsStream("/classes/cashInvo_1.jrxml");
                                JasperDesign jdesign = JRXmlLoader.load(file);

                                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                                JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                                JasperViewer.viewReport(jprint, false);

                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        }
                        else if(invoTypeee.equals("Credit")){
                            HashMap ab = new HashMap();
                            ab.put("invoNum", billl);
                            try {

                                InputStream file = getClass().getResourceAsStream("/classes/CreditInvo.jrxml");
                                JasperDesign jdesign = JRXmlLoader.load(file);

                                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                                JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                                JasperViewer.viewReport(jprint, false);

                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        }
                        else if(invoTypeee.equals("Credit Advanced")){
                            HashMap ab = new HashMap();
                            ab.put("invoNum", billl);
                            try {

                                InputStream file = getClass().getResourceAsStream("/classes/CreditInvo_1.jrxml");
                                JasperDesign jdesign = JRXmlLoader.load(file);

                                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                                JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                                JasperViewer.viewReport(jprint, false);

                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        }
                        else if(invoTypeee.equals("Cheque")){
                            HashMap ab = new HashMap();
                            ab.put("invoNum", billl);
                            try {

                                InputStream file = getClass().getResourceAsStream("/classes/Cheque.jrxml");
                                JasperDesign jdesign = JRXmlLoader.load(file);

                                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                                JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                                JasperViewer.viewReport(jprint, false);

                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        } 
                        this.returnItms.dispose();
                        billSearch kkk1 = new billSearch();
                        ResultSet rs11 = kkk1.showAllPendingBillDetails();
                        this.jTable4.setModel(DbUtils.resultSetToTableModel(rs11));
    }//GEN-LAST:event_jButton62ActionPerformed

    private void txt_search_textKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search_textKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            searchItems fs = new searchItems();
            ResultSet aaa = fs.searchByItemCode(this.txt_search_text.getText().toString());
            this.tbl_items_search.setModel(DbUtils.resultSetToTableModel(aaa));
        }
    }//GEN-LAST:event_txt_search_textKeyPressed

    private void txt_search_bill_itmKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search_bill_itmKeyPressed
        storeItemData juki = new storeItemData();
        if(evt.getKeyCode() == 10){
            txt_search_bill_itm.requestFocus();
        }
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            searchItems st = new searchItems();
            ResultSet abb = st.searchByItemCode(this.txt_search_bill_itm.getText().toString());
            this.tbl_addBillItems.setModel(DbUtils.resultSetToTableModel(abb));
            
            if(abb!= null){
                String SearchedItmCode = st.getItemCodeBySubItemCode(this.txt_search_bill_itm.getText().toString());
                ResultSet rs333 = juki.getSubItemData(SearchedItmCode);
                this.jTable33.setModel(DbUtils.resultSetToTableModel(rs333));
            }
        }
    }//GEN-LAST:event_txt_search_bill_itmKeyPressed

    private void jButton65ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton65ActionPerformed
        items_add_to_bill iii1 = new items_add_to_bill();
        cashBalancing kkl = new cashBalancing();
        
        int selectedRow123 = this.jTable17.getSelectedRow();
        
        
        if(selectedRow123 == -1){
            JOptionPane.showMessageDialog(returnItms, "Select a Item to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            int userSelection = JOptionPane.showConfirmDialog(null,"Are you sure to delete this Item?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if(userSelection == 0){
                
                
                String billItemCode = this.jTable17.getModel().getValueAt(selectedRow123, 0).toString();
                String cashBalCode = this.jTable17.getModel().getValueAt(selectedRow123, 9).toString();
                
                kkl.deleteDebitedPayment(cashBalCode);
                iii1.deleteAddedBillItems(billItemCode);
                
                String billID = this.jLabel179.getText();
                ResultSet rsss = iii1.getAddedItemsBy_bill_ID(billID);
                
                //ResultSet rs = s.showItemDetails();
                this.jTable17.setModel(DbUtils.resultSetToTableModel(rsss));
                
                try {
                    int qtyy12m = (int)jTable17.getValueAt(selectedRow123, 4);
                    String itemCodee1 = this.jTable17.getModel().getValueAt(selectedRow123, 1).toString();
                    String query = "update items set qty = qty+ ? where itm_code = ?";
                    PreparedStatement pst = conn.prepareStatement(query);

                        pst.setInt(1, qtyy12m);
                        pst.setString(2, itemCodee1);
                        pst.executeUpdate();


                    //JOptionPane.showMessageDialog(this, "Invoice Successfull","Movie Details", JOptionPane.INFORMATION_MESSAGE);
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                
            }
            setCashBalance();
        }
        
        
    }//GEN-LAST:event_jButton65ActionPerformed

    private void jButton66ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton66ActionPerformed
        searchItems s = new searchItems();
        
        if(this.jComboBox6.getSelectedItem().toString().equals("Item Name")){
            ResultSet a = s.searchByItemName(this.jTextField56.getText().toString());
            this.jTable12.setModel(DbUtils.resultSetToTableModel(a));
        }
        else if(this.jComboBox6.getSelectedItem().toString().equals("Item Code")){
            ResultSet ab = s.searchByItemCode(this.jTextField56.getText().toString());
            this.jTable12.setModel(DbUtils.resultSetToTableModel(ab));
        }
        else if(this.jComboBox6.getSelectedItem().toString().equals("Category")){
            ResultSet abb = s.searchByItemCatogary(this.jTextField56.getText().toString());
            this.jTable12.setModel(DbUtils.resultSetToTableModel(abb));
        }
    }//GEN-LAST:event_jButton66ActionPerformed

    private void jButton67ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton67ActionPerformed
        searchItems s = new searchItems();
        
        if(this.jComboBox7.getSelectedItem().toString().equals("Item Name")){
            ResultSet a = s.searchByItemName(this.jTextField47.getText().toString());
            this.jTable9.setModel(DbUtils.resultSetToTableModel(a));
        }
        else if(this.jComboBox7.getSelectedItem().toString().equals("Item Code")){
            ResultSet ab = s.searchByItemCode(this.jTextField47.getText().toString());
            this.jTable9.setModel(DbUtils.resultSetToTableModel(ab));
        }
        else if(this.jComboBox7.getSelectedItem().toString().equals("Category")){
            ResultSet abb = s.searchByItemCatogary(this.jTextField47.getText().toString());
            this.jTable9.setModel(DbUtils.resultSetToTableModel(abb));
        }
    }//GEN-LAST:event_jButton67ActionPerformed

    private void jTextField86ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField86ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField86ActionPerformed

    private void jTextField106ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField106ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField106ActionPerformed

    private void jTable11KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable11KeyPressed
    
        
    }//GEN-LAST:event_jTable11KeyPressed

    private void jTable11MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable11MousePressed
        int selectedRow124 = this.jTable11.getSelectedRow();
        
        
            String custIDD = this.jTable11.getModel().getValueAt(selectedRow124, 0).toString();
            this.jTextField55.setText(custIDD);
    }//GEN-LAST:event_jTable11MousePressed

    private void jTable18MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable18MousePressed
        int selectedRow1u1 = this.jTable18.getSelectedRow();
        
        //double advAmounte = (double)jTable18.getValueAt(selectedRow1u1, 2);
        double advAmounte = Double.parseDouble(String.valueOf(this.jTable18.getModel().getValueAt(selectedRow1u1, 2).toString()));
        int bill_dis = Integer.parseInt(this.jTextField8.getText());
        
        double tot = Double.parseDouble(this.jTextField7.getText());
        double netaaaa = tot - bill_dis;
        
        this.jTextField111.setText(String.valueOf(netaaaa - advAmounte));
//            String itmCorde = this.jTable18.getModel().getValueAt(selectedRow1, 1).toString();
//            String itmDiscrip = this.jTable18.getModel().getValueAt(selectedRow1, 2).toString();
//            int QQTy = (int)jTable18.getValueAt(selectedRow1, 2);
    }//GEN-LAST:event_jTable18MousePressed

    private void jButton69ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton69ActionPerformed
        try {
                String query = "update bill_items set item_name = ? where bill_item_id = ?";
                PreparedStatement pstd = conn.prepareStatement(query);

                    for(int i=0; i<jTable3.getRowCount(); i++){
                        
                        String billItemId = (String)jTable3.getValueAt(i, 0);
                        String name = (String)jTable3.getValueAt(i, 2);
                        
                        String billedSN = getBillItemSN(billItemId);
                        System.out.println(billedSN);
                        String newName = name.concat(" - ").concat(billedSN);
                        
                        pstd.setString(1, newName);
                        pstd.setString(2, billItemId);
                        pstd.executeUpdate();
                    }
        } catch (SQLException ex) {
            ex.printStackTrace();
            Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(this.jComboBox8.getSelectedItem().toString().equals("Cash Invoice") & jCheckBox14.isSelected() ){
            System.out.println("cash advances");
            
            items_add_to_bill ffff = new items_add_to_bill();
            cashBalancing cbbb = new cashBalancing();
            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
            String t = sdf.format(d);
            lbl_main_time.setText(t);

            SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
            String da = sdf1.format(d);
            lbl_main_date.setText(da);

            String billID = ffff.generateBill_id(this);


            //String s3=s1.concat(s2);  

            String bill_date = da.concat(t);
            double total = ffff.calculateTotal(billID);
            int bill_dis = Integer.parseInt(this.jTextField8.getText());
            String cust_id = this.jTextField4.getText();
            String e_id = this.jTextField5.getText();
            double net_amount = (total)-(bill_dis);
            int setle_days = 0;

            String status = "COMPLETE";

            int itmCount = jTable3.getRowCount();
            
            int selectedRow1u = this.jTable18.getSelectedRow();
        
//            String itmCorde = this.jTable18.getModel().getValueAt(selectedRow1, 1).toString();
//            String itmDiscrip = this.jTable18.getModel().getValueAt(selectedRow1, 2).toString();
//            int QQTy = (int)jTable18.getValueAt(selectedRow1, 2);
            
            int no_extra_bonous;

                if(jCheckBox2.isSelected()){
                    no_extra_bonous=1;
                }
                else{
                    no_extra_bonous=0;
                }
            String advancedCode = this.jTable18.getModel().getValueAt(selectedRow1u, 0).toString();
            double advAmount = Double.parseDouble(String.valueOf(this.jTable18.getModel().getValueAt(selectedRow1u, 2).toString()));
            String invoiceType = "Cash Advanced";
            String recevingDate = da;
            String creditCodeChequeCode = "no";
            double grangAmount = net_amount - advAmount;
            String discrip = this.jTextArea16.getText();

            System.out.println(bill_date);
            boolean isOkk = ffff.UpdateBillData(bill_date, total, bill_dis, cust_id, e_id, net_amount, setle_days, status, itmCount, no_extra_bonous, advancedCode, advAmount, invoiceType, recevingDate, creditCodeChequeCode, grangAmount,t,discrip, billID, billSubmition); 

            if (isOkk){
               try {
                String query = "update items set qty = qty- ? where itm_code = ?";
                PreparedStatement pst = conn.prepareStatement(query);

                    for(int i=0; i<jTable3.getRowCount(); i++){
                        String itemId = (String)jTable3.getValueAt(i, 1);
                        int qty = (int)jTable3.getValueAt(i, 4);

                        pst.setInt(1, qty);
                        pst.setString(2, itemId);
                        pst.executeUpdate();
                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                }

                items_add_to_bill ff = new items_add_to_bill();

                String id = ff.getBill_id(this);
                
                String eid = this.jTextField5.getText();
                HashMap a = new HashMap();
                a.put("invoNum", id);
                
                try { 
                    InputStream file = getClass().getResourceAsStream("/classes/cashInvo_1.jrxml");
                    JasperDesign jdesign = JRXmlLoader.load(file);

                    JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    JasperPrint jprint = JasperFillManager.fillReport(jreport, a, conn);

                    JasperViewer.viewReport(jprint, false); 

                    try {
                    updateBill();
                    } catch (ParseException ex) {
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }
                this.billSubmition.dispose();
                String note = billID.concat(" - cash avdvance invoice payment");

                cbbb.addDebitePayments(note, grangAmount, da, t, this);
                setCashBalance();
                
                saveInvoiceDiscriptionForNewInvoices(discrip, id);


                items_add_to_bill dfdd = new items_add_to_bill();
                String billid = dfdd.generateBill_id(this);
                this.jLabel47.setText(billid);

                ResultSet rs = dfdd.getAddedItemsBy_bill_ID(billid);
                this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));

                this.jTextField4.setText("");
                this.jTextField5.setText("");

                this.jTextField7.setText("");

                this.jTextField8.setText("0"); 
            }
        }
        else if(this.jComboBox8.getSelectedItem().toString().equals("Cash Invoice") & !jCheckBox14.isSelected() ){
            System.out.println("cash only");
            //        cashBalancing cbb = new cashBalancing();
            items_add_to_bill fff = new items_add_to_bill();
            cashBalancing cbb = new cashBalancing();
            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
            String t = sdf.format(d);
            lbl_main_time.setText(t);

            SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
            String da = sdf1.format(d);
            lbl_main_date.setText(da);

            String billID = fff.generateBill_id(this);


            //String s3=s1.concat(s2);  

            String bill_date = da.concat(t);
            double total = fff.calculateTotal(billID);
            int bill_dis = Integer.parseInt(this.jTextField8.getText());
            String cust_id = this.jTextField4.getText();
            String e_id = this.jTextField5.getText();
            double net_amount = (total)-(bill_dis);
            int setle_days = 0;

            String status = "COMPLETE";

            int itmCount = jTable3.getRowCount();

            int no_extra_bonous;

                if(jCheckBox2.isSelected()){
                    no_extra_bonous=1;
                }
                else{
                    no_extra_bonous=0;
                }
            String advancedCode = "no";
            double advAmount = 0;
            String invoiceType = "Cash";
            String recevingDate = da;
            String creditCodeChequeCode = "no";
            double grangAmount = net_amount;
            String discrip = this.jTextArea16.getText();

            System.out.println(bill_date);
            boolean isOkk = fff.UpdateBillData(bill_date, total, bill_dis, cust_id, e_id, net_amount, setle_days, status, itmCount, no_extra_bonous, advancedCode, advAmount, invoiceType, recevingDate, creditCodeChequeCode, grangAmount,t,discrip, billID, billSubmition); 

            if (isOkk){
               try {
                String query = "update items set qty = qty- ? where itm_code = ?";
                PreparedStatement pst = conn.prepareStatement(query);

                    for(int i=0; i<jTable3.getRowCount(); i++){
                        String itemId = (String)jTable3.getValueAt(i, 1);
                        int qty = (int)jTable3.getValueAt(i, 4);

                        pst.setInt(1, qty);
                        pst.setString(2, itemId);
                        pst.executeUpdate();
                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                }

                items_add_to_bill ff = new items_add_to_bill();

                String id = ff.getBill_id(this);
                
                String eid = this.jTextField5.getText();
                HashMap a = new HashMap();
                a.put("invoNum", id);
                
                try { 
                    InputStream file = getClass().getResourceAsStream("/classes/cashInvo.jrxml");
                    JasperDesign jdesign = JRXmlLoader.load(file);

                    JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    JasperPrint jprintf = JasperFillManager.fillReport(jreport, a, conn);

                    JasperViewer.viewReport(jprintf, false); 

                    try {
                    updateBill();
                    } catch (ParseException ex) {
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }
                this.billSubmition.dispose();

                String note = billID.concat(" - cash invoice payment");

                cbb.addDebitePayments(note, net_amount, da, t, this);
                setCashBalance();
                
                saveInvoiceDiscriptionForNewInvoices(discrip, id);

                items_add_to_bill dfdd = new items_add_to_bill();
                String billid = dfdd.generateBill_id(this);
                this.jLabel47.setText(billid);

                ResultSet rs = dfdd.getAddedItemsBy_bill_ID(billid);
                this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));
                
                
                this.jTextField4.setText("");
                this.jTextField5.setText("");

                this.jTextField7.setText("");

                this.jTextField8.setText("0"); 
            }
            
        }
        else if(this.jComboBox8.getSelectedItem().toString().equals("Credit Invoice") & jCheckBox14.isSelected() ){
            System.out.println("credit adv");
            
            items_add_to_bill fffff = new items_add_to_bill();
            cashBalancing cbbbb = new cashBalancing();
            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
            String t = sdf.format(d);
            //lbl_main_time.setText(t);

            SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
            String da = sdf1.format(d);
           //lbl_main_date.setText(da);

            String billID = fffff.generateBill_id(this);


            //String s3=s1.concat(s2);  

            String bill_date = da.concat(t);
            double total = fffff.calculateTotal(billID);
            int bill_dis = Integer.parseInt(this.jTextField8.getText());
            String cust_id = this.jTextField4.getText();
            String e_id = this.jTextField5.getText();
            double net_amount = (total)-(bill_dis);
            int setle_days = 0;

            String status = "PENDING";

            int itmCount = jTable3.getRowCount();
            
            int selectedRow1u = this.jTable18.getSelectedRow();
        
//            String itmCorde = this.jTable18.getModel().getValueAt(selectedRow1, 1).toString();
//            String itmDiscrip = this.jTable18.getModel().getValueAt(selectedRow1, 2).toString();
//            int QQTy = (int)jTable18.getValueAt(selectedRow1, 2);
            
            int no_extra_bonous;

                if(jCheckBox2.isSelected()){
                    no_extra_bonous=1;
                }
                else{
                    no_extra_bonous=0;
                }
            String advancedCode = this.jTable18.getModel().getValueAt(selectedRow1u, 0).toString();
            double advAmount = Double.parseDouble(String.valueOf(this.jTable18.getModel().getValueAt(selectedRow1u, 2).toString()));
            
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            
            String invoiceType = "Credit Advanced";
            String recevingDate = df.format(jDateChooser1.getDate());
            String creditCodeChequeCode = fffff.generateCreditInvoiceCode(this);
            double grangAmount = net_amount - advAmount;
            double duePayment = grangAmount - (Double.parseDouble(this.jTextField108.getText()));
            this.jTextField112.setText(String.valueOf(duePayment));
            
            double payed = advAmount + (Double.parseDouble(this.jTextField108.getText()));
            double payment = Double.parseDouble(this.jTextField108.getText());
            
            String discrip = this.jTextArea16.getText();
            boolean isOkk = fffff.UpdateBillData(bill_date, total, bill_dis, cust_id, e_id, net_amount, setle_days, status, itmCount, no_extra_bonous, advancedCode, advAmount, invoiceType, recevingDate, creditCodeChequeCode, grangAmount,t,discrip, billID, billSubmition); 

            if (isOkk){
                String crICode = fffff.addCreditInvoice(billID, net_amount, payed, duePayment, recevingDate,cust_id, this);
                fffff.addCreditSubInvoice(payment, da, crICode, this);
               try {
                String query = "update items set qty = qty- ? where itm_code = ?";
                PreparedStatement pst = conn.prepareStatement(query);

                    for(int i=0; i<jTable3.getRowCount(); i++){
                        String itemId = (String)jTable3.getValueAt(i, 1);
                        int qty = (int)jTable3.getValueAt(i, 4);

                        pst.setInt(1, qty);
                        pst.setString(2, itemId);
                        pst.executeUpdate();
                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                }

                items_add_to_bill ff = new items_add_to_bill();

                String id = ff.getBill_id(this);
                
                String eid = this.jTextField5.getText();
                HashMap a = new HashMap();
                a.put("invoNum", id);
                this.billSubmition.dispose();
                
                double creditSum = calculateCreditAmtByCustomer(cust_id);
                setNewCreditValue(creditSum, cust_id);
                try { 
                    InputStream file = getClass().getResourceAsStream("/classes/CreditInvo_1.jrxml");
                    JasperDesign jdesign = JRXmlLoader.load(file);

                    JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    JasperPrint jprint = JasperFillManager.fillReport(jreport, a, conn);

                    JasperViewer.viewReport(jprint, false); 

                    try {
                    updateBill();
                    } catch (ParseException ex) {
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }

                String note = billID.concat(" - credit invoice payment");

                cbbbb.addDebitePayments(note, payment, da, t, this);
                setCashBalance();

                saveInvoiceDiscriptionForNewInvoices(discrip, id);
                
                items_add_to_bill dfdd = new items_add_to_bill();
                String billid = dfdd.generateBill_id(this);
                this.jLabel47.setText(billid);

                ResultSet rs = dfdd.getAddedItemsBy_bill_ID(billid);
                this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));

                this.jTextField4.setText("");
                this.jTextField5.setText("");

                this.jTextField7.setText("");

                this.jTextField8.setText("0"); 
            }
            
        }
        if(this.jComboBox8.getSelectedItem().toString().equals("Credit Invoice") & !jCheckBox14.isSelected() ){
            System.out.println("credit only");
            
            items_add_to_bill ffffff = new items_add_to_bill();
            cashBalancing cbbbbb = new cashBalancing();
            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
            String t = sdf.format(d);
            //lbl_main_time.setText(t);

            SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
            String da = sdf1.format(d);
            //lbl_main_date.setText(da);

            String billID = ffffff.generateBill_id(this);


            //String s3=s1.concat(s2);  

            String bill_date = da.concat(t);
            double total = ffffff.calculateTotal(billID);
            int bill_dis = Integer.parseInt(this.jTextField8.getText());
            String cust_id = this.jTextField4.getText();
            String e_id = this.jTextField5.getText();
            double net_amount = (total)-(bill_dis);
            int setle_days = 0;

            String status = "PENDING";

            int itmCount = jTable3.getRowCount();
            
            int selectedRow1u = this.jTable18.getSelectedRow();
        
//            String itmCorde = this.jTable18.getModel().getValueAt(selectedRow1, 1).toString();
//            String itmDiscrip = this.jTable18.getModel().getValueAt(selectedRow1, 2).toString();
//            int QQTy = (int)jTable18.getValueAt(selectedRow1, 2);
            
            int no_extra_bonous;

                if(jCheckBox2.isSelected()){
                    no_extra_bonous=1;
                }
                else{
                    no_extra_bonous=0;
                }
            String advancedCode = "no";
            double advAmount = 0;
            
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            
            String invoiceType = "Credit";
            String recevingDate = df.format(jDateChooser1.getDate());
            String creditCodeChequeCode = ffffff.generateCreditInvoiceCode(this);
            double grangAmount = net_amount;
            double duePayment = grangAmount - (Double.parseDouble(this.jTextField108.getText()));
            this.jTextField112.setText(String.valueOf(duePayment));
            
            double payed = Double.parseDouble(this.jTextField108.getText());
            double payment = Double.parseDouble(this.jTextField108.getText());
            String discrip = this.jTextArea16.getText();
            boolean isOkk = ffffff.UpdateBillData(bill_date, total, bill_dis, cust_id, e_id, net_amount, setle_days, status, itmCount, no_extra_bonous, advancedCode, advAmount, invoiceType, recevingDate, creditCodeChequeCode, grangAmount,t,discrip, billID, billSubmition); 

            if (isOkk){
                String crICodee = ffffff.addCreditInvoice(billID, net_amount, payed, duePayment, recevingDate,cust_id, this);
                ffffff.addCreditSubInvoice(payment, da, crICodee, this);
               try {
                String query = "update items set qty = qty- ? where itm_code = ?";
                PreparedStatement pst = conn.prepareStatement(query);

                    for(int i=0; i<jTable3.getRowCount(); i++){
                        String itemId = (String)jTable3.getValueAt(i, 1);
                        int qty = (int)jTable3.getValueAt(i, 4);

                        pst.setInt(1, qty);
                        pst.setString(2, itemId);
                        pst.executeUpdate();
                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                }

                items_add_to_bill ff = new items_add_to_bill();

                String id = ff.getBill_id(this);
                
                String eid = this.jTextField5.getText();
                HashMap a = new HashMap();
                a.put("invoNum", id);
                this.billSubmition.dispose();
                
                double creditSum = calculateCreditAmtByCustomer(cust_id);
                setNewCreditValue(creditSum, cust_id);
                try { 
                    InputStream file = getClass().getResourceAsStream("/classes/CreditInvo.jrxml");
                    JasperDesign jdesign = JRXmlLoader.load(file);

                    JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    JasperPrint jprint = JasperFillManager.fillReport(jreport, a, conn);

                    JasperViewer.viewReport(jprint, false); 

                    try {
                    updateBill();
                    } catch (ParseException ex) {
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }

                String note = billID.concat(" - credit invoice payment");

                cbbbbb.addDebitePayments(note, payment, da, t, this);
                setCashBalance();

                saveInvoiceDiscriptionForNewInvoices(discrip, id);

                items_add_to_bill dfdd = new items_add_to_bill();
                String billid = dfdd.generateBill_id(this);
                this.jLabel47.setText(billid);

                ResultSet rs = dfdd.getAddedItemsBy_bill_ID(billid);
                this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));

                this.jTextField4.setText("");
                this.jTextField5.setText("");

                this.jTextField7.setText("");

                this.jTextField8.setText("0");
            }
        }
        else if(this.jComboBox8.getSelectedItem().toString().equals("Cheque Invoice")){
            System.out.println("cheque");
            
            items_add_to_bill fffffff = new items_add_to_bill();
            cashBalancing cbbbbbb = new cashBalancing();
            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
            String t = sdf.format(d);
            lbl_main_time.setText(t);

            SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
            String da = sdf1.format(d);
            lbl_main_date.setText(da);

            String billID = fffffff.generateBill_id(this);


            //String s3=s1.concat(s2);  

            String bill_date = da.concat(t);
            double total = fffffff.calculateTotal(billID);
            int bill_dis = Integer.parseInt(this.jTextField8.getText());
            String cust_id = this.jTextField4.getText();
            String e_id = this.jTextField5.getText();
            double net_amount = (total)-(bill_dis);
            int setle_days = 0;

            String status = "PENDING";

            int itmCount = jTable3.getRowCount();
            
            int selectedRow1u = this.jTable18.getSelectedRow();
        
//            String itmCorde = this.jTable18.getModel().getValueAt(selectedRow1, 1).toString();
//            String itmDiscrip = this.jTable18.getModel().getValueAt(selectedRow1, 2).toString();
//            int QQTy = (int)jTable18.getValueAt(selectedRow1, 2);
            
            int no_extra_bonous;

                if(jCheckBox2.isSelected()){
                    no_extra_bonous=1;
                }
                else{
                    no_extra_bonous=0;
                }
            String advancedCode = "no";
            double advAmount = 0;
            
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            
            String invoiceType = "Cheque";
            String recevingDate = df.format(jDateChooser1.getDate());
            String creditCodeChequeCode = fffffff.generateChequeInvoiceCode(this);
            double grangAmount = net_amount;
//            double duePayment = grangAmount - (Double.parseDouble(this.jTextField108.getText()));
//            this.jTextField112.setText(String.valueOf(duePayment));
            String chequeNo = this.jTextField113.getText();
            
//            double payed = Double.parseDouble(this.jTextField108.getText());
//            double payment = Double.parseDouble(this.jTextField108.getText());
            String discrip = this.jTextArea16.getText();
            
            boolean isOkk = fffffff.UpdateBillData(bill_date, total, bill_dis, cust_id, e_id, net_amount, setle_days, status, itmCount, no_extra_bonous, advancedCode, advAmount, invoiceType, recevingDate, creditCodeChequeCode, grangAmount,t,discrip, billID, billSubmition); 

            if (isOkk){
                //fffffff.addCreditInvoice(billID, net_amount, payed, duePayment, payment, da, recevingDate, this);
                fffffff.addChequeInvoice(billID, da, recevingDate, net_amount, chequeNo, status, this);
               try {
                String query = "update items set qty = qty- ? where itm_code = ?";
                PreparedStatement pst = conn.prepareStatement(query);

                    for(int i=0; i<jTable3.getRowCount(); i++){
                        String itemId = (String)jTable3.getValueAt(i, 1);
                        int qty = (int)jTable3.getValueAt(i, 4);

                        pst.setInt(1, qty);
                        pst.setString(2, itemId);
                        pst.executeUpdate();
                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                }

                items_add_to_bill ff = new items_add_to_bill();

                String id = ff.getBill_id(this);
                
                String eid = this.jTextField5.getText();
                HashMap a = new HashMap();
                a.put("invoNum", id);
                this.billSubmition.dispose();
                try { 
                    InputStream file = getClass().getResourceAsStream("/classes/Cheque.jrxml");
                    JasperDesign jdesign = JRXmlLoader.load(file);

                    JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    JasperPrint jprint = JasperFillManager.fillReport(jreport, a, conn);

                    JasperViewer.viewReport(jprint, false); 

                    try {
                    updateBill();
                    } catch (ParseException ex) {
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }

                String note = billID.concat(" - credit invoice payment");

                //cbbbbbb.addDebitePayments(note, payment, da, t, this);
                setCashBalance();

                saveInvoiceDiscriptionForNewInvoices(discrip, id);
                
                items_add_to_bill dfdd = new items_add_to_bill();
                String billid = dfdd.generateBill_id(this);
                this.jLabel47.setText(billid);

                ResultSet rs = dfdd.getAddedItemsBy_bill_ID(billid);
                this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));

                this.jTextField4.setText("");
                this.jTextField5.setText("");

                this.jTextField7.setText("");

                this.jTextField8.setText("0");
            }
        }
        calculateBillItemValue();
    }//GEN-LAST:event_jButton69ActionPerformed

    private void jButton68ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton68ActionPerformed
        advancedCustomer klo = new advancedCustomer();
        
        if(this.jComboBox9.getSelectedItem().toString().equals("Advanced Code")){
            ResultSet ag = klo.getAdvancedCustBy_id(this.jTextField107.getText().toString());
            this.jTable18.setModel(DbUtils.resultSetToTableModel(ag));
        }
        else if(this.jComboBox9.getSelectedItem().toString().equals("Customer Name")){
            ResultSet agf = klo.getAdvancedCustBy_CustName(this.jTextField107.getText().toString());
            this.jTable18.setModel(DbUtils.resultSetToTableModel(agf));
        }
    }//GEN-LAST:event_jButton68ActionPerformed

    private void jButton64ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton64ActionPerformed
        this.adminLogin.setSize(375,175);
        this.adminLogin.setTitle("Admin Access");   
        this.adminLogin.setLocationRelativeTo(this);
        this.adminLogin.setVisible(true);
        
    }//GEN-LAST:event_jButton64ActionPerformed

    private void jTable25MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable25MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable25MousePressed

    private void jTable26MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable26MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable26MousePressed

    private void jButton76ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton76ActionPerformed
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            
        String pDate = df.format(jDateChooser8.getDate());
        
        cashBalancing las = new cashBalancing();
        
        ResultSet rsy = las.showDebitedDetailsByDate(pDate);
        this.jTable25.setModel(DbUtils.resultSetToTableModel(rsy));
        
        ResultSet rsyy = las.showCreditedDetailsByDate(pDate);
        this.jTable26.setModel(DbUtils.resultSetToTableModel(rsyy));
        
        double dd = las.calculateDebitedMoney(pDate);
        double cc = las.calculateCreditedMoney(pDate);
        
        this.jLabel221.setText(String.valueOf(dd));
        this.jLabel222.setText(String.valueOf(cc));
        
        this.jLabel213.setText(String.valueOf(dd-cc));
        
        
    }//GEN-LAST:event_jButton76ActionPerformed

    private void jButton77ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton77ActionPerformed
        cashBalancing po = new cashBalancing();
        
        Date d = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
        String tttt = sdf.format(d);
        
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String ddddd = sdf1.format(d);
            
        
        String addNote = this.jTextArea12.getText();
        double addAmt = Double.parseDouble(this.jTextField114.getText());
        
        
        
        if(jRadioButton1.isSelected()){
            String truee = po.addDebitePayments(addNote, addAmt, ddddd, tttt, dailyCashBal);
            if(truee == null){
                JOptionPane.showMessageDialog(dailyCashBal, "Cash IN Added Failed","Cash Tray", JOptionPane.ERROR_MESSAGE);
            }
            else{                
                JOptionPane.showMessageDialog(dailyCashBal, "Cash IN Successfully","Cash Tray", JOptionPane.INFORMATION_MESSAGE);
                this.jTextArea12.setText("");
                this.jTextField114.setText("");
            }
            
        }
        else if(jRadioButton2.isSelected()){
            String trueee =  po.addCreditedPayments(addNote, addAmt, ddddd, tttt, dailyCashBal);
            if(trueee == null){
                JOptionPane.showMessageDialog(dailyCashBal, "Cash OUT Added Failed","Cash Tray", JOptionPane.ERROR_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(dailyCashBal, "Cash OUT Successfully","Cash Tray", JOptionPane.INFORMATION_MESSAGE); 
                this.jTextArea12.setText("");
                this.jTextField114.setText("");
            }
        }
        setCashBalance();
        
        ResultSet rsy = po.showDebitedDetailsByDate(ddddd);
        this.jTable25.setModel(DbUtils.resultSetToTableModel(rsy));
        
        ResultSet rsyy = po.showCreditedDetailsByDate(ddddd);
        this.jTable26.setModel(DbUtils.resultSetToTableModel(rsyy));
        
        double ddd = po.calculateDebitedMoney(ddddd);
        double ccc = po.calculateCreditedMoney(ddddd);
        
        this.jLabel221.setText(String.valueOf(ddd));
        this.jLabel222.setText(String.valueOf(ccc));
        
        this.jLabel213.setText(String.valueOf(ddd-ccc));
        
    }//GEN-LAST:event_jButton77ActionPerformed

    private void jButton74ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton74ActionPerformed
        int selectedRowglf = this.jTable25.getSelectedRow();
        cashBalancing kiu = new cashBalancing();
        
        if(selectedRowglf == -1){
            JOptionPane.showMessageDialog(dailyCashBal, "Select a Payment to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            int userSelection = JOptionPane.showConfirmDialog(dailyCashBal,"Are you sure to delete this Payment?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if(userSelection == 0){
                String dCode = this.jTable25.getModel().getValueAt(selectedRowglf, 0).toString();
                String dDate = this.jTable25.getModel().getValueAt(selectedRowglf, 3).toString();
                kiu.deleteDebitedPayment(dCode);
                
                ResultSet rsyg = kiu.showDebitedDetailsByDate(dDate);
                this.jTable25.setModel(DbUtils.resultSetToTableModel(rsyg));
                
                double ddd1 = kiu.calculateDebitedMoney(dDate);
                double ccc1 = kiu.calculateCreditedMoney(dDate);

                this.jLabel221.setText(String.valueOf(ddd1));
                this.jLabel222.setText(String.valueOf(ccc1));

                this.jLabel213.setText(String.valueOf(ddd1-ccc1));
                
                setCashBalance();
            }
        }
    }//GEN-LAST:event_jButton74ActionPerformed

    private void jButton75ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton75ActionPerformed
        int selectedRowglfe = this.jTable26.getSelectedRow();
        cashBalancing kiuu = new cashBalancing();
        
        if(selectedRowglfe == -1){
            JOptionPane.showMessageDialog(dailyCashBal, "Select a Payment to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            int userSelection = JOptionPane.showConfirmDialog(dailyCashBal,"Are you sure to delete this Payment?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if(userSelection == 0){
                String dCode = this.jTable26.getModel().getValueAt(selectedRowglfe, 0).toString();
                String dDatew = this.jTable26.getModel().getValueAt(selectedRowglfe, 3).toString();
                kiuu.deleteCreditPayment(dCode);
                
                ResultSet rsyyf = kiuu.showCreditedDetailsByDate(dDatew);
                this.jTable26.setModel(DbUtils.resultSetToTableModel(rsyyf));
                
                double ddd11 = kiuu.calculateDebitedMoney(dDatew);
                double ccc11 = kiuu.calculateCreditedMoney(dDatew);

                this.jLabel221.setText(String.valueOf(ddd11));
                this.jLabel222.setText(String.valueOf(ccc11));

                this.jLabel213.setText(String.valueOf(ddd11-ccc11));
                
                setCashBalance();
            }
        }
    }//GEN-LAST:event_jButton75ActionPerformed

    private void jButton70ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton70ActionPerformed
        int selectedRow = this.jTable4.getSelectedRow();
            if(selectedRow == -1){
                JOptionPane.showMessageDialog(this, "Pleace select a Invoice to Edit","Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                this.adminLogin2.setSize(375,175);
                this.adminLogin2.setTitle("Admin Access");   
                this.adminLogin2.setLocationRelativeTo(this);
                this.adminLogin2.setVisible(true);
            }  
    }//GEN-LAST:event_jButton70ActionPerformed

    private void jButton72ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton72ActionPerformed
        items_add_to_bill jjkkii1 = new items_add_to_bill();
        searchItems pissaa = new searchItems(); 
        
        Date d = new Date();
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String date = sdf1.format(d); 
        
        SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
        String ttttt = sdf.format(d);
        
        String selectedSN = this.jTextField126.getText();
        
        String status = jjkkii1.getItemStatus(selectedSN);
        
        if(status.equals("no")){
            JOptionPane.showMessageDialog(editEnvoice, "This "+selectedSN+" Item has already been added.!","Database Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            String SearchedItmName = pissaa.getItemCodeBySubItemName(selectedSN);
        
            String SearchedItmCode = pissaa.getItemCodeBySubItemCode(selectedSN);

            String NextBillid = this.jLabel229.getText();

            String SavedItemName = jjkkii1.getItemNameFromBillItemTable(SearchedItmCode,NextBillid);

            if(SearchedItmName.equals(SavedItemName)){
                String BillItemID = jjkkii1.getBillItemIDFromBillItemTable(SearchedItmCode,NextBillid);

                String bbbbbbbbb = jjkkii1.addBillSubItems(selectedSN, BillItemID, editEnvoice);

                if(bbbbbbbbb != null){
                   try {
                        String queryy = "update bill_items set qty=qty+1 where bill_item_id = ?";
                        PreparedStatement pstl = conn.prepareStatement(queryy);

                        pstl.setString(1, BillItemID);      
                        pstl.executeUpdate();

                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                   try {
                        String query = "update items set qty = qty- ? where itm_code = ?";
                        PreparedStatement pst = conn.prepareStatement(query);

                        pst.setInt(1, 1);
                        pst.setString(2, SearchedItmCode);
                        pst.executeUpdate();

                                //JOptionPane.showMessageDialog(this, "Invoice Successfull","Movie Details", JOptionPane.INFORMATION_MESSAGE);
                    } catch (SQLException ex) {
                            ex.printStackTrace();
                            Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    try {
                        String queryyy = "update sub_items set inStock=? where sn = ?";
                        PreparedStatement pstlu = conn.prepareStatement(queryyy);

                        pstlu.setString(1, "no");
                        pstlu.setString(2, selectedSN);
                        pstlu.executeUpdate();

                     } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                     }

                    double rrrrrPrice = jjkkii1.getRetailPrice(BillItemID);
                    
                    double wwwwwPrice = jjkkii1.getCostPrice(BillItemID);
                    
                    int qqqqqty = jjkkii1.getQTY(BillItemID);
                    
                    double NewValue = calculateBillItemValue(qqqqqty,rrrrrPrice);
                    double NewCostValue = calculateBillItemCostValue(qqqqqty,wwwwwPrice);

                    try {
                        String queryy = "update bill_items set value=?, costValue=? where bill_item_id = ?";
                        PreparedStatement pstl = conn.prepareStatement(queryy);

                        pstl.setDouble(1, NewValue);
                        pstl.setDouble(2, NewCostValue);
                        pstl.setString(3, BillItemID);
                        pstl.executeUpdate();

                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    } 
                    
                    cashBalancing jju98d = new cashBalancing();
                        
                    String Note = "One ".concat(SearchedItmCode).concat(" Item Add to ").concat(NextBillid).concat(" Invoice.");         
                    jju98d.addDebitePayments(Note, rrrrrPrice, date, ttttt, editEnvoice);
                    
                    storeItemData jukifg = new storeItemData(); 
                    ResultSet rs33334h = jukifg.getSubItemData(SearchedItmCode);
                    this.jTable37.setModel(DbUtils.resultSetToTableModel(rs33334h));  
                    
                    
                }


                ResultSet rs = jjkkii1.getAddedItemsBy_bill_ID(NextBillid);
                this.jTable19.setModel(DbUtils.resultSetToTableModel(rs));

                double calculatedValuee = jjkkii1.calculateTotal(NextBillid);
                this.jTextField115.setText(String.valueOf(calculatedValuee));
                
                this.jTextField126.setText("");
                this.jTextField126.requestFocusInWindow();
                
                double billDiss = Double.parseDouble(this.jTextField117.getText());

                this.jTextField118.setText(String.valueOf(calculatedValuee-billDiss));
                UpdateBillPrices();
            }
            else{
                String itmCode ="";
                String name="";
                String warranty="";
                String w_price="";
                String r_price="";
                String type="";

                 

                int qty,free,dis;
                try{
                    ResultSet rsg = jjkkii1.getItemDetails(selectedSN);
                    while(rsg.next()){
                        itmCode = rsg.getString("itm_code");
                        name = rsg.getString("itm_name");
                        warranty = rsg.getString("warranty");   
                        w_price = rsg.getString("w_price");
                        r_price = rsg.getString("r_price");
                        type = rsg.getString("type");              
                    }
                qty = 1;
                free = 0;
                dis = 0;
                int wwarranty = Integer.parseInt(warranty);
                double ww_price = Double.parseDouble(w_price);
                double rr_price = Double.parseDouble(r_price);
                String cashBalID = "no";
                String billID = this.jLabel229.getText();
                double valu = calculateBillItemValue(qty,rr_price);
                double costValue = calculateBillItemCostValue(qty,ww_price);

                String billItemCode = jjkkii1.addItemsToBill(itmCode, name, wwarranty, qty, free, ww_price, dis, rr_price, date, valu, billID,costValue,cashBalID, editEnvoice);

                if(billItemCode != null){
                    jjkkii1.addBillSubItems(selectedSN, billItemCode, itemsAdder);
                    try {
                        String queryyy = "update sub_items set inStock=? where sn = ?";
                        PreparedStatement pstlu = conn.prepareStatement(queryyy);

                        pstlu.setString(1, "no");
                        pstlu.setString(2, selectedSN);
                        pstlu.executeUpdate();

                     } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                     }
                    
                    try {
                        String query = "update items set qty = qty- ? where itm_code = ?";
                        PreparedStatement pst = conn.prepareStatement(query);

                        pst.setInt(1, 1);
                        pst.setString(2, SearchedItmCode);
                        pst.executeUpdate();

                                //JOptionPane.showMessageDialog(this, "Invoice Successfull","Movie Details", JOptionPane.INFORMATION_MESSAGE);
                    } catch (SQLException ex) {
                            ex.printStackTrace();
                            Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    cashBalancing jju989 = new cashBalancing();
                        
                    String Note = ("One ").concat(itmCode).concat(" Item Add to ").concat(NextBillid).concat(" Invoice.");        
                    jju989.addDebitePayments(Note, valu, date, ttttt, editEnvoice);
                    
                    storeItemData jukifg = new storeItemData(); 
                    ResultSet rs33334h = jukifg.getSubItemData(SearchedItmCode);
                    this.jTable37.setModel(DbUtils.resultSetToTableModel(rs33334h)); 
                    
                    
                }
                else{
                    JOptionPane.showMessageDialog(editEnvoice, "Date Base Error.!","Error",JOptionPane.ERROR_MESSAGE);
                }
                }
                catch(Exception e){
                    //JOptionPane.showMessageDialog(this, "Cannot Save Movie Details!","Error",JOptionPane.ERROR_MESSAGE);
                }

                ResultSet rs = jjkkii1.getAddedItemsBy_bill_ID(NextBillid);
                this.jTable19.setModel(DbUtils.resultSetToTableModel(rs));

                double calculatedValuee = jjkkii1.calculateTotal(NextBillid);
                this.jTextField115.setText(String.valueOf(calculatedValuee));
                
                this.jTextField126.setText("");
                this.jTextField126.requestFocusInWindow();
                
                double billDiss = Double.parseDouble(this.jTextField117.getText());

                this.jTextField118.setText(String.valueOf(calculatedValuee-billDiss));
                
                UpdateBillPrices();
            }
            
        }   
    }//GEN-LAST:event_jButton72ActionPerformed

    private void jTextField131ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField131ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField131ActionPerformed

    private void jTextField133ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField133ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField133ActionPerformed

    private void jTextField123ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField123ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField123ActionPerformed

    private void jTextField122ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField122ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField122ActionPerformed

    private void jTextField121ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField121ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField121ActionPerformed

    private void jTextField120ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField120ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField120ActionPerformed

    private void jTextField119ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField119ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField119ActionPerformed

    private void jTextField118ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField118ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField118ActionPerformed

    private void jTextField117ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField117ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField117ActionPerformed

    private void jTextField116ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField116ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField116ActionPerformed

    private void jTextField115ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField115ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField115ActionPerformed

    private void jTable19MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable19MousePressed
        int selectedRow1 = this.jTable19.getSelectedRow();
        
        String itmCorde = this.jTable19.getModel().getValueAt(selectedRow1, 1).toString();
        String itmDiscrip = this.jTable19.getModel().getValueAt(selectedRow1, 2).toString();
        int QQTy = (int)jTable19.getValueAt(selectedRow1, 4);
            String Warranty = String.valueOf(this.jTable19.getModel().getValueAt(selectedRow1, 3).toString());
            String r_price = String.valueOf(this.jTable19.getModel().getValueAt(selectedRow1, 6).toString());
            String w_price = String.valueOf(this.jTable19.getModel().getValueAt(selectedRow1, 5).toString());
            //int dis = this.jTable4.getModel().getValueAt(selectedRow, 5).toString();
            
            //String invoID = this.jTable4.getModel().getValueAt(selectedRow, 0).toString();
            
            
            this.jTextField119.setText(itmCorde);
            this.jTextArea14.setText(itmDiscrip);
            this.jTextField122.setText(Integer.toString(QQTy));
            //this.jTextField103.setText(Integer.toString(QQTy));
            this.jTextField120.setText(r_price);
            this.jTextField121.setText(w_price);
            this.jTextField123.setText(Warranty);
    }//GEN-LAST:event_jTable19MousePressed

    private void jTable20MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable20MousePressed
        int selectedRow1245 = this.jTable20.getSelectedRow();
        
        
            String custIDDd = this.jTable20.getModel().getValueAt(selectedRow1245, 0).toString();
            this.jTextField116.setText(custIDDd);
    }//GEN-LAST:event_jTable20MousePressed

    private void jTable20KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable20KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable20KeyPressed

    private void jTextField124ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField124ActionPerformed
        items_add_to_bill dddg = new items_add_to_bill();
        ResultSet rs4j = dddg.searchCustomerByName(this.jTextField124.getText());
        this.jTable20.setModel(DbUtils.resultSetToTableModel(rs4j));
    }//GEN-LAST:event_jTextField124ActionPerformed

    private void jTable21MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable21MousePressed
        int selectedRow12456 = this.jTable21.getSelectedRow();
        
        
            String custIDDd = this.jTable21.getModel().getValueAt(selectedRow12456, 0).toString();
            this.jTextField133.setText(custIDDd);
    }//GEN-LAST:event_jTable21MousePressed

    private void jTable21KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable21KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable21KeyPressed

    private void jButton73ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton73ActionPerformed
        items_add_to_bill hyt5 = new items_add_to_bill();
        billSearch juyy = new billSearch();
        
        
        
        String invoIDDD = this.jLabel229.getText();
        String custt = this.jTextField116.getText();
        String emplee = this.jTextField133.getText();
        int dissco = Integer.parseInt(this.jTextField117.getText());
        double ttotal = Double.parseDouble(this.jTextField115.getText());
        double netAmmt = ttotal-dissco;
        String dd = this.jTextArea13.getText();
        
        int itmCountd = jTable19.getRowCount();
        
        double oldPayedAmt = juyy.getPayedCeditAmt(invoIDDD);
        
        boolean isOK = hyt5.EditBillData(ttotal, dissco, custt, emplee, netAmmt, itmCountd,dd, invoIDDD, editEnvoice);
        
        if(isOK){
            
            
            int selectedRow = this.jTable4.getSelectedRow();
                    
                        String billl = this.jTable4.getModel().getValueAt(selectedRow, 0).toString();
                        String invoTypeee = this.jTable4.getModel().getValueAt(selectedRow, 7).toString();

                        if(invoTypeee.equals("Cash")){
                            HashMap ab = new HashMap();
                            ab.put("invoNum", billl);
                            try {

                                InputStream file = getClass().getResourceAsStream("/classes/cashInvo.jrxml");
                                JasperDesign jdesign = JRXmlLoader.load(file);

                                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                                JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                                JasperViewer.viewReport(jprint, false);

                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        }
                        else if(invoTypeee.equals("Cash Advanced")){
                            HashMap ab = new HashMap();
                            ab.put("invoNum", billl);
                            try {

                                InputStream file = getClass().getResourceAsStream("/classes/cashInvo_1.jrxml");
                                JasperDesign jdesign = JRXmlLoader.load(file);

                                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                                JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                                JasperViewer.viewReport(jprint, false);

                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                            
                        }
                        else if(invoTypeee.equals("Credit")){
                            HashMap ab = new HashMap();
                            ab.put("invoNum", billl);
                            try {
                                try {
                                        //warran = this.jTable15.getModel().getValueAt(selectedRow9456, 9).toString();
                        
                                        String query = "update creditedinvoices set invoTotal = ?, dueAmt = ? where bill_id = ?";
                                        PreparedStatement pst5 = conn.prepareStatement(query);

                                        pst5.setDouble(1, netAmmt);
                                        pst5.setDouble(2, netAmmt-oldPayedAmt);
                                        pst5.setString(3, invoIDDD);
                                        pst5.executeUpdate();



                                        //JOptionPane.showMessageDialog(this, "Invoice Successfull","Movie Details", JOptionPane.INFORMATION_MESSAGE);
                                } catch (SQLException ex) {
                                    ex.printStackTrace();
                                    Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                
                                String STRcust_id1 = this.jTextField116.getText();
                                double creditSum1 = calculateCreditAmtByCustomer(STRcust_id1);
                                setNewCreditValue(creditSum1, STRcust_id1);
                                
                                InputStream file = getClass().getResourceAsStream("/classes/CreditInvo.jrxml");
                                JasperDesign jdesign = JRXmlLoader.load(file);

                                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                                JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                                JasperViewer.viewReport(jprint, false);

                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        }
                        else if(invoTypeee.equals("Credit Advanced")){
                            HashMap ab = new HashMap();
                            ab.put("invoNum", billl);
                            try {
                                try {
                                        //warran = this.jTable15.getModel().getValueAt(selectedRow9456, 9).toString();
                        
                                        String query = "update creditedinvoices set invoTotal = ?, dueAmt = ? where bill_id = ?";
                                        PreparedStatement pst5 = conn.prepareStatement(query);

                                        pst5.setDouble(1, netAmmt);
                                        pst5.setDouble(2, netAmmt-oldPayedAmt);
                                        pst5.setString(3, invoIDDD);
                                        pst5.executeUpdate();



                                        //JOptionPane.showMessageDialog(this, "Invoice Successfull","Movie Details", JOptionPane.INFORMATION_MESSAGE);
                                } catch (SQLException ex) {
                                    ex.printStackTrace();
                                    Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                String STRcust_id1 = this.jTextField116.getText();
                                double creditSum1 = calculateCreditAmtByCustomer(STRcust_id1);
                                setNewCreditValue(creditSum1, STRcust_id1);

                                InputStream file = getClass().getResourceAsStream("/classes/CreditInvo_1.jrxml");
                                JasperDesign jdesign = JRXmlLoader.load(file);

                                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                                JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                                JasperViewer.viewReport(jprint, false);

                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        }
                        else if(invoTypeee.equals("Cheque")){
                            items_add_to_bill klo09 = new items_add_to_bill();
                            klo09.updateChequeTable(netAmmt, billl, editEnvoice);
                            HashMap ab = new HashMap();
                            ab.put("invoNum", billl);
                            try {

                                InputStream file = getClass().getResourceAsStream("/classes/Cheque.jrxml");
                                JasperDesign jdesign = JRXmlLoader.load(file);

                                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                                JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                                JasperViewer.viewReport(jprint, false);

                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        }
                        ResultSet rs4js = juyy.showAllPendingBillDetails();
            this.jTable4.setModel(DbUtils.resultSetToTableModel(rs4js));
            this.editEnvoice.dispose();
        }
        else{
            JOptionPane.showMessageDialog(editEnvoice, "Have to provide Customer ID and Employee ID!","Error",JOptionPane.ERROR_MESSAGE); 
        }
        calculateBillItemValue();
    }//GEN-LAST:event_jButton73ActionPerformed

    private void jButton80ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton80ActionPerformed
        items_add_to_bill hghhd = new items_add_to_bill();
        cashBalancing hyt = new cashBalancing();
        billSearch jk8 = new billSearch();
        
        int selectedRow = this.jTable4.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(chequeInvo, "Pleace select a Invoice","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            String invoTypee = this.jTable4.getModel().getValueAt(selectedRow, 7).toString();
            if(invoTypee.equals("Cheque")){
                this.chequeInvo.setSize(415,390);
                this.chequeInvo.setTitle("Cheque Invoice");   
                this.chequeInvo.setLocationRelativeTo(this);
                this.chequeInvo.setVisible(true);
                this.jTextField125.requestFocusInWindow();

                String invoID = this.jTable4.getModel().getValueAt(selectedRow, 0).toString();
                String chequeID = this.jTable4.getModel().getValueAt(selectedRow, 9).toString();
                String invoDatee = this.jTable4.getModel().getValueAt(selectedRow, 1).toString();
                this.jLabel253.setText(invoID);
                this.jLabel251.setText(chequeID);
                this.jLabel255.setText(invoDatee);
                
                try{
                    ResultSet rsf = jk8.getChequeDetails(chequeID);
                    while(rsf.next()){
                        String dueeData = rsf.getString("dueeDate");
                        String netAmtt = rsf.getString("netAmtt");
                        String statess = rsf.getString("statess");
                        String chequeNum = rsf.getString("chequeNo");
                        

                        this.jLabel257.setText(dueeData);
                        this.jLabel259.setText(netAmtt);
                        this.jLabel261.setText(statess);
                        this.jTextField125.setText(chequeNum);
                    } 
                }
                catch(Exception ex){  
                    ex.printStackTrace();
                }
            }
            else{
               JOptionPane.showMessageDialog(chequeInvo, "You can only edit the Cheque Invoice.!","Error",JOptionPane.ERROR_MESSAGE); 
            }
            
            
            //String Customer = this.jTable4.getModel().getValueAt(selectedRow, 2).toString();
            //int dis = (int)jTable4.getValueAt(selectedRow, 5);
            //String total = String.valueOf(this.jTable4.getModel().getValueAt(selectedRow, 4).toString());
            //int dis = this.jTable4.getModel().getValueAt(selectedRow, 5).toString();
            //String netAmt = String.valueOf(this.jTable4.getModel().getValueAt(selectedRow, 6).toString());
            //String invoID = this.jTable4.getModel().getValueAt(selectedRow, 0).toString();
            
            
//            this.jLabel157.setText(invoID);
//            this.jTextField72.setText(Customer);
//            this.jTextField73.setText(Integer.toString(dis));
//            this.jTextField71.setText(total);
//            this.jTextField74.setText(netAmt);
            //this.jLabel179.setText(invoID);
            
            
            
//            ResultSet rs3 = hghhd.getAddedItemsBy_bill_ID(invoID);
//            this.jTable15.setModel(DbUtils.resultSetToTableModel(rs3));
//            
//            ResultSet rs99 = hyt.getAllNonClaimedWarranties();
//            this.jTable16.setModel(DbUtils.resultSetToTableModel(rs99));
            
        }
    }//GEN-LAST:event_jButton80ActionPerformed

    private void jButton81ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton81ActionPerformed
        items_add_to_bill hghhd = new items_add_to_bill();
        cashBalancing hyt = new cashBalancing();
        billSearch jk8d = new billSearch();
        
        int selectedRown = this.jTable4.getSelectedRow();
        if(selectedRown == -1){
            JOptionPane.showMessageDialog(creditInvo, "Pleace select a Invoice","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            String invoTypee = this.jTable4.getModel().getValueAt(selectedRown, 7).toString();
            if(invoTypee.equals("Credit")|| invoTypee.equals("Credit Advanced")){
                this.creditInvo.setSize(960,400);
                this.creditInvo.setTitle("Credit Invoice");   
                this.creditInvo.setLocationRelativeTo(this);
                this.creditInvo.setVisible(true);
                this.jTextField134.requestFocusInWindow();

                String invoID = this.jTable4.getModel().getValueAt(selectedRown, 0).toString();
                String chequeID = this.jTable4.getModel().getValueAt(selectedRown, 9).toString();
                String AdvaCode = this.jTable4.getModel().getValueAt(selectedRown, 10).toString();
                String invoDatee = this.jTable4.getModel().getValueAt(selectedRown, 1).toString();
                this.jLabel263.setText(invoID);
                this.jLabel269.setText(invoTypee);
                this.jLabel265.setText(invoDatee);
                
                try{
                    ResultSet rsfff = jk8d.showCreditInvoData(invoID);
                    while(rsfff.next()){
                        String ciID = rsfff.getString("cdID");
                        String invoTotal = rsfff.getString("invoTotal");      
                        String payed = rsfff.getString("payed");
                        String dueAmt = rsfff.getString("dueAmt");
                        String dueDate = rsfff.getString("dueDate");
                        

                        this.jLabel279.setText(ciID);
                        this.jLabel281.setText(invoTotal);
                        this.jLabel283.setText(payed);
                        this.jLabel285.setText(dueAmt);
                        this.jLabel287.setText(dueDate);
                    } 
                    }
                    catch(Exception ex){  
                        ex.printStackTrace();
                    }    
                
                ResultSet rs1hg = jk8d.showCreditSubInvoData(chequeID);
                this.jTable22.setModel(DbUtils.resultSetToTableModel(rs1hg));
                
                this.jTextField134.setText("");
                
                if(AdvaCode.equals("no")){
                    this.jLabel271.setText("NO");
                    this.jLabel273.setText("NO");
                    this.jLabel275.setText("NO");
                    this.jLabel277.setText("NO");
                }
                else{
                    try{
                    ResultSet rsff = jk8d.getAdvancedDetails(AdvaCode);
                    while(rsff.next()){
                        String advIDDDD = rsff.getString("idadvancedCustID");
                        String AdvDate = rsff.getString("adv_date");      
                        String advPayment = rsff.getString("adv_amount");
                        String dueeAmtt = rsff.getString("adv_duePayment");
                        

                        this.jLabel271.setText(advIDDDD);
                        this.jLabel273.setText(AdvDate);
                        this.jLabel275.setText(advPayment);
                        this.jLabel277.setText(dueeAmtt);
                    } 
                    }
                    catch(Exception ex){  
                        ex.printStackTrace();
                    }    
                }    
            }
            else{
               JOptionPane.showMessageDialog(chequeInvo, "You can only edit the Cheque Invoice.!","Error",JOptionPane.ERROR_MESSAGE); 
            }
        }
    }//GEN-LAST:event_jButton81ActionPerformed

    private void jTable22MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable22MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable22MousePressed

    private void jButton79ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton79ActionPerformed
        String chequeCode = this.jLabel251.getText();
        String invoHCode = this.jLabel253.getText();
        String chequeNum = this.jTextField125.getText();
        String Status = "COMPLETE";
        billSearch kdf = new billSearch();
        
        boolean d = kdf.EditChequeData(Status,chequeNum, chequeCode, this);
        boolean f = kdf.EditBillData(Status, invoHCode, this);
        
        if(d & f){
            JOptionPane.showMessageDialog(chequeInvo, "Payment Caimed Successfully!","Movie Details",JOptionPane.INFORMATION_MESSAGE);
            ResultSet rs1 = kdf.showAllPendingBillDetails();
            this.jTable4.setModel(DbUtils.resultSetToTableModel(rs1));
            
            this.chequeInvo.dispose();
        }
        else{
            JOptionPane.showMessageDialog(chequeInvo, "failed!","Database Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton79ActionPerformed

    private void jButton82ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton82ActionPerformed
        
            //String invoID = this.jTable4.getModel().getValueAt(selectedRow, 0).toString();
        int selectedRowr = this.jTable4.getSelectedRow();
        
        items_add_to_bill loi = new items_add_to_bill();
        billSearch kio = new billSearch();
        cashBalancing kiu8 = new cashBalancing();
        
        Date df = new Date();
        SimpleDateFormat sdf1h = new SimpleDateFormat("yyyy-MM-dd");
        String datef = sdf1h.format(df); 
        
        SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
        String tttttt = sdf.format(df);
        
        
        String invoNuM = this.jLabel263.getText();
        double advP = 0;
        double paymens = 0;
        double totPay = 0;
        String text = this.jLabel275.getText();
        String newStatus = "COMPLETE";
        
        double peyMent = Double.parseDouble(this.jTextField134.getText());
        
        if(text.equals("NO")){
            advP = 0;
        }
        else{
            advP = Double.parseDouble(this.jLabel275.getText());
        }
        
//        for(int i=0; i<jTable22.getRowCount(); i++){
//            paymens = Double.parseDouble(String.valueOf(jTable22.getValueAt(i, 4)));
//            
//            totPay = totPay + paymens;
//        }
//        System.out.println(totPay);
        //String netAmt = String.valueOf(this.jTable4.getModel().getValueAt(selectedRowr, 6).toString());
        double currentPayed = Double.parseDouble(this.jLabel283.getText());
        double currentDuePayed = Double.parseDouble(this.jLabel285.getText());
        //double NettAmt = Double.parseDouble(netAmt);
        double newPayedAmt = currentPayed + peyMent;
        double newDueAmt = currentDuePayed - peyMent;
        String cccc = this.jLabel279.getText();
        
        String cusIFDg = getCustIDFromCrediID(cccc);
        
        
        //String dueDate = "0000-00-00";
        String noteer = "Credit Invoice Payment for ".concat(invoNuM);
        if(this.jTextField134.getText().equals("")){
            JOptionPane.showMessageDialog(creditInvo, "Payment Can't be Empty.!","Database Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            
            String qoutItemCod = loi.addCreditSubInvoice(peyMent, datef, this.jLabel279.getText(), this);
            ResultSet rs1hg = kio.showCreditSubInvoData(invoNuM);
            this.jTable22.setModel(DbUtils.resultSetToTableModel(rs1hg));
            
            loi.updateCreditInvoice(newPayedAmt, newDueAmt, cccc, this);
            
            ResultSet rs1hgd = kio.showCreditSubInvoData(cccc);
            this.jTable22.setModel(DbUtils.resultSetToTableModel(rs1hgd));

            JOptionPane.showMessageDialog(creditInvo, "Payment Successfully!","Credit Details",JOptionPane.INFORMATION_MESSAGE);
            
            try{
                    ResultSet rsfff = kio.showCreditInvoData(invoNuM);
                    while(rsfff.next()){
                        String ciID = rsfff.getString("cdID");
                        String invoTotal = rsfff.getString("invoTotal");      
                        String payed = rsfff.getString("payed");
                        String dueAmt = rsfff.getString("dueAmt");
                        String dueDate = rsfff.getString("dueDate");
                        

                        this.jLabel279.setText(ciID);
                        this.jLabel281.setText(invoTotal);
                        this.jLabel283.setText(payed);
                        this.jLabel285.setText(dueAmt);
                        this.jLabel287.setText(dueDate);
                    } 
                    }
                    catch(Exception ex){  
                        ex.printStackTrace();
                    }
            
            if(qoutItemCod.equals(null)){
                JOptionPane.showMessageDialog(creditInvo, "Payment Adding Fail.!","Database Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                kiu8.addDebitePayments(noteer, peyMent, datef, tttttt, this);
                setCashBalance();
                if(newDueAmt==0){
                    kio.EditBillData(newStatus, invoNuM, this);
                    
                    ResultSet rs1 = kio.showAllPendingBillDetails();
                    this.jTable4.setModel(DbUtils.resultSetToTableModel(rs1));
                    
                }
            }
        }
        double creditSumd = calculateCreditAmtByCustomer(cusIFDg);      
        setNewCreditValue(creditSumd, cusIFDg);
        
    }//GEN-LAST:event_jButton82ActionPerformed

    private void jButton83ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton83ActionPerformed
        items_add_to_bill loik = new items_add_to_bill();
        String invoNumb = this.jLabel263.getText();
        
        String ciCodeee = this.jLabel279.getText();
        double payied = Double.parseDouble(this.jLabel283.getText());
        double toPay = 0;
        billSearch kiu = new billSearch();
        String ssss = "COMPLETE";
                
        kiu.EditBillData(ssss, invoNumb, this);
        
        loik.updateCreditInvoice(payied, toPay, ciCodeee, this);
        
        ResultSet rs1h = kiu.showAllPendingBillDetails();
        this.jTable4.setModel(DbUtils.resultSetToTableModel(rs1h));
        
        String cusIFD = getCustIDFromCrediID(ciCodeee);
        
        double creditSum = calculateCreditAmtByCustomer(cusIFD);
        setNewCreditValue(creditSum, cusIFD);
    }//GEN-LAST:event_jButton83ActionPerformed

    private void jTable5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable5MousePressed
        int selectedRow1245 = this.jTable5.getSelectedRow();
        
        
            String custIDDd = this.jTable5.getModel().getValueAt(selectedRow1245, 0).toString();
            this.jTextField4.setText(custIDDd);
    }//GEN-LAST:event_jTable5MousePressed

    private void jTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MousePressed
        int selectedRow12456 = this.jTable2.getSelectedRow();
        
        
            String eIDD = this.jTable2.getModel().getValueAt(selectedRow12456, 0).toString();
            this.jTextField5.setText(eIDD);
    
    }//GEN-LAST:event_jTable2MousePressed

    private void jComboBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox8ActionPerformed
  
        if(this.jComboBox8.getSelectedItem().toString().equals("Cash Invoice")){
            this.jTextField108.setEditable(false);
            this.jTextField112.setEditable(false);
            this.jTextField113.setEditable(false);
            this.jDateChooser1.setEnabled(false);
        }
        else if(this.jComboBox8.getSelectedItem().toString().equals("Credit Invoice")){
            this.jTextField108.setEditable(true);
            this.jTextField112.setEditable(true);
            this.jTextField113.setEditable(false);
            this.jDateChooser1.setEnabled(true);
        }
        else if(this.jComboBox8.getSelectedItem().toString().equals("Cheque Invoice")){
            this.jTextField108.setEditable(false);
            this.jTextField112.setEditable(false);
            this.jTextField113.setEditable(true);
            this.jDateChooser1.setEnabled(true);
        }
        
    }//GEN-LAST:event_jComboBox8ActionPerformed

    private void jButton78ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton78ActionPerformed
        items_add_to_bill kkiu = new items_add_to_bill();
          
        
        int selectedRow12456 = this.jTable4.getSelectedRow();
        String billType = this.jTable4.getModel().getValueAt(selectedRow12456, 7).toString();
        String chequeORcreditID = this.jTable4.getModel().getValueAt(selectedRow12456, 9).toString();
        
        
        if(billType.equals("Cheque")){
            int userSelection1 = JOptionPane.showConfirmDialog(editEnvoice,"Are you sure to delete this Invoice ?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
                if(userSelection1 == 0){
                    try {
                        String query = "update items set qty = qty+ ? where itm_code = ?";
                        PreparedStatement pst1 = conn.prepareStatement(query);

                        for(int i=0; i<jTable19.getRowCount(); i++){
                            String itemId = (String)jTable19.getValueAt(i, 1);
                            int qty = (int)jTable19.getValueAt(i, 4);

                            pst1.setInt(1, qty);
                            pst1.setString(2, itemId);
                            pst1.executeUpdate();
                        }
                    } catch (SQLException e) {
                        e.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, e);
                    }
                    
                    //item sub table eke item no -> yes
                    try{
                        for(int i=0; i<jTable19.getRowCount(); i++){
                            String Bill_itemId = (String)jTable19.getValueAt(i, 0);
                            String aaas = kkiu.checkSNAvailability(Bill_itemId);
                            
                            if(aaas != ""){
                                ArrayList<String> listA = kkiu.getBilledSN(Bill_itemId);
                                for(int ii=0; ii<listA.size(); ii++){
                                    kkiu.updateItemSerial(listA.get(ii));   
                                }
                            }  
                        }
                    
                    // sn delet from bill_sub_items 
                        for(int j=0; j<jTable19.getRowCount(); j++){
                            String Bill_itemId1 = (String)jTable19.getValueAt(j, 0);
                            String aaass = kkiu.checkSNAvailability(Bill_itemId1);
                            
                            if(aaass != ""){
                                System.out.println("eeeeeeeeeeeeeeeeeeeeeee");
                                kkiu.deleteBillSN(Bill_itemId1);
                            }                                  
                        }      
                    }
                    catch (Exception eg) {
                        eg.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, eg);
                    }

                    try{
                        String query = "delete from chequeinvo where bill_id=?";
                        PreparedStatement pstf = conn.prepareStatement(query);
                        
                        String invoIDD = this.jLabel229.getText();
                        pstf.setString(1, invoIDD);
                        pstf.executeUpdate();
                    }
                    catch(SQLException exe){
                        exe.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, exe);
                    }
                    try {
                        String query = "delete from bill_items where bill_item_id=?";
                        PreparedStatement pstff = conn.prepareStatement(query);

                        for(int i=0; i<jTable19.getRowCount(); i++){
                            String itemId = (String)jTable19.getValueAt(i, 0);
                            pstff.setString(1, itemId);
                            pstff.executeUpdate();
                    }
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    // check the invo type.. delete invoID from cheque and creditinvo=>sub and add for credited table date vice
                    //cheque=> if complete then add credited table date vice
                    try{
                        String query = "delete from bill where bill_id=?";
                        PreparedStatement pstf = conn.prepareStatement(query);
                        
                        String invoID = this.jLabel229.getText();
                        pstf.setString(1, invoID);
                        pstf.executeUpdate();
                    }
                    catch(SQLException exe){
                        exe.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, exe);
                    }
                    
//                    cashBalancing huji = new cashBalancing();
//                    
//                    Date df = new Date();
//                    SimpleDateFormat sdf1h = new SimpleDateFormat("yyyy-MM-dd");
//                    String dateff = sdf1h.format(df); 
//        
//                    SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
//                    String ttttttf = sdf.format(df);
//                    String invoIDD = this.jLabel229.getText();
//                    String noteeeeee =invoIDD.concat(" whole invoice got deleted.");
//                    double amtr = Double.parseDouble(this.jTextField118.getText());
                    
//                    huji.addCreditedPayments(noteeeeee, amtr, dateff, ttttttf, this);
                    setCashBalance();
                    this.editEnvoice.dispose();
                    
                    billSearch iuiu = new billSearch();
                    ResultSet rs4jsd = iuiu.showAllPendingBillDetails();
                    this.jTable4.setModel(DbUtils.resultSetToTableModel(rs4jsd));
                    
                }
  
        }
        else if(billType.equals("Cash")){   
            int userSelection1 = JOptionPane.showConfirmDialog(editEnvoice,"Are you sure to delete this Invoice ?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
                if(userSelection1 == 0){
                    try {
                        String query = "update items set qty = qty+ ? where itm_code = ?";
                        PreparedStatement pst1 = conn.prepareStatement(query);

                        for(int i=0; i<jTable19.getRowCount(); i++){
                            String itemId = (String)jTable19.getValueAt(i, 1);
                            int qty = (int)jTable19.getValueAt(i, 4);

                            pst1.setInt(1, qty);
                            pst1.setString(2, itemId);
                            pst1.executeUpdate();
                        }
                    } catch (SQLException e) {
                        e.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, e);
                    }
                    //item sub table eke item no -> yes
                    try{
                        for(int i=0; i<jTable19.getRowCount(); i++){
                            String Bill_itemId = (String)jTable19.getValueAt(i, 0);
                            String aaas = kkiu.checkSNAvailability(Bill_itemId);
                            
                            if(aaas != ""){
                                ArrayList<String> listA = kkiu.getBilledSN(Bill_itemId);
                                for(int ii=0; ii<listA.size(); ii++){
                                    kkiu.updateItemSerial(listA.get(ii));   
                                }
                            }  
                        }
                    
                    // sn delet from bill_sub_items 
                        for(int j=0; j<jTable19.getRowCount(); j++){
                            String Bill_itemId1 = (String)jTable19.getValueAt(j, 0);
                            String aaass = kkiu.checkSNAvailability(Bill_itemId1);
                            
                            if(aaass != ""){
                                System.out.println("eeeeeeeeeeeeeeeeeeeeeee");
                                kkiu.deleteBillSN(Bill_itemId1);
                            }                                  
                        }      
                    }
                    catch (Exception eg) {
                        eg.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, eg);
                    }
                    try {
                        String query = "delete from bill_items where bill_item_id=?";
                        PreparedStatement pstff = conn.prepareStatement(query);

                        for(int i=0; i<jTable19.getRowCount(); i++){
                            String itemId = (String)jTable19.getValueAt(i, 0);
                            pstff.setString(1, itemId);
                            pstff.executeUpdate();
                    }
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    // check the invo type.. delete invoID from cheque and creditinvo=>sub and add for credited table date vice
                    //cheque=> if complete then add credited table date vice
                    try{
                        String query = "delete from bill where bill_id=?";
                        PreparedStatement pstf = conn.prepareStatement(query);
                        
                        String invoID = this.jLabel229.getText();
                        pstf.setString(1, invoID);
                        pstf.executeUpdate();
                    }
                    catch(SQLException exe){
                        exe.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, exe);
                    }
                    
                    cashBalancing huji = new cashBalancing();
                    
                    Date df = new Date();
                    SimpleDateFormat sdf1h = new SimpleDateFormat("yyyy-MM-dd");
                    String dateff = sdf1h.format(df); 
        
                    SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
                    String ttttttf = sdf.format(df);
                    String invoIDD = this.jLabel229.getText();
                    String noteeeeee =invoIDD.concat(" whole invoice got deleted.");
                    double amtr = Double.parseDouble(this.jTextField118.getText());
                    
                    huji.addCreditedPayments(noteeeeee, amtr, dateff, ttttttf, this);
                    setCashBalance();
                    this.editEnvoice.dispose();
                    
                    billSearch iuiu = new billSearch();
                    ResultSet rs4jsd = iuiu.showAllPendingBillDetails();
                    this.jTable4.setModel(DbUtils.resultSetToTableModel(rs4jsd));
                    
                }       
        }
        else if(billType.equals("Cash Advanced")){   
            int userSelection1 = JOptionPane.showConfirmDialog(editEnvoice,"Are you sure to delete this Invoice ?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
                if(userSelection1 == 0){
                    try {
                        String query = "update items set qty = qty+ ? where itm_code = ?";
                        PreparedStatement pst1 = conn.prepareStatement(query);

                        for(int i=0; i<jTable19.getRowCount(); i++){
                            String itemId = (String)jTable19.getValueAt(i, 1);
                            int qty = (int)jTable19.getValueAt(i, 4);

                            pst1.setInt(1, qty);
                            pst1.setString(2, itemId);
                            pst1.executeUpdate();
                        }
                    } catch (SQLException e) {
                        e.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, e);
                    }
                    //item sub table eke item no -> yes
                    try{
                        for(int i=0; i<jTable19.getRowCount(); i++){
                            String Bill_itemId = (String)jTable19.getValueAt(i, 0);
                            String aaas = kkiu.checkSNAvailability(Bill_itemId);
                            
                            if(aaas != ""){
                                ArrayList<String> listA = kkiu.getBilledSN(Bill_itemId);
                                for(int ii=0; ii<listA.size(); ii++){
                                    kkiu.updateItemSerial(listA.get(ii));   
                                }
                            }  
                        }
                    
                    // sn delet from bill_sub_items 
                        for(int j=0; j<jTable19.getRowCount(); j++){
                            String Bill_itemId1 = (String)jTable19.getValueAt(j, 0);
                            String aaass = kkiu.checkSNAvailability(Bill_itemId1);
                            
                            if(aaass != ""){
                                System.out.println("eeeeeeeeeeeeeeeeeeeeeee");
                                kkiu.deleteBillSN(Bill_itemId1);
                            }                                  
                        }      
                    }
                    catch (Exception eg) {
                        eg.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, eg);
                    }
                    try {
                        String query = "delete from bill_items where bill_item_id=?";
                        PreparedStatement pstff = conn.prepareStatement(query);

                        for(int i=0; i<jTable19.getRowCount(); i++){
                            String itemId = (String)jTable19.getValueAt(i, 0);
                            pstff.setString(1, itemId);
                            pstff.executeUpdate();
                    }
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    // check the invo type.. delete invoID from cheque and creditinvo=>sub and add for credited table date vice
                    //cheque=> if complete then add credited table date vice
                    billSearch hhyy = new billSearch();
                    String invoIDg = this.jLabel229.getText();
                    double adAMT = hhyy.getadvancedAmt(invoIDg);
                    
                    try{
                        String query = "delete from bill where bill_id=?";
                        PreparedStatement pstf = conn.prepareStatement(query);
                        
                        String invoID = this.jLabel229.getText();
                        pstf.setString(1, invoID);
                        pstf.executeUpdate();
                    }
                    catch(SQLException exe){
                        exe.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, exe);
                    }
                    
                    cashBalancing huji = new cashBalancing();
                    
                    Date df = new Date();
                    SimpleDateFormat sdf1h = new SimpleDateFormat("yyyy-MM-dd");
                    String dateff = sdf1h.format(df); 
        
                    SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
                    String ttttttf = sdf.format(df);
                    String invoIDD = this.jLabel229.getText();
                    String noteeeeee =invoIDD.concat(" whole advanced cash invoice got deleted.");
                    double amtr = (Double.parseDouble(this.jTextField118.getText())) - adAMT;
                    
                    huji.addCreditedPayments(noteeeeee, amtr, dateff, ttttttf, this);
                    setCashBalance();
                    this.editEnvoice.dispose();
                    
                    billSearch iuiu = new billSearch();
                    ResultSet rs4jsd = iuiu.showAllPendingBillDetails();
                    this.jTable4.setModel(DbUtils.resultSetToTableModel(rs4jsd));
                    
                }       
        }
        else if(billType.equals("Credit")){   
            int userSelection1 = JOptionPane.showConfirmDialog(editEnvoice,"Are you sure to delete this Invoice ?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
                if(userSelection1 == 0){
                    try {
                        String query = "update items set qty = qty+ ? where itm_code = ?";
                        PreparedStatement pst1 = conn.prepareStatement(query);

                        for(int i=0; i<jTable19.getRowCount(); i++){
                            String itemId = (String)jTable19.getValueAt(i, 1);
                            int qty = (int)jTable19.getValueAt(i, 4);

                            pst1.setInt(1, qty);
                            pst1.setString(2, itemId);
                            pst1.executeUpdate();
                        }
                    } catch (SQLException e) {
                        e.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, e);
                    }
                    //item sub table eke item no -> yes
                    try{
                        for(int i=0; i<jTable19.getRowCount(); i++){
                            String Bill_itemId = (String)jTable19.getValueAt(i, 0);
                            String aaas = kkiu.checkSNAvailability(Bill_itemId);
                            
                            if(aaas != ""){
                                ArrayList<String> listA = kkiu.getBilledSN(Bill_itemId);
                                for(int ii=0; ii<listA.size(); ii++){
                                    kkiu.updateItemSerial(listA.get(ii));   
                                }
                            }  
                        }
                    
                    // sn delet from bill_sub_items 
                        for(int j=0; j<jTable19.getRowCount(); j++){
                            String Bill_itemId1 = (String)jTable19.getValueAt(j, 0);
                            String aaass = kkiu.checkSNAvailability(Bill_itemId1);
                            
                            if(aaass != ""){
                                System.out.println("eeeeeeeeeeeeeeeeeeeeeee");
                                kkiu.deleteBillSN(Bill_itemId1);
                            }                                  
                        }      
                    }
                    catch (Exception eg) {
                        eg.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, eg);
                    }
                    
                    try{
                        
                        String query = "delete from credit_invoice_sub where cdID=?";
                        PreparedStatement pstf = conn.prepareStatement(query);
                        
//                        String invoIDD = this.jLabel229.getText();
                        pstf.setString(1, chequeORcreditID);
                        System.out.println(chequeORcreditID);
                        pstf.executeUpdate();
                    }
                    catch(SQLException exe){
                        exe.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, exe);
                    }
                    try {
                        String query = "delete from bill_items where bill_item_id=?";
                        PreparedStatement pstff = conn.prepareStatement(query);

                        for(int i=0; i<jTable19.getRowCount(); i++){
                            String itemId = (String)jTable19.getValueAt(i, 0);
                            pstff.setString(1, itemId);
                            pstff.executeUpdate();
                    }
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    billSearch jk8dg = new billSearch();
                    String invoIDDj = this.jLabel229.getText();
                    double amtr = jk8dg.getPayedCeditAmt(invoIDDj);
                    
                    try{
                        
                        String query = "delete from creditedinvoices where bill_id=?";
                        PreparedStatement pstf = conn.prepareStatement(query);
                        
                        String invoIDF = this.jLabel229.getText();
                        pstf.setString(1, invoIDF);
                        pstf.executeUpdate();
                    }
                    catch(SQLException exe){
                        exe.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, exe);
                    }
                    // check the invo type.. delete invoID from cheque and creditinvo=>sub and add for credited table date vice
                    //cheque=> if complete then add credited table date vice
                    try{
                        String query = "delete from bill where bill_id=?";
                        PreparedStatement pstf = conn.prepareStatement(query);
                        
                        String invoID = this.jLabel229.getText();
                        pstf.setString(1, invoID);
                        pstf.executeUpdate();
                    }
                    catch(SQLException exe){
                        exe.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, exe);
                    }

                    cashBalancing huji = new cashBalancing();
                    
                    Date df = new Date();
                    SimpleDateFormat sdf1h = new SimpleDateFormat("yyyy-MM-dd");
                    String dateff = sdf1h.format(df); 
        
                    SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
                    String ttttttf = sdf.format(df);      
                    String noteeeeee =invoIDDj.concat(" whole credit invoice got deleted.");

                    huji.addCreditedPayments(noteeeeee, amtr, dateff, ttttttf, this);
                    setCashBalance();
                    this.editEnvoice.dispose();
                    
                    billSearch iuiu = new billSearch();
                    ResultSet rs4jsd = iuiu.showAllPendingBillDetails();
                    this.jTable4.setModel(DbUtils.resultSetToTableModel(rs4jsd));
                    
                }       
        }
        else if(billType.equals("Credit Advanced")){   
            int userSelection1 = JOptionPane.showConfirmDialog(editEnvoice,"Are you sure to delete this Invoice ?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
                if(userSelection1 == 0){
                    try {
                        String query = "update items set qty = qty+ ? where itm_code = ?";
                        PreparedStatement pst1 = conn.prepareStatement(query);

                        for(int i=0; i<jTable19.getRowCount(); i++){
                            String itemId = (String)jTable19.getValueAt(i, 1);
                            int qty = (int)jTable19.getValueAt(i, 4);

                            pst1.setInt(1, qty);
                            pst1.setString(2, itemId);
                            pst1.executeUpdate();
                        }
                    } catch (SQLException e) {
                        e.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, e);
                    }
                    //item sub table eke item no -> yes
                    try{
                        for(int i=0; i<jTable19.getRowCount(); i++){
                            String Bill_itemId = (String)jTable19.getValueAt(i, 0);
                            String aaas = kkiu.checkSNAvailability(Bill_itemId);
                            
                            if(aaas != ""){
                                ArrayList<String> listA = kkiu.getBilledSN(Bill_itemId);
                                for(int ii=0; ii<listA.size(); ii++){
                                    kkiu.updateItemSerial(listA.get(ii));   
                                }
                            }  
                        }
                    
                    // sn delet from bill_sub_items 
                        for(int j=0; j<jTable19.getRowCount(); j++){
                            String Bill_itemId1 = (String)jTable19.getValueAt(j, 0);
                            String aaass = kkiu.checkSNAvailability(Bill_itemId1);
                            
                            if(aaass != ""){
                                System.out.println("eeeeeeeeeeeeeeeeeeeeeee");
                                kkiu.deleteBillSN(Bill_itemId1);
                            }                                  
                        }      
                    }
                    catch (Exception eg) {
                        eg.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, eg);
                    }
                    
                    try{
                        
                        String query = "delete from credit_invoice_sub where cdID=?";
                        PreparedStatement pstf = conn.prepareStatement(query);
                        
//                        String invoIDD = this.jLabel229.getText();
                        pstf.setString(1, chequeORcreditID);
                        System.out.println(chequeORcreditID);
                        pstf.executeUpdate();
                    }
                    catch(SQLException exe){
                        exe.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, exe);
                    }
                    try {
                        String query = "delete from bill_items where bill_item_id=?";
                        PreparedStatement pstff = conn.prepareStatement(query);

                        for(int i=0; i<jTable19.getRowCount(); i++){
                            String itemId = (String)jTable19.getValueAt(i, 0);
                            pstff.setString(1, itemId);
                            pstff.executeUpdate();
                    }
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    billSearch jk8dg = new billSearch();
                    String invoIDDj = this.jLabel229.getText();
                    double amtr = jk8dg.getPayedCeditAmt(invoIDDj);
                    
                    double adAMT = jk8dg.getadvancedAmt(invoIDDj);
                    
                    try{
                        
                        String query = "delete from creditedinvoices where bill_id=?";
                        PreparedStatement pstf = conn.prepareStatement(query);
                        
                        String invoIDF = this.jLabel229.getText();
                        pstf.setString(1, invoIDF);
                        pstf.executeUpdate();
                    }
                    catch(SQLException exe){
                        exe.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, exe);
                    }
                    // check the invo type.. delete invoID from cheque and creditinvo=>sub and add for credited table date vice
                    //cheque=> if complete then add credited table date vice
                    try{
                        String query = "delete from bill where bill_id=?";
                        PreparedStatement pstf = conn.prepareStatement(query);
                        
                        String invoID = this.jLabel229.getText();
                        pstf.setString(1, invoID);
                        pstf.executeUpdate();
                    }
                    catch(SQLException exe){
                        exe.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, exe);
                    }

                    cashBalancing huji = new cashBalancing();
                    
                    Date df = new Date();
                    SimpleDateFormat sdf1h = new SimpleDateFormat("yyyy-MM-dd");
                    String dateff = sdf1h.format(df); 
        
                    SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
                    String ttttttf = sdf.format(df);      
                    String noteeeeee =invoIDDj.concat(" whole advanced credit invoice got deleted.");

                    huji.addCreditedPayments(noteeeeee, (amtr - adAMT), dateff, ttttttf, this);
                    setCashBalance();
                    this.editEnvoice.dispose();
                    
                    billSearch iuiu = new billSearch();
                    ResultSet rs4jsd = iuiu.showAllPendingBillDetails();
                    this.jTable4.setModel(DbUtils.resultSetToTableModel(rs4jsd));
                    
                }       
        }
    }//GEN-LAST:event_jButton78ActionPerformed

    private void com_box_bill_itm_searchTypActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_com_box_bill_itm_searchTypActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_com_box_bill_itm_searchTypActionPerformed

    private void tbl_addBillItemsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_addBillItemsMousePressed
        storeItemData jukif = new storeItemData();
        int selectedRow177 = this.tbl_addBillItems.getSelectedRow();
        
        String itmCorde = this.tbl_addBillItems.getModel().getValueAt(selectedRow177, 0).toString();
        String r_price = this.tbl_addBillItems.getModel().getValueAt(selectedRow177, 4).toString();
        
        ResultSet rs3333 = jukif.getSubItemData(itmCorde);
        this.jTable33.setModel(DbUtils.resultSetToTableModel(rs3333)); 
        this.txt_search_bill_itm2.setText(r_price);
   
    }//GEN-LAST:event_tbl_addBillItemsMousePressed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        billSearch hryu = new billSearch();
        
        String typee = this.jComboBox10.getSelectedItem().toString();
        
        ResultSet rty = hryu.showCompleteBillDetailsByType(typee);
        this.jTable4.setModel(DbUtils.resultSetToTableModel(rty));
        
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jTextField108KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField108KeyTyped
        char ssss = evt.getKeyChar();
       
        if(!(Character.isDigit(ssss)) || (ssss == KeyEvent.VK_BACK_SPACE) || (ssss == KeyEvent.VK_DELETE)){
            evt.consume();
        }          
    }//GEN-LAST:event_jTextField108KeyTyped

    private void jTextField108ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField108ActionPerformed
        if(!this.jTextField108.getText().equals("")){
            double rrrAmt = Double.parseDouble(this.jTextField108.getText());
            double gggAmt = Double.parseDouble(this.jTextField111.getText());
            
            this.jTextField112.setText(String.valueOf(gggAmt - rrrAmt)); 
        
       }
    }//GEN-LAST:event_jTextField108ActionPerformed

    private void btn_billing1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_billing1MousePressed
        resetColor(btn_search);
        resetColor(btn_add);
        resetColor(btn_billing);
        resetColor(btn_bill_summ);
        resetColor(btn_hr);
        resetColor(btn_hr2);
        resetColor(btn_hr4);
        setColor(btn_billing1);
        
        this.pnl_settings.setVisible(false);
        this.pnl_hr.setVisible(false);
        this.pnl_searchItm.setVisible(false);
        this.pnl_addItms.setVisible(false);
        this.pnl_billing.setVisible(false);
        this.pnl_billingSumm.setVisible(false);
        this.pnl_barcode.setVisible(false);
        this.pnl_quickBill.setVisible(true);
        

        this.jPanel10.setVisible(false);
        this.jPanel13.setVisible(false);
        this.jPanel14.setVisible(false);
        this.jPanel15.setVisible(false);
        this.jPanel16.setVisible(false);
        this.jPanel55.setVisible(true);
        this.jPanel56.setVisible(false);

        this.txt_add_itemName.setText("");
        this.txt_add_packSize.setText("");
        this.txt_add_qty.setText("");
        this.txt_add_wPrice.setText("");
        this.txt_add_retailPrice.setText("");

        Date da = new Date();
        SimpleDateFormat sdf1g = new SimpleDateFormat("yyyy-MM-dd");
        String datrr = sdf1g.format(da); 

        cashBalancing lasf = new cashBalancing();

        ResultSet rsyy = lasf.showDebitedDetailsByDate(datrr);
        this.jTable28.setModel(DbUtils.resultSetToTableModel(rsyy));

        ResultSet rsyyy = lasf.showCreditedDetailsByDate(datrr);
        this.jTable27.setModel(DbUtils.resultSetToTableModel(rsyyy));
    }//GEN-LAST:event_btn_billing1MousePressed

    private void btn_billing1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_billing1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_billing1MouseReleased

    private void txt_search_text1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search_text1KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            this.jTextArea17.requestFocusInWindow();
        }
    }//GEN-LAST:event_txt_search_text1KeyPressed

    private void jButton85ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton85ActionPerformed
        cashBalancing pooo = new cashBalancing();
        Date d = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
        String tttt = sdf.format(d);
        
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String ddddd = sdf1.format(d);

        String addNote = this.jTextArea17.getText();
        String AMT = this.txt_search_text1.getText();
        
        if(addNote.equals(" ") || addNote.trim().isEmpty()){
            addNote = "-";
        }
        
        
        if(AMT.equals(" ") || AMT.trim().isEmpty()){
            JOptionPane.showMessageDialog(pnl_quickBill, "Please Enter the Cash Amount.!","Cash Tray", JOptionPane.ERROR_MESSAGE);
            this.txt_search_text1.requestFocusInWindow();
        }
        else{
            double addAmt = Double.parseDouble(AMT);
            String trueee = pooo.addDebitePayments(addNote, addAmt, ddddd, tttt, pnl_quickBill);
            if(trueee == null){
                JOptionPane.showMessageDialog(this, "Cash IN Added Failed","Cash Tray", JOptionPane.ERROR_MESSAGE);
            }
            else{                
                JOptionPane.showMessageDialog(this, "Cash IN Successfully","Cash Tray", JOptionPane.INFORMATION_MESSAGE);
                this.txt_search_text1.setText("");
                this.jTextArea17.setText("");
            }
            ResultSet rsyu = pooo.showDebitedDetailsByDate(ddddd);
            this.jTable28.setModel(DbUtils.resultSetToTableModel(rsyu)); 
        }     
    }//GEN-LAST:event_jButton85ActionPerformed

    private void txt_search_text2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search_text2KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            this.jTextArea18.requestFocusInWindow();
        }
    }//GEN-LAST:event_txt_search_text2KeyPressed

    private void jButton86ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton86ActionPerformed
        cashBalancing poo = new cashBalancing(); 
        Date d = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
        String tttt = sdf.format(d);
        
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String ddddd = sdf1.format(d);
        
        String addNote = this.jTextArea18.getText();
        String cashAMT = this.txt_search_text2.getText();
        System.out.println("111111");
        System.out.println(addNote);
        System.out.println("111111");
        if(addNote.trim().isEmpty()){
            System.out.println("baaaaaaaaank");
        }
        
        if(addNote.equals("") || addNote.trim().isEmpty()){
                JOptionPane.showMessageDialog(pnl_quickBill, "Please Enter the Note.!","Cash Tray", JOptionPane.ERROR_MESSAGE);
                this.jTextArea18.requestFocusInWindow();
            }
        else if(cashAMT.equals(" ") || cashAMT.trim().isEmpty()){
            JOptionPane.showMessageDialog(pnl_quickBill, "Please Enter the Cash Amount.!","Cash Tray", JOptionPane.ERROR_MESSAGE);
            this.txt_search_text2.requestFocusInWindow();
        }
        else{
            double addAmt = Double.parseDouble(cashAMT);
            String trueee =  poo.addCreditedPayments(addNote, addAmt, ddddd, tttt, pnl_quickBill);
            if(trueee == null){
                JOptionPane.showMessageDialog(pnl_quickBill, "Cash OUT Added Failed","Cash Tray", JOptionPane.ERROR_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(pnl_quickBill, "Cash OUT Successfully","Cash Tray", JOptionPane.INFORMATION_MESSAGE); 
                this.jTextArea18.setText("");
                this.txt_search_text2.setText("");
            }
            ResultSet rsyyp = poo.showCreditedDetailsByDate(ddddd);
            this.jTable27.setModel(DbUtils.resultSetToTableModel(rsyyp)); 
        }    
    }//GEN-LAST:event_jButton86ActionPerformed

    private void jTable27MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable27MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable27MousePressed

    private void jTable28MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable28MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable28MousePressed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        this.addItemTypes.setSize(483,400);
        this.addItemTypes.setTitle("Edit Item Types");  
        this.addItemTypes.setLocationRelativeTo(this);
        this.addItemTypes.setVisible(true);
        this.jTextField144.requestFocusInWindow();
        
        typesHandler juy = new typesHandler();
        ResultSet rsyo = juy.showAllItemTypes();
        this.jTable30.setModel(DbUtils.resultSetToTableModel(rsyo));
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton87ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton87ActionPerformed
        userController usrg = new userController();
        
        boolean accessOK=usrg.validateAdminLoginDetails(this.jTextField136.getText(), "yes", adminLogin);
        if(accessOK){
            this.dailyCashBal.setSize(835,520);
            this.dailyCashBal.setTitle("Daily Cash Balance");   
            this.dailyCashBal.setLocationRelativeTo(this);
            this.dailyCashBal.setVisible(true);

            Date da = new Date();
            SimpleDateFormat sdf1g = new SimpleDateFormat("yyyy-MM-dd");
            String datrr = sdf1g.format(da);
            this.jLabel225.setText(datrr);

            cashBalancing las = new cashBalancing();

            ResultSet rsy = las.showDebitedDetailsByDate(datrr);
            this.jTable25.setModel(DbUtils.resultSetToTableModel(rsy));

            ResultSet rsyy = las.showCreditedDetailsByDate(datrr);
            this.jTable26.setModel(DbUtils.resultSetToTableModel(rsyy));

            double dddd = las.calculateDebitedMoney(datrr);
            double cccc = las.calculateCreditedMoney(datrr);

            this.jLabel221.setText(String.valueOf(dddd));
            this.jLabel222.setText(String.valueOf(cccc));

            this.jLabel213.setText(String.valueOf(dddd-cccc));
            setCashBalance();
            adminLogin.dispose();
            
        }
        else{
            JOptionPane.showMessageDialog(adminLogin,"Incorrect Password or No access !","Sign In Failed",JOptionPane.ERROR_MESSAGE);
        }
        this.jTextField136.setText("");
    }//GEN-LAST:event_jButton87ActionPerformed

    private void jTable23MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable23MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable23MousePressed

    private void jTable23KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable23KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable23KeyPressed

    private void jButton88ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton88ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton88ActionPerformed

    private void jTextField137ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField137ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField137ActionPerformed

    private void jButton89ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton89ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton89ActionPerformed

    private void jTable24MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable24MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable24MousePressed

    private void jTable24KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable24KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable24KeyPressed

    private void jButton90ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton90ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton90ActionPerformed

    private void jTextField138ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField138ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField138ActionPerformed

    private void jButton91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton91ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton91ActionPerformed

    private void btn_hr4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_hr4MousePressed
        

//        this.txt_add_itemName.setText("");
//        this.txt_add_packSize.setText("");
//        this.txt_add_qty.setText("");
//        this.txt_add_wPrice.setText("");
//        this.txt_add_retailPrice.setText("");
            resetColor(btn_search);
            resetColor(btn_add);
            resetColor(btn_billing);
            resetColor(btn_bill_summ);
            resetColor(btn_hr);
            resetColor(btn_hr2);
            setColor(btn_hr4);
            resetColor(btn_billing1);


            
        
        this.adminLogin1.setSize(375,175);
        this.adminLogin1.setTitle("Admin Access");   
        this.adminLogin1.setLocationRelativeTo(this);
        this.adminLogin1.setVisible(true);
    }//GEN-LAST:event_btn_hr4MousePressed

    private void txt_search_text4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search_text4KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_search_text4KeyPressed

    private void jButton93ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton93ActionPerformed
        userController hyr = new userController();
        userLogin loii = new userLogin();
        String pw1 = this.jTextField139.getText();
        String pw2 = this.jTextField140.getText();
        String userName = this.txt_search_text4.getText();
        String PWW ="";
        if(jCheckBox15.isSelected()){
            PWW = "yes";
        }
        else{
            PWW = "no";
        }
        
        if(pw1.equals(pw2)){
            hyr.addNewUser(userName, pw1, PWW, this);
            
            this.jTextField139.setText("");
            this.txt_search_text4.setText("");
            this.jTextField140.setText("");
            this.jCheckBox15.setSelected(false);
            
            ResultSet gdddf = loii.showAllUer();
            this.jTable29.setModel(DbUtils.resultSetToTableModel(gdddf));
        }
        else{
            JOptionPane.showMessageDialog(this, "Confirmation password should be same.!","User Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton93ActionPerformed

    private void jTable29MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable29MousePressed
        int selectedRow = this.jTable29.getSelectedRow();
        String PP ="";
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Pleace select a Item to edit details!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            String IDDD = this.jTable29.getModel().getValueAt(selectedRow, 0).toString();    
            userController sdf = new userController();
            try{
                ResultSet rsg = sdf.getUserDetails(IDDD);
                while(rsg.next()){
                    this.txt_search_text4.setText(rsg.getString("u_name"));
                    this.jTextField140.setText(rsg.getString("password"));
                    this.jTextField139.setText(rsg.getString("password"));
                    PP = rsg.getString("power");     
                }
            }
            
            catch(Exception e){
                //JOptionPane.showMessageDialog(this, "Cannot Save Movie Details!","Error",JOptionPane.ERROR_MESSAGE);
            }
            if(PP.equals("yes")){
                        this.jCheckBox15.setSelected(true);     
                    }
                    else{
                        this.jCheckBox15.setSelected(false);
                    }
        }
    }//GEN-LAST:event_jTable29MousePressed

    private void jButton94ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton94ActionPerformed
        int selectedRowglfg = this.jTable29.getSelectedRow();
        userController kiugf = new userController();
        userLogin loig = new userLogin();
        
        if(selectedRowglfg == -1){
            JOptionPane.showMessageDialog(dailyCashBal, "Select a user account to Update.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            int userSelection = JOptionPane.showConfirmDialog(dailyCashBal,"Are you sure to Edit this account?", "Confirm Edit", JOptionPane.YES_NO_OPTION);
            if(userSelection == 0){
                int accID = Integer.parseInt(this.jTable29.getModel().getValueAt(selectedRowglfg, 0).toString());
                String pw11 = this.jTextField139.getText();
                String pw22 = this.jTextField140.getText();
                String userName1 = this.txt_search_text4.getText();
                String PWW ="";
                    if(jCheckBox15.isSelected()){
                        PWW = "yes";
                    }
                    else{
                        PWW = "no";
                    }

                    if(pw11.equals(pw22)){
                        kiugf.UpdateUser(userName1, pw11, PWW, accID, this);

                        this.jTextField139.setText("");
                        this.txt_search_text4.setText("");
                        this.jTextField140.setText("");
                        this.jCheckBox15.setSelected(false);

                        ResultSet gdddff = loig.showAllUer();
                        this.jTable29.setModel(DbUtils.resultSetToTableModel(gdddff));
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "Confirmation password should be same.!","User Error", JOptionPane.ERROR_MESSAGE);
                    }              
            }
        }
        ResultSet gdddf = loig.showAllUer();
        this.jTable29.setModel(DbUtils.resultSetToTableModel(gdddf));
    }//GEN-LAST:event_jButton94ActionPerformed

    private void jButton95ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton95ActionPerformed
        int selectedRowglfg = this.jTable29.getSelectedRow();
        userController kiug = new userController();
        userLogin loi = new userLogin();
        
        if(selectedRowglfg == -1){
            JOptionPane.showMessageDialog(dailyCashBal, "Select a user account to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            int userSelection = JOptionPane.showConfirmDialog(dailyCashBal,"Are you sure to delete this account?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if(userSelection == 0){
                int accID = Integer.parseInt(this.jTable29.getModel().getValueAt(selectedRowglfg, 0).toString());
                
                kiug.deleteUser(accID);
                
                             
            }
        }
        ResultSet gdddf = loi.showAllUer();
        this.jTable29.setModel(DbUtils.resultSetToTableModel(gdddf)); 
    }//GEN-LAST:event_jButton95ActionPerformed

    private void jButton92ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton92ActionPerformed
        userController usrg = new userController();
        boolean accessOK=usrg.validateAdminLoginDetails(this.jTextField141.getText(), "yes", adminLogin1);
        if(accessOK){
            userLogin hhhu = new userLogin();
            
            ResultSet rsyyy = hhhu.showAllUer();
            this.jTable29.setModel(DbUtils.resultSetToTableModel(rsyyy));

            this.jPanel10.setVisible(false);
            this.jPanel13.setVisible(false);
            this.jPanel14.setVisible(false);
            this.jPanel15.setVisible(false);
            this.jPanel16.setVisible(false);
            this.jPanel55.setVisible(false);
            this.jPanel56.setVisible(true);
            

            this.pnl_settings.setVisible(true);
            this.pnl_hr.setVisible(false);
            this.pnl_searchItm.setVisible(false);
            this.pnl_addItms.setVisible(false);
            this.pnl_billing.setVisible(false);
            this.pnl_billingSumm.setVisible(false);
            this.pnl_barcode.setVisible(false);
            this.pnl_quickBill.setVisible(false);
            
            
            adminLogin1.dispose();
        }
        else{
            JOptionPane.showMessageDialog(adminLogin1,"Incorrect Password or No access !","Sign In Failed",JOptionPane.ERROR_MESSAGE);
        }
        this.jTextField141.setText("");
    }//GEN-LAST:event_jButton92ActionPerformed

    private void jButton96ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton96ActionPerformed
        userController usrg = new userController();
        boolean accessOK=usrg.validateAdminLoginDetails(this.jTextField142.getText(), "yes", adminLogin2);
        if(accessOK){
            items_add_to_bill hghhf = new items_add_to_bill();
            cashBalancing hyt = new cashBalancing();

            int selectedRow = this.jTable4.getSelectedRow();
            if(selectedRow == -1){
                JOptionPane.showMessageDialog(this, "Pleace select a Invoice to Edit","Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                this.editEnvoice.setSize(1280,720);
                this.editEnvoice.setTitle("Edit Invoice");   
                this.editEnvoice.setLocationRelativeTo(this);
                this.editEnvoice.setVisible(true);

                String invoIDD = this.jTable4.getModel().getValueAt(selectedRow, 0).toString();
                String invodatee = this.jTable4.getModel().getValueAt(selectedRow, 1).toString();
                String Customer = this.jTable4.getModel().getValueAt(selectedRow, 2).toString();
                int dis = (int)jTable4.getValueAt(selectedRow, 5);
                String total = String.valueOf(this.jTable4.getModel().getValueAt(selectedRow, 4).toString());
                //int dis = this.jTable4.getModel().getValueAt(selectedRow, 5).toString();
                String netAmt = String.valueOf(this.jTable4.getModel().getValueAt(selectedRow, 6).toString());
                String emlo = this.jTable4.getModel().getValueAt(selectedRow, 3).toString();
                String billDiscrip = String.valueOf(this.jTable4.getModel().getValueAt(selectedRow, 8).toString());


                this.jLabel229.setText(invoIDD);
                this.jTextField116.setText(Customer);
                this.jTextField117.setText(Integer.toString(dis));
                this.jTextField115.setText(total);
                this.jTextField118.setText(netAmt);
                this.jTextField133.setText(emlo);
                this.jLabel246.setText(invodatee);
                this.jTextArea13.setText(billDiscrip);


                ResultSet rs3s = hghhf.getAddedItemsBy_bill_ID(invoIDD);
                this.jTable19.setModel(DbUtils.resultSetToTableModel(rs3s));

                this.jTextField126.setText("");
//                this.jTextArea15.setText("");
//                this.jTextField128.setText("");
//                this.jTextField129.setText("");
//                this.jTextField130.setText("");
//                this.jTextField132.setText("");
                this.jTextField131.setText("");

            }
            adminLogin2.dispose();
        }
        else{
            JOptionPane.showMessageDialog(adminLogin2,"Incorrect Password or No access !","Sign In Failed",JOptionPane.ERROR_MESSAGE);
        }
        this.jTextField142.setText("");
    }//GEN-LAST:event_jButton96ActionPerformed

    private void jButton97ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton97ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton97ActionPerformed

    private void btn_billing1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_billing1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_billing1MouseExited

    private void jTable29MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable29MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable29MouseExited

    private void jTable30MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable30MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable30MousePressed

    private void jTable30KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable30KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable30KeyPressed

    private void jTable32MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable32MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable32MousePressed

    private void jTable32KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable32KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable32KeyPressed

    private void jButton84ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton84ActionPerformed
        this.addJobTypes.setSize(483,400);
        this.addJobTypes.setTitle("Edit Job Types");   
        this.addJobTypes.setLocationRelativeTo(this);
        this.addJobTypes.setVisible(true);
        this.jTextField146.requestFocusInWindow();
        
        typesHandler juyh = new typesHandler();
        ResultSet rsyok = juyh.showAllJobTypes();
        this.jTable32.setModel(DbUtils.resultSetToTableModel(rsyok));
    }//GEN-LAST:event_jButton84ActionPerformed

    private void jButton99ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton99ActionPerformed
        int selectedRowglfgh = this.jTable30.getSelectedRow();
        typesHandler kiugg = new typesHandler();

        if(selectedRowglfgh == -1){
            JOptionPane.showMessageDialog(addItemTypes, "Select a Type to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            int userSelection = JOptionPane.showConfirmDialog(addItemTypes,"Are you sure to delete this Type?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if(userSelection == 0){
                int accID = Integer.parseInt(this.jTable30.getModel().getValueAt(selectedRowglfgh, 0).toString());
                
                boolean ttt = kiugg.deleteItemType(accID);
                if(ttt){
                    JOptionPane.showMessageDialog(addItemTypes, "Type deleted Successfully!","User Details",JOptionPane.INFORMATION_MESSAGE);
                }
                
                             
            }
        }
        ResultSet gdddfg = kiugg.showAllItemTypes();
        this.jTable30.setModel(DbUtils.resultSetToTableModel(gdddfg)); 
        
        setItemTypes();
    }//GEN-LAST:event_jButton99ActionPerformed

    private void jButton103ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton103ActionPerformed
        int selectedRowglfgh = this.jTable32.getSelectedRow();
        typesHandler kiugg = new typesHandler();

        if(selectedRowglfgh == -1){
            JOptionPane.showMessageDialog(addJobTypes, "Select a Type to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            int userSelection = JOptionPane.showConfirmDialog(addJobTypes,"Are you sure to delete this Type?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if(userSelection == 0){
                int accID = Integer.parseInt(this.jTable32.getModel().getValueAt(selectedRowglfgh, 0).toString());
                
                boolean ttt = kiugg.deleteJobType(accID);
                if(ttt){
                    JOptionPane.showMessageDialog(addJobTypes, "Type deleted Successfully!","User Details",JOptionPane.INFORMATION_MESSAGE);
                }
                
                             
            }
        }
        ResultSet gdddfgf = kiugg.showAllJobTypes();
        this.jTable32.setModel(DbUtils.resultSetToTableModel(gdddfgf)); 
        
        setJobTypes();
    }//GEN-LAST:event_jButton103ActionPerformed

    private void jButton98ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton98ActionPerformed
        typesHandler poq = new typesHandler();
        
        String typeName = this.jTextField144.getText();
        
        poq.addItemType(typeName, addItemTypes);
        
        this.jTextField144.setText("");
        ResultSet gdddfgd = poq.showAllItemTypes();
        this.jTable30.setModel(DbUtils.resultSetToTableModel(gdddfgd));
        setItemTypes();
        
    }//GEN-LAST:event_jButton98ActionPerformed

    private void jButton102ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton102ActionPerformed
        typesHandler poqq = new typesHandler();
        
        String typeNamee = this.jTextField146.getText();
        
        poqq.addJobType(typeNamee, addJobTypes);
        
        this.jTextField146.setText("");
        ResultSet gdddfgdf = poqq.showAllJobTypes();
        this.jTable32.setModel(DbUtils.resultSetToTableModel(gdddfgdf));
        setJobTypes();
    }//GEN-LAST:event_jButton102ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox4MousePressed
        setJobTypes();
    }//GEN-LAST:event_jComboBox4MousePressed

    private void txt_add_retailPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_retailPriceKeyTyped
        if(Character.isLetter(evt.getKeyChar())){
            evt.consume();
        }
        else{
            try{
                Double.parseDouble(txt_add_retailPrice.getText()+evt.getKeyChar());
            }
            catch(NumberFormatException e){
                evt.consume();
            }
        }
    }//GEN-LAST:event_txt_add_retailPriceKeyTyped

    private void txt_add_wPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_wPriceKeyTyped
        if(Character.isLetter(evt.getKeyChar())){
            evt.consume();
        }
        else{
            try{
                Double.parseDouble(txt_add_wPrice.getText()+evt.getKeyChar());
            }
            catch(NumberFormatException e){
                evt.consume();
            }
        }
    }//GEN-LAST:event_txt_add_wPriceKeyTyped

    private void txt_add_qtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_qtyKeyTyped
        if(Character.isLetter(evt.getKeyChar())){
            evt.consume();
        }
        else{
            try{
                Double.parseDouble(txt_add_qty.getText()+evt.getKeyChar());
            }
            catch(NumberFormatException e){
                evt.consume();
            }
        }
    }//GEN-LAST:event_txt_add_qtyKeyTyped

    private void txt_add_qty1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_qty1KeyTyped
        if(Character.isLetter(evt.getKeyChar())){
            evt.consume();
        }
        else{
            try{
                Double.parseDouble(txt_add_qty1.getText()+evt.getKeyChar());
            }
            catch(NumberFormatException e){
                evt.consume();
            }
        }
    }//GEN-LAST:event_txt_add_qty1KeyTyped

    private void jTextField106KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField106KeyTyped
        if(Character.isLetter(evt.getKeyChar())){
            evt.consume();
        }
        else{
            try{
                Double.parseDouble(jTextField106.getText()+evt.getKeyChar());
            }
            catch(NumberFormatException e){
                evt.consume();
            }
        }
    }//GEN-LAST:event_jTextField106KeyTyped

    private void jTextField86KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField86KeyTyped
        if(Character.isLetter(evt.getKeyChar())){
            evt.consume();
        }
        else{
            try{
                Double.parseDouble(jTextField86.getText()+evt.getKeyChar());
            }
            catch(NumberFormatException e){
                evt.consume();
            }
        }
    }//GEN-LAST:event_jTextField86KeyTyped

    private void txt_search_text1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search_text1KeyTyped
        if(Character.isLetter(evt.getKeyChar())){
            evt.consume();
        }
        else{
            try{
                Double.parseDouble(txt_search_text1.getText()+evt.getKeyChar());
            }
            catch(NumberFormatException e){
                evt.consume();
            }
        }
    }//GEN-LAST:event_txt_search_text1KeyTyped

    private void txt_search_text2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search_text2KeyTyped
        if(Character.isLetter(evt.getKeyChar())){
            evt.consume();
        }
        else{
            try{
                Double.parseDouble(txt_search_text2.getText()+evt.getKeyChar());
            }
            catch(NumberFormatException e){
                evt.consume();
            }
        }
    }//GEN-LAST:event_txt_search_text2KeyTyped

    private void jTextField134KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField134KeyTyped
        if(Character.isLetter(evt.getKeyChar())){
            evt.consume();
        }
        else{
            try{
                Double.parseDouble(jTextField134.getText()+evt.getKeyChar());
            }
            catch(NumberFormatException e){
                evt.consume();
            }
        }
    }//GEN-LAST:event_jTextField134KeyTyped

    private void jTextField131KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField131KeyTyped
        if(Character.isLetter(evt.getKeyChar())){
            evt.consume();
        }
        else{
            try{
                Double.parseDouble(jTextField131.getText()+evt.getKeyChar());
            }
            catch(NumberFormatException e){
                evt.consume();
            }
        }
    }//GEN-LAST:event_jTextField131KeyTyped

    private void jTextField114KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField114KeyTyped
        if(Character.isLetter(evt.getKeyChar())){
            evt.consume();
        }
        else{
            try{
                Double.parseDouble(jTextField114.getText()+evt.getKeyChar());
            }
            catch(NumberFormatException e){
                evt.consume();
            }
        }
    }//GEN-LAST:event_jTextField114KeyTyped

    private void jTextField111KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField111KeyTyped
        if(Character.isLetter(evt.getKeyChar())){
            evt.consume();
        }
        else{
            try{
                Double.parseDouble(jTextField111.getText()+evt.getKeyChar());
            }
            catch(NumberFormatException e){
                evt.consume();
            }
        }
    }//GEN-LAST:event_jTextField111KeyTyped

    private void jTable31MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable31MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable31MousePressed

    private void jTable31KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable31KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable31KeyPressed

    private void txt_add_itemNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_itemNameKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            storeItemData fsd = new storeItemData();
            
            String isStock = "yes";
            
            String ItmCode = fsd.generateItemCode(this);
            String sn = this.txt_add_itemName.getText().toString();
            
            String isOk = fsd.addSubItems(sn, ItmCode,isStock, this);
            if(isOk != null){
                this.txt_add_itemName.setText("");
                ResultSet rs33 = fsd.getSubItemData(ItmCode);
                this.jTable31.setModel(DbUtils.resultSetToTableModel(rs33));
                
                int SubItemCount = fsd.getSubItemCount(ItmCode);
                this.txt_add_qty.setText(String.valueOf(SubItemCount));
            }
            
        }
    }//GEN-LAST:event_txt_add_itemNameKeyPressed

    private void jButton100ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton100ActionPerformed
        
        storeItemData sgg = new storeItemData();
        
        String nextItmCode = sgg.generateItemCode(this);
        int selectedRow123 = this.jTable31.getSelectedRow();
        
        
        
        if(selectedRow123 == -1){
            JOptionPane.showMessageDialog(this, "Select a Item to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            int userSelection = JOptionPane.showConfirmDialog(null,"Are you sure to delete this Item?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if(userSelection == 0){
                
                String snID = this.jTable31.getModel().getValueAt(selectedRow123, 0).toString();
                sgg.deleteSubItem(snID);
                ResultSet rsf = sgg.getSubItemData(nextItmCode);
                this.jTable31.setModel(DbUtils.resultSetToTableModel(rsf));
                
                int cc = sgg.getSubItemCount(nextItmCode);
                this.txt_add_qty.setText(String.valueOf(cc));
                
            }
        }
    }//GEN-LAST:event_jButton100ActionPerformed

    private void jTable33MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable33MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable33MousePressed

    private void jTable33KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable33KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable33KeyPressed

    private void jButton11MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton11MousePressed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        items_add_to_bill jjkkii = new items_add_to_bill();
        searchItems pissa = new searchItems(); 
        
        //String selectedSN = this.txt_search_bill_itm.getText();
        
        
        
        int selectedRow123789 = this.jTable33.getSelectedRow();
        
        String selectedSN = this.jTable33.getModel().getValueAt(selectedRow123789, 1).toString();
        String status = jjkkii.getItemStatus(selectedSN);
        
        if(selectedRow123789 == -1){
            JOptionPane.showMessageDialog(this, "Select a Item to ADD.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            
            if(status.equals("no")){
            JOptionPane.showMessageDialog(itemsAdder, "This "+selectedSN+" Item has already been added.!","Database Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                String SearchedItmName = pissa.getItemCodeBySubItemName(selectedSN);

                String SearchedItmCode = pissa.getItemCodeBySubItemCode(selectedSN);

                String NextBillid = jjkkii.generateBill_id(this);

                String SavedItemName = jjkkii.getItemNameFromBillItemTable(SearchedItmCode,NextBillid);

                if(SearchedItmName.equals(SavedItemName)){
                    String BillItemID = jjkkii.getBillItemIDFromBillItemTable(SearchedItmCode,NextBillid);

                    String bbbbbbbbb = jjkkii.addBillSubItems(selectedSN, BillItemID, itemsAdder);

                    if(bbbbbbbbb != null){
                       try {
                        String queryy = "update bill_items set qty=qty+1 where bill_item_id = ?";
                        PreparedStatement pstl = conn.prepareStatement(queryy);

                        pstl.setString(1, BillItemID);      
                        pstl.executeUpdate();

                        } catch (SQLException ex) {
                            ex.printStackTrace();
                            Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        try {
                            String queryyy = "update sub_items set inStock=? where sn = ?";
                            PreparedStatement pstlu = conn.prepareStatement(queryyy);

                            pstlu.setString(1, "no");
                            pstlu.setString(2, selectedSN);
                            pstlu.executeUpdate();

                         } catch (SQLException ex) {
                            ex.printStackTrace();
                            Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                         }

                        double rrrrrPrice = jjkkii.getRetailPrice(BillItemID);
                        System.out.println(rrrrrPrice);
                        double wwwwwPrice = jjkkii.getCostPrice(BillItemID);
                        System.out.println(wwwwwPrice);
                        int qqqqqty = jjkkii.getQTY(BillItemID);
                        System.out.println(qqqqqty);
                        double NewValue = calculateBillItemValue(qqqqqty,rrrrrPrice);
                        double NewCostValue = calculateBillItemCostValue(qqqqqty,wwwwwPrice);

                        try {
                            String queryy = "update bill_items set value=?, costValue=? where bill_item_id = ?";
                            PreparedStatement pstl = conn.prepareStatement(queryy);

                            pstl.setDouble(1, NewValue);
                            pstl.setDouble(2, NewCostValue);
                            pstl.setString(3, BillItemID);
                            pstl.executeUpdate();

                        } catch (SQLException ex) {
                            ex.printStackTrace();
                            Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                        } 
                    }


                    ResultSet rs = jjkkii.getAddedItemsBy_bill_ID(NextBillid);
                    this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));

                    double calculatedValue = jjkkii.calculateTotal(NextBillid);
                    this.jTextField7.setText(String.valueOf(calculatedValue));

                    this.txt_search_bill_itm.setText("");
                    this.txt_search_bill_itm.requestFocusInWindow();
                }
                else{
                    String itmCode ="";
                    String name="";
                    String warranty="";
                    String w_price="";
                    String r_price=this.txt_search_bill_itm2.getText();
                    String type="";

                    Date d = new Date();
                    SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
                    String date = sdf1.format(d); 

                    int qty,free,dis;
                    try{
                        ResultSet rsg = jjkkii.getItemDetails(selectedSN);
                        while(rsg.next()){
                            itmCode = rsg.getString("itm_code");
                            name = rsg.getString("itm_name");
                            warranty = rsg.getString("warranty");   
                            w_price = rsg.getString("w_price");
                            //r_price = rsg.getString("r_price");
                            type = rsg.getString("type");              
                        }
                    qty = 1;
                    free = 0;
                    dis = 0;
                    int wwarranty = Integer.parseInt(warranty);
                    double ww_price = Double.parseDouble(w_price);
                    double rr_price = Double.parseDouble(r_price);
                    String cashBalID = "no";
                    String billID = jjkkii.generateBill_id(this);
                    double valu = calculateBillItemValue(qty,rr_price);
                    double costValue = calculateBillItemCostValue(qty,ww_price);   

                    String billItemCode = jjkkii.addItemsToBill(itmCode, name, wwarranty, qty, free, ww_price, dis, rr_price, date, valu, billID,costValue,cashBalID, itemsAdder);

                    if(billItemCode != null){
                        jjkkii.addBillSubItems(selectedSN, billItemCode, itemsAdder);
                        try {
                            String queryyy = "update sub_items set inStock=? where sn = ?";
                            PreparedStatement pstlu = conn.prepareStatement(queryyy);

                            pstlu.setString(1, "no");
                            pstlu.setString(2, selectedSN);
                            pstlu.executeUpdate();

                         } catch (SQLException ex) {
                            ex.printStackTrace();
                            Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                         }
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "Date Base Error.!","Error",JOptionPane.ERROR_MESSAGE);
                    }
                    }
                    catch(Exception e){
                        //JOptionPane.showMessageDialog(this, "Cannot Save Movie Details!","Error",JOptionPane.ERROR_MESSAGE);
                    }

                    ResultSet rs = jjkkii.getAddedItemsBy_bill_ID(NextBillid);
                    this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));

                    double calculatedValue = jjkkii.calculateTotal(NextBillid);
                    this.jTextField7.setText(String.valueOf(calculatedValue));

                    this.txt_search_bill_itm.setText("");
                    this.txt_search_bill_itm.requestFocusInWindow();
                }
            }
        }
        
        
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton101ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton101ActionPerformed
        int selectedRow = this.tbl_items_search1.getSelectedRow();
            if(selectedRow == -1){
                JOptionPane.showMessageDialog(this, "Pleace select a SN to Delete","Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                this.adminLogin_item_delete_sn.setSize(375,175);
                this.adminLogin_item_delete_sn.setTitle("Admin Access");   
                this.adminLogin_item_delete_sn.setLocationRelativeTo(this);
                this.adminLogin_item_delete_sn.setVisible(true);
            }
    }//GEN-LAST:event_jButton101ActionPerformed

    private void tbl_items_searchMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_items_searchMousePressed
        storeItemData jukiff = new storeItemData();
        int selectedRow1777 = this.tbl_items_search.getSelectedRow();
        
        String itmCordee = this.tbl_items_search.getModel().getValueAt(selectedRow1777, 0).toString();
        
        ResultSet rs3333 = jukiff.getAllSubItemData(itmCordee);
        this.tbl_items_search1.setModel(DbUtils.resultSetToTableModel(rs3333));
    }//GEN-LAST:event_tbl_items_searchMousePressed

    private void txt_search_text3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search_text3KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            storeItemData fsdg = new storeItemData();
            
            int selectedRow321 = this.tbl_items_search.getSelectedRow();
        
            if(selectedRow321 == -1){
                JOptionPane.showMessageDialog(this, "Select a Item to Add New SN.!","Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                String isStock = "yes";
            
                String ItmCode = this.tbl_items_search.getModel().getValueAt(selectedRow321, 0).toString();
                String sn1 = this.txt_search_text3.getText().toString();

                String isOkk = fsdg.addSubItems(sn1, ItmCode,isStock, this);
                if(isOkk != null){
                    this.txt_search_text3.setText("");
                    ResultSet rs33 = fsdg.getAllSubItemData(ItmCode);
                    this.tbl_items_search1.setModel(DbUtils.resultSetToTableModel(rs33));
                    
                    try {
                        String queryy = "update items set qty=qty+1 where itm_code = ?";
                        PreparedStatement pstl = conn.prepareStatement(queryy);

                        pstl.setString(1, ItmCode);      
                        pstl.executeUpdate();

                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    this.txt_search_text3.requestFocusInWindow();
                }
                
                else{
                    JOptionPane.showMessageDialog(this, "Can Not Add Added Items.!","Error",JOptionPane.ERROR_MESSAGE);
                }
            }      
        }
    }//GEN-LAST:event_txt_search_text3KeyPressed

    private void jTable34MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable34MousePressed
        
    }//GEN-LAST:event_jTable34MousePressed

    private void jButton104ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton104ActionPerformed
        items_add_to_bill opiu = new items_add_to_bill();
        searchItems pissas = new searchItems();
        
        int selectedRow3212 = this.jTable34.getSelectedRow();
        int selectedRow32123 = this.jTable3.getSelectedRow();

        if(selectedRow3212 == -1){
            JOptionPane.showMessageDialog(edit_billed_Items, "Select a Item to Delete SN.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            DefaultTableModel ttt = (DefaultTableModel) jTable3.getModel();
            int userSelection1 = JOptionPane.showConfirmDialog(edit_billed_Items,"Are you sure to delete this Item ?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if(userSelection1 == 0){
                String billItemCode = this.jTable3.getModel().getValueAt(selectedRow32123, 0).toString();
                
                String billSubItemID = this.jTable34.getModel().getValueAt(selectedRow3212, 0).toString();
                String snnnn = this.jTable34.getModel().getValueAt(selectedRow3212, 1).toString();
                String itmCode = pissas.getItemCodeBySubItemCode(snnnn);
                boolean isItOk = opiu.deleteBillSN(billSubItemID);
//                boolean gg = sf.deleteSN(SNid);

                if(isItOk){
                    
                    try {
                        String queryyy = "update sub_items set inStock=? where sn = ?";
                        PreparedStatement pstlu = conn.prepareStatement(queryyy);

                        pstlu.setString(1, "yes");
                        pstlu.setString(2, snnnn);
                        pstlu.executeUpdate();

                    }catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    try {
                        String queryy = "update items set qty=qty+1 where itm_code = ?";
                        PreparedStatement pstl = conn.prepareStatement(queryy);

                        pstl.setString(1, itmCode);      
                        pstl.executeUpdate();

                    }catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    try {
                        String queryy = "update bill_items set qty=qty-1 where bill_item_id = ?";
                        PreparedStatement pstl = conn.prepareStatement(queryy);

                        pstl.setString(1, billItemCode);      
                        pstl.executeUpdate();

                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    } 
                    
                    double rrrrrPrice1 = opiu.getRetailPrice(billItemCode);

                    double wwwwwPrice1 = opiu.getCostPrice(billItemCode);

                    int qqqqqty1 = opiu.getQTY(billItemCode);
                    
                    ttt.setValueAt(qqqqqty1, selectedRow32123, 4);

                    double NewValue1 = calculateBillItemValue(qqqqqty1,rrrrrPrice1);
                    double NewCostValue1 = calculateBillItemCostValue(qqqqqty1,wwwwwPrice1);
                    
                    ttt.setValueAt(NewValue1, selectedRow32123, 7);
                    
                    try {
                        String queryy = "update bill_items set value=?, costValue=? where bill_item_id = ?";
                        PreparedStatement pstl = conn.prepareStatement(queryy);

                        pstl.setDouble(1, NewValue1);
                        pstl.setDouble(2, NewCostValue1);
                        pstl.setString(3, billItemCode);
                        pstl.executeUpdate();

                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    String aaaa = this.jLabel47.getText();


                    double calculatedValue = opiu.calculateTotal(aaaa);
                    this.jTextField7.setText(String.valueOf(calculatedValue));

                    JOptionPane.showMessageDialog(edit_billed_Items, "Item Deleted Successfully","Item Details", JOptionPane.INFORMATION_MESSAGE);

                    ResultSet jjuy = opiu.getSubItemDataFromBill(billItemCode);
                    this.jTable34.setModel(DbUtils.resultSetToTableModel(jjuy));
                    
                    String itmQTY = this.jTable3.getModel().getValueAt(selectedRow32123, 4).toString();
                    System.out.println(itmQTY);
                    int qqq = Integer.parseInt(itmQTY);
                    
                    System.out.println(qqq);
                    if(qqq == 0){
                        opiu.deleteBillItem(billItemCode);
                        ResultSet rs = opiu.getAddedItemsBy_bill_ID(aaaa);
                        this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));
                    }
                } 
            }   
        }
    }//GEN-LAST:event_jButton104ActionPerformed

    private void jButton105ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton105ActionPerformed
        this.itemsAdder.setSize(900,450);
        this.itemsAdder.setTitle("Add Items to Invoce");   
        this.itemsAdder.setLocationRelativeTo(this);
        this.itemsAdder.setVisible(true);
        this.txt_search_bill_itm.requestFocusInWindow();
        
        searchItems siir = new searchItems();
        ResultSet a = siir.showItemDetails();
        this.tbl_addBillItems.setModel(DbUtils.resultSetToTableModel(a));
        
        
        
        items_add_to_bill ddd = new items_add_to_bill();
        //ddd.checkBillRecordAvailability(this);
        
        boolean avl = ddd.checkBillRecordAvailability(this);
//        System.out.println(avl);

        String bill_date = "2002-02-15 05:03:42";
        double total = 1;
        int bill_dis = 1;
        String cust_id = "C000001";
        String e_id = "E000001";
        double net_amount = 1;
        int setle_days = 1;
        String status = "PENDIN";
        int days = 0;

        if(avl){
            System.out.println("true");
        }
        else{
            System.out.println("false");
            ddd.addTempDataToBill(bill_date, total, bill_dis, cust_id, e_id, net_amount, setle_days,status,days, this);
        }
        
        
        this.txt_search_bill_itm.setText("");
        this.edit_billed_Items.dispose();
    }//GEN-LAST:event_jButton105ActionPerformed

    private void jTextArea17KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea17KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            this.jButton85.requestFocusInWindow();
        }
    }//GEN-LAST:event_jTextArea17KeyPressed

    private void jButton85KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton85KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            cashBalancing pooo = new cashBalancing();
            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
            String tttt = sdf.format(d);

            SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
            String ddddd = sdf1.format(d);

            String addNote = this.jTextArea17.getText();
            String AMT = this.txt_search_text1.getText();

            if(addNote.equals(" ") || addNote.trim().isEmpty()){
                addNote = "-";
            }


            if(AMT.equals(" ") || AMT.trim().isEmpty()){
                JOptionPane.showMessageDialog(pnl_quickBill, "Please Enter the Cash Amount.!","Cash Tray", JOptionPane.ERROR_MESSAGE);
                this.txt_search_text1.requestFocusInWindow();
            }
            else{
                double addAmt = Double.parseDouble(AMT);
                String trueee = pooo.addDebitePayments(addNote, addAmt, ddddd, tttt, pnl_quickBill);
                if(trueee == null){
                    JOptionPane.showMessageDialog(this, "Cash IN Added Failed","Cash Tray", JOptionPane.ERROR_MESSAGE);
                }
                else{                
                    JOptionPane.showMessageDialog(this, "Cash IN Successfully","Cash Tray", JOptionPane.INFORMATION_MESSAGE);
                    this.txt_search_text1.setText("");
                    this.jTextArea17.setText("");
                }
                ResultSet rsyu = pooo.showDebitedDetailsByDate(ddddd);
                this.jTable28.setModel(DbUtils.resultSetToTableModel(rsyu)); 
            }
        }
    }//GEN-LAST:event_jButton85KeyPressed

    private void jTextArea18KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea18KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            this.jButton86.requestFocusInWindow();
        }
    }//GEN-LAST:event_jTextArea18KeyPressed

    private void jButton86KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton86KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            cashBalancing poo = new cashBalancing(); 
            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
            String tttt = sdf.format(d);

            SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
            String ddddd = sdf1.format(d);

            String addNote = this.jTextArea18.getText();
            String cashAMT = this.txt_search_text2.getText();

            System.out.println(addNote);
            if(addNote.equals("") || addNote.trim().isEmpty()){
                JOptionPane.showMessageDialog(pnl_quickBill, "Please Enter the Note.!","Cash Tray", JOptionPane.ERROR_MESSAGE);
                this.jTextArea18.requestFocusInWindow();
            }
            else if(cashAMT.equals(" ") || cashAMT.trim().isEmpty()){
                JOptionPane.showMessageDialog(pnl_quickBill, "Please Enter the Cash Amount.!","Cash Tray", JOptionPane.ERROR_MESSAGE);
                this.txt_search_text2.requestFocusInWindow();
            }
            else{
                double addAmt = Double.parseDouble(cashAMT);
                String trueee =  poo.addCreditedPayments(addNote, addAmt, ddddd, tttt, pnl_quickBill);
                if(trueee == null){
                    JOptionPane.showMessageDialog(pnl_quickBill, "Cash OUT Added Failed","Cash Tray", JOptionPane.ERROR_MESSAGE);
                }
                else{
                    JOptionPane.showMessageDialog(pnl_quickBill, "Cash OUT Successfully","Cash Tray", JOptionPane.INFORMATION_MESSAGE); 
                    this.jTextArea18.setText("");
                    this.txt_search_text2.setText("");
                }
                ResultSet rsyyp = poo.showCreditedDetailsByDate(ddddd);
                this.jTable27.setModel(DbUtils.resultSetToTableModel(rsyyp)); 
            }
        }
    }//GEN-LAST:event_jButton86KeyPressed

    private void jTable35MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable35MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable35MousePressed

    private void jButton107ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton107ActionPerformed
        items_add_to_bill opiuu = new items_add_to_bill();
        searchItems pissass = new searchItems();
        
        int selectedRow32122 = this.jTable35.getSelectedRow();
        int selectedRow321233 = this.jTable19.getSelectedRow();
        
        String billItemCode = this.jTable19.getModel().getValueAt(selectedRow321233, 0).toString();
        String retailPrice = this.jTable19.getModel().getValueAt(selectedRow321233, 5).toString();
        String itmCood = this.jTable19.getModel().getValueAt(selectedRow321233, 1).toString();
        String billSubItemID = this.jTable35.getModel().getValueAt(selectedRow32122, 0).toString();
        String snnnn = this.jTable35.getModel().getValueAt(selectedRow32122, 1).toString();
        
        String itmCode = pissass.getItemCodeBySubItemCode(snnnn);
        int userSelection1 = JOptionPane.showConfirmDialog(edit_edit_billed_Items,"Are you sure to delete this Item ?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
        if(userSelection1 == 0){
            if(selectedRow32122 == -1){
            JOptionPane.showMessageDialog(edit_edit_billed_Items, "Select a Item to Delete SN.!","Error",JOptionPane.ERROR_MESSAGE);
            }   
            else{
                boolean isItOk = opiuu.deleteBillSN(billSubItemID);

                if(isItOk){
                    
                    try {
                        String queryyy = "update sub_items set inStock=? where sn = ?";
                        PreparedStatement pstlu = conn.prepareStatement(queryyy);

                        pstlu.setString(1, "yes");
                        pstlu.setString(2, snnnn);
                        pstlu.executeUpdate();

                    }catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    try {
                        String queryy = "update items set qty=qty+1 where itm_code = ?";
                        PreparedStatement pstl = conn.prepareStatement(queryy);

                        pstl.setString(1, itmCode);      
                        pstl.executeUpdate();

                    }catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    try {
                        String queryy = "update bill_items set qty=qty-1 where bill_item_id = ?";
                        PreparedStatement pstl = conn.prepareStatement(queryy);

                        pstl.setString(1, billItemCode);      
                        pstl.executeUpdate();

                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    double rrrrrPrice1 = opiuu.getRetailPrice(billItemCode);

                    double wwwwwPrice1 = opiuu.getCostPrice(billItemCode);

                    int qqqqqty1 = opiuu.getQTY(billItemCode);

                    double NewValue1 = calculateBillItemValue(qqqqqty1,rrrrrPrice1);
                    double NewCostValue1 = calculateBillItemCostValue(qqqqqty1,wwwwwPrice1);

                    try {
                        String queryy = "update bill_items set value=?, costValue=? where bill_item_id = ?";
                        PreparedStatement pstl = conn.prepareStatement(queryy);

                        pstl.setDouble(1, NewValue1);
                        pstl.setDouble(2, NewCostValue1);
                        pstl.setString(3, billItemCode);
                        pstl.executeUpdate();

                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    //System.out.println(billItemCode);
                    String aaaaa = this.jLabel229.getText();
                    ResultSet rs = opiuu.getAddedItemsBy_bill_ID(aaaaa);
                    this.jTable19.setModel(DbUtils.resultSetToTableModel(rs));

                    double calculatedValue = opiuu.calculateTotal(aaaaa);
                    this.jTextField115.setText(String.valueOf(calculatedValue));
                    
                    double value = Double.parseDouble(retailPrice);
                    
                    Date d = new Date();
                    SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
                    String invoDate = sdf1.format(d);
                    SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
                    String tt = sdf.format(d);
                    
                    String noteee = "One ".concat(itmCood).concat(" Item Remove from ").concat(aaaaa).concat(" invoice.");
                    
                    cashBalancing lllk = new cashBalancing();
                    
                    lllk.addCreditedPayments(noteee, value, invoDate, tt, this);
                    setCashBalance();
                    
                    double discou = Double.parseDouble(this.jTextField117.getText());
                    this.jTextField118.setText(String.valueOf(calculatedValue - discou));

                    JOptionPane.showMessageDialog(edit_edit_billed_Items, "Item Deleted Successfully","Item Details", JOptionPane.INFORMATION_MESSAGE);

                    this.edit_edit_billed_Items.dispose();
                    
                    
                    String prodQTY = this.jTable19.getModel().getValueAt(selectedRow321233, 4).toString();
                    int IntProdQTY = Integer.parseInt(prodQTY);
                    
                    UpdateBillPrices();

                    
                    if(IntProdQTY == 0){
                        opiuu.deleteAddedBillItems(billItemCode);
                        ResultSet rss = opiuu.getAddedItemsBy_bill_ID(aaaaa);
                        this.jTable19.setModel(DbUtils.resultSetToTableModel(rss));
                        
                        UpdateBillPrices();
                    }
                        
                } 
            }
        }
    }//GEN-LAST:event_jButton107ActionPerformed

    private void jTable36MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable36MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable36MousePressed

    private void jButton108ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton108ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton108ActionPerformed

    private void txt_search_bill_itm1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search_bill_itm1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_search_bill_itm1KeyPressed

    private void jButton109MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton109MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton109MousePressed

    private void jButton109ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton109ActionPerformed
        searchItems kio = new searchItems();
        items_add_to_bill jjkkii2 = new items_add_to_bill();
        
        int selectedRow12 = this.tbl_addBillItems.getSelectedRow();
        
        if(selectedRow12 == -1){
            JOptionPane.showMessageDialog(this, "Select a Item to Add.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            String ittemmCoodde = this.tbl_addBillItems.getModel().getValueAt(selectedRow12, 0).toString();
            
            
            String itmCode ="";
            String name="";
            String warranty="";
            String w_price="";
            String r_price=this.txt_search_bill_itm2.getText();
            String type="";

            Date d = new Date();
            SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf1.format(d); 

            int qty,free,dis;
           try{
                ResultSet rsg = kio.getItemDetails(ittemmCoodde);
                while(rsg.next()){
                    itmCode = rsg.getString("itm_code");
                    name = rsg.getString("itm_name");
                    warranty = rsg.getString("warranty");   
                    w_price = rsg.getString("w_price");
                    //r_price = rsg.getString("r_price");
                    type = rsg.getString("type");              
                }
            qty = Integer.parseInt(this.txt_search_bill_itm1.getText());
            free = 0;
            dis = 0;
            int wwarranty = Integer.parseInt(warranty);
            double ww_price = Double.parseDouble(w_price);
            double rr_price = Double.parseDouble(r_price);
            String cashBalID = "no";
            String billID = jjkkii2.generateBill_id(this);
            double valu = calculateBillItemValue(qty,rr_price);
            double costValue = calculateBillItemCostValue(qty,ww_price);

            String billItemCode = jjkkii2.addItemsToBill(itmCode, name, wwarranty, qty, free, ww_price, dis, rr_price, date, valu, billID,costValue,cashBalID, itemsAdder);
            }
            catch (SQLException exa) {
                exa.printStackTrace();
                Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, exa);
            }
           
            String NextBillid = jjkkii2.generateBill_id(this);
            
            ResultSet rs = jjkkii2.getAddedItemsBy_bill_ID(NextBillid);
            this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));

            double calculatedValue = jjkkii2.calculateTotal(NextBillid);
            this.jTextField7.setText(String.valueOf(calculatedValue));
           
        }
    }//GEN-LAST:event_jButton109ActionPerformed

    private void jTextField142KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField142KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            userController usrg = new userController();
            boolean accessOK=usrg.validateAdminLoginDetails(this.jTextField142.getText(), "yes", adminLogin2);
            if(accessOK){
                items_add_to_bill hghhf = new items_add_to_bill();
                cashBalancing hyt = new cashBalancing();

                int selectedRow = this.jTable4.getSelectedRow();
                if(selectedRow == -1){
                    JOptionPane.showMessageDialog(this, "Pleace select a Invoice to Edit","Error",JOptionPane.ERROR_MESSAGE);
                }
                else{
                    this.editEnvoice.setSize(1280,720);
                    this.editEnvoice.setTitle("Edit Invoice");   
                    this.editEnvoice.setLocationRelativeTo(this);
                    this.editEnvoice.setVisible(true);

                    String invoIDD = this.jTable4.getModel().getValueAt(selectedRow, 0).toString();
                    String invodatee = this.jTable4.getModel().getValueAt(selectedRow, 1).toString();
                    String Customer = this.jTable4.getModel().getValueAt(selectedRow, 2).toString();
                    int dis = (int)jTable4.getValueAt(selectedRow, 5);
                    String total = String.valueOf(this.jTable4.getModel().getValueAt(selectedRow, 4).toString());
                    //int dis = this.jTable4.getModel().getValueAt(selectedRow, 5).toString();
                    String netAmt = String.valueOf(this.jTable4.getModel().getValueAt(selectedRow, 6).toString());
                    String emlo = this.jTable4.getModel().getValueAt(selectedRow, 3).toString();
                    String billDiscrip = String.valueOf(this.jTable4.getModel().getValueAt(selectedRow, 8).toString());


                    this.jLabel229.setText(invoIDD);
                    this.jTextField116.setText(Customer);
                    this.jTextField117.setText(Integer.toString(dis));
                    this.jTextField115.setText(total);
                    this.jTextField118.setText(netAmt);
                    this.jTextField133.setText(emlo);
                    this.jLabel246.setText(invodatee);
                    this.jTextArea13.setText(billDiscrip);


                    ResultSet rs3s = hghhf.getAddedItemsBy_bill_ID(invoIDD);
                    this.jTable19.setModel(DbUtils.resultSetToTableModel(rs3s));

                    this.jTextField126.setText("");
//                    this.jTextArea15.setText("");
//                    this.jTextField128.setText("");
//                    this.jTextField129.setText("");
//                    this.jTextField130.setText("");
//                    this.jTextField132.setText("");
                    this.jTextField131.setText("");

                }
                adminLogin2.dispose();
            }
            else{
                JOptionPane.showMessageDialog(adminLogin2,"Incorrect Password or No access !","Sign In Failed",JOptionPane.ERROR_MESSAGE);
            }
            this.jTextField142.setText("");
        }
    }//GEN-LAST:event_jTextField142KeyPressed

    private void jTable37MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable37MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable37MousePressed

    private void jTable37KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable37KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable37KeyPressed

    private void jTable38MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable38MousePressed
        storeItemData jukifg = new storeItemData();
        int selectedRow1777 = this.jTable38.getSelectedRow();
        
        String itmCorde = this.jTable38.getModel().getValueAt(selectedRow1777, 0).toString();
        
        ResultSet rs33334 = jukifg.getSubItemData(itmCorde);
        this.jTable37.setModel(DbUtils.resultSetToTableModel(rs33334));  
    }//GEN-LAST:event_jTable38MousePressed

    private void jTable38KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable38KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable38KeyPressed

    private void jButton110ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton110ActionPerformed
        searchItems kio = new searchItems();
        int qty,free,dis;
        String qytVAR = this.jTextField131.getText();    
        
        if(qytVAR.equals("")){
            JOptionPane.showMessageDialog(editEnvoice, "Item quantity cannot be Empty.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            qty = Integer.parseInt(qytVAR);
            items_add_to_bill jjkkii22 = new items_add_to_bill();

            int selectedRow120 = this.jTable38.getSelectedRow();
            
            if(selectedRow120 == -1){
                JOptionPane.showMessageDialog(this, "Select a Item to Add.!","Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                String ittemmCoodde = this.jTable38.getModel().getValueAt(selectedRow120, 0).toString();
                String SNthibeda = jjkkii22.checkSNAvailabilityOnItemsTable(ittemmCoodde);
                System.out.println(SNthibeda);
                if(SNthibeda.equals("")){
                    
                    String VARavlQTY = this.jTable38.getModel().getValueAt(selectedRow120, 3).toString();
                    int AVLqty = Integer.parseInt(VARavlQTY);
                    
                    if(AVLqty >=qty ){
                        String itmCode ="";
                        String name="";
                        String warranty="";
                        String w_price="";
                        String r_price="";
                        String type="";

                        Date d = new Date();
                        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
                        String date = sdf1.format(d); 


                        try{
                            ResultSet rsg = kio.getItemDetails(ittemmCoodde);
                            while(rsg.next()){
                                itmCode = rsg.getString("itm_code");
                                name = rsg.getString("itm_name");
                                warranty = rsg.getString("warranty");   
                                w_price = rsg.getString("w_price");
                                r_price = rsg.getString("r_price");
                                type = rsg.getString("type");              
                            }

                            free = 0;
                            dis = 0;
                            int wwarranty = Integer.parseInt(warranty);
                            double ww_price = Double.parseDouble(w_price);
                            double rr_price = Double.parseDouble(r_price);
                            String cashBalID = "no";
                            String billID = this.jLabel229.getText();
                            double valu = calculateBillItemValue(qty,rr_price);
                            double costValue = calculateBillItemCostValue(qty,ww_price);

                            String billItemCode = jjkkii22.addItemsToBill(itmCode, name, wwarranty, qty, free, ww_price, dis, rr_price, date, valu, billID,costValue,cashBalID, itemsAdder);
                            if(billItemCode != null){   
                                String NextBillidd = this.jLabel229.getText();

                                ResultSet rs20 = jjkkii22.getAddedItemsBy_bill_ID(NextBillidd);
                                this.jTable19.setModel(DbUtils.resultSetToTableModel(rs20));

                                double calculatedValue = jjkkii22.calculateTotal(NextBillidd);
                                this.jTextField115.setText(String.valueOf(calculatedValue));

                                double billDis = Double.parseDouble(this.jTextField117.getText());

                                this.jTextField118.setText(String.valueOf(calculatedValue-billDis));

                                try {
                                String query = "update items set qty = qty- ? where itm_code = ?";
                                PreparedStatement pst = conn.prepareStatement(query);

                                    pst.setInt(1, qty);
                                    pst.setString(2, ittemmCoodde);
                                    pst.executeUpdate();

                                //JOptionPane.showMessageDialog(this, "Invoice Successfull","Movie Details", JOptionPane.INFORMATION_MESSAGE);
                                } catch (SQLException ex) {
                                    ex.printStackTrace();
                                    Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                this.jTextField131.setText("");
                                
                                cashBalancing jju98o = new cashBalancing();
                        
                                String Note = qytVAR.concat(" - ").concat(itmCode).concat(" Items Add to ").concat(NextBillidd).concat(" Invoice.");
                                
                                SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
                                String ttttt = sdf.format(d);
                                
                                jju98o.addDebitePayments(Note, valu, date, ttttt, editEnvoice);
                                
                                UpdateBillPrices();
                            }
                        }
                        catch (SQLException exa) {
                            exa.printStackTrace();
                            Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, exa);
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(editEnvoice,"No Enough quantity to Add.!","Item Adding Fail",JOptionPane.ERROR_MESSAGE);
                    }
                    
                    
                }
                else if(SNthibeda==null){
                    JOptionPane.showMessageDialog(editEnvoice,"Data Base Error.!","Item Adding Fail",JOptionPane.ERROR_MESSAGE);
                }
                else{
                    JOptionPane.showMessageDialog(editEnvoice,"You can add only NON serial Items.!","Item Adding Fail",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        
    }//GEN-LAST:event_jButton110ActionPerformed

    private void jTextField126ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField126ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField126ActionPerformed

    private void jButton112ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton112ActionPerformed
        searchItems sfff = new searchItems();
        
        if(this.jComboBox11.getSelectedItem().toString().equals("Item Name")){
            ResultSet a = sfff.searchByItemName(this.jTextField126.getText().toString());
            System.out.println(a);
            this.jTable38.setModel(DbUtils.resultSetToTableModel(a));
        }
        else if(this.jComboBox11.getSelectedItem().toString().equals("Item Code")){
            ResultSet ab = sfff.searchByItemCode(this.jTextField126.getText().toString());
            this.jTable38.setModel(DbUtils.resultSetToTableModel(ab));
        }
        else if(this.jComboBox11.getSelectedItem().toString().equals("Category")){
            ResultSet aj = sfff.searchByItemType(this.jTextField126.getText().toString());
            this.jTable38.setModel(DbUtils.resultSetToTableModel(aj));
        }
    }//GEN-LAST:event_jButton112ActionPerformed

    private void jTextField136KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField136KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            userController usrg = new userController();
        
            boolean accessOK=usrg.validateAdminLoginDetails(this.jTextField136.getText(), "yes", adminLogin);
            if(accessOK){
                this.dailyCashBal.setSize(835,520);
                this.dailyCashBal.setTitle("Daily Cash Balance");   
                this.dailyCashBal.setLocationRelativeTo(this);
                this.dailyCashBal.setVisible(true);

                Date da = new Date();
                SimpleDateFormat sdf1g = new SimpleDateFormat("yyyy-MM-dd");
                String datrr = sdf1g.format(da);
                this.jLabel225.setText(datrr);

                cashBalancing las = new cashBalancing();

                ResultSet rsy = las.showDebitedDetailsByDate(datrr);
                this.jTable25.setModel(DbUtils.resultSetToTableModel(rsy));

                ResultSet rsyy = las.showCreditedDetailsByDate(datrr);
                this.jTable26.setModel(DbUtils.resultSetToTableModel(rsyy));

                double dddd = las.calculateDebitedMoney(datrr);
                double cccc = las.calculateCreditedMoney(datrr);

                this.jLabel221.setText(String.valueOf(dddd));
                this.jLabel222.setText(String.valueOf(cccc));

                this.jLabel213.setText(String.valueOf(dddd-cccc));
                setCashBalance();
                adminLogin.dispose();

            }
            else{
                JOptionPane.showMessageDialog(adminLogin,"Incorrect Password or No access !","Sign In Failed",JOptionPane.ERROR_MESSAGE);
            }
            this.jTextField136.setText("");
        }
    }//GEN-LAST:event_jTextField136KeyPressed

    private void jTextField141KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField141KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            userController usrg = new userController();
            boolean accessOK=usrg.validateAdminLoginDetails(this.jTextField141.getText(), "yes", adminLogin1);
            if(accessOK){
                userLogin hhhu = new userLogin();

                ResultSet rsyyy = hhhu.showAllUer();
                this.jTable29.setModel(DbUtils.resultSetToTableModel(rsyyy));

                this.jPanel10.setVisible(false);
                this.jPanel13.setVisible(false);
                this.jPanel14.setVisible(false);
                this.jPanel15.setVisible(false);
                this.jPanel16.setVisible(false);
                this.jPanel55.setVisible(false);
                this.jPanel56.setVisible(true);


                this.pnl_settings.setVisible(true);
                this.pnl_hr.setVisible(false);
                this.pnl_searchItm.setVisible(false);
                this.pnl_addItms.setVisible(false);
                this.pnl_billing.setVisible(false);
                this.pnl_billingSumm.setVisible(false);
                this.pnl_barcode.setVisible(false);
                this.pnl_quickBill.setVisible(false);


                adminLogin1.dispose();
            }
            else{
                JOptionPane.showMessageDialog(adminLogin1,"Incorrect Password or No access !","Sign In Failed",JOptionPane.ERROR_MESSAGE);
            }
            this.jTextField141.setText("");
        }
    }//GEN-LAST:event_jTextField141KeyPressed

    private void jTextField126KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField126KeyPressed
        storeItemData juki = new storeItemData();
        if(evt.getKeyCode() == 10){
            jTextField126.requestFocus();
        }
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            searchItems st = new searchItems();
            ResultSet abb = st.searchByItemCode(this.jTextField126.getText().toString());
            this.jTable38.setModel(DbUtils.resultSetToTableModel(abb));
            
            if(abb!= null){
                String SearchedItmCode = st.getItemCodeBySubItemCode(this.jTextField126.getText().toString());
                ResultSet rs333 = juki.getSubItemData(SearchedItmCode);
                this.jTable37.setModel(DbUtils.resultSetToTableModel(rs333));
            }
        }
    }//GEN-LAST:event_jTextField126KeyPressed

    private void jButton111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton111ActionPerformed
        items_add_to_bill jjkkii22 = new items_add_to_bill();
        searchItems pissaa = new searchItems(); 
        
        Date dd = new Date();
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String date4 = sdf1.format(dd); 
        
        SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
        String ttttt4 = sdf.format(dd);
        
        //String selectedSN = this.txt_search_bill_itm.getText();
        
        int selectedRow1237890 = this.jTable37.getSelectedRow();
        
        String selectedSN = this.jTable37.getModel().getValueAt(selectedRow1237890, 1).toString();
        String status = jjkkii22.getItemStatus(selectedSN);
        
        if(selectedRow1237890 == -1){
            JOptionPane.showMessageDialog(editEnvoice, "Select a Item to ADD.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            
            if(status.equals("no")){
            JOptionPane.showMessageDialog(editEnvoice, "This "+selectedSN+" Item has already been added.!","Database Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                String SearchedItmName = pissaa.getItemCodeBySubItemName(selectedSN);

                String SearchedItmCode = pissaa.getItemCodeBySubItemCode(selectedSN);

                String NextBillid = this.jLabel229.getText();

                String SavedItemName = jjkkii22.getItemNameFromBillItemTable(SearchedItmCode,NextBillid);

                if(SearchedItmName.equals(SavedItemName)){
                    String BillItemID = jjkkii22.getBillItemIDFromBillItemTable(SearchedItmCode,NextBillid);

                    String bbbbbbbbbd = jjkkii22.addBillSubItems(selectedSN, BillItemID, editEnvoice);

                    if(bbbbbbbbbd != null){
                       try {
                        String queryy = "update bill_items set qty=qty+1 where bill_item_id = ?";
                        PreparedStatement pstl = conn.prepareStatement(queryy);

                        pstl.setString(1, BillItemID);      
                        pstl.executeUpdate();

                        } catch (SQLException ex) {
                            ex.printStackTrace();
                            Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                        }
                       try {
                        String query = "update items set qty = qty- ? where itm_code = ?";
                        PreparedStatement pst = conn.prepareStatement(query);

                        pst.setInt(1, 1);
                        pst.setString(2, SearchedItmCode);
                        pst.executeUpdate();

                                //JOptionPane.showMessageDialog(this, "Invoice Successfull","Movie Details", JOptionPane.INFORMATION_MESSAGE);
                        } catch (SQLException ex) {
                                ex.printStackTrace();
                                Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                            }


                        try {
                            String queryyy = "update sub_items set inStock=? where sn = ?";
                            PreparedStatement pstlu = conn.prepareStatement(queryyy);

                            pstlu.setString(1, "no");
                            pstlu.setString(2, selectedSN);
                            pstlu.executeUpdate();

                         } catch (SQLException ex) {
                            ex.printStackTrace();
                            Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                         }

                        double rrrrrPrice = jjkkii22.getRetailPrice(BillItemID);
                        
                        double wwwwwPrice = jjkkii22.getCostPrice(BillItemID);
                        
                        int qqqqqty = jjkkii22.getQTY(BillItemID);
                        
                        double NewValue = calculateBillItemValue(qqqqqty,rrrrrPrice);
                        double NewCostValue = calculateBillItemCostValue(qqqqqty,wwwwwPrice);

                        try {
                            String queryy = "update bill_items set value=?, costValue=? where bill_item_id = ?";
                            PreparedStatement pstl = conn.prepareStatement(queryy);

                            pstl.setDouble(1, NewValue);
                            pstl.setDouble(2, NewCostValue);
                            pstl.setString(3, BillItemID);
                            pstl.executeUpdate();

                        } catch (SQLException ex) {
                            ex.printStackTrace();
                            Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        cashBalancing jju98d1 = new cashBalancing();
                        
                        String Note = "One ".concat(SearchedItmCode).concat(" Item Add to ").concat(NextBillid).concat(" Invoice.");         
                        jju98d1.addDebitePayments(Note, rrrrrPrice, date4, ttttt4, editEnvoice);
                        
                        storeItemData jukifg = new storeItemData(); 
                        ResultSet rs33334h = jukifg.getSubItemData(SearchedItmCode);
                        this.jTable37.setModel(DbUtils.resultSetToTableModel(rs33334h)); 
                        
                    }


                    ResultSet rs = jjkkii22.getAddedItemsBy_bill_ID(NextBillid);
                    this.jTable19.setModel(DbUtils.resultSetToTableModel(rs));

                    double calculatedValuee = jjkkii22.calculateTotal(NextBillid);
                    this.jTextField115.setText(String.valueOf(calculatedValuee));

                    this.jTextField126.setText("");
                    this.jTextField126.requestFocusInWindow();

                    double billDiss = Double.parseDouble(this.jTextField117.getText());

                    this.jTextField118.setText(String.valueOf(calculatedValuee-billDiss));
                    UpdateBillPrices();
                    
                }
                else{
                    String itmCode ="";
                    String name="";
                    String warranty="";
                    String w_price="";
                    String r_price="";
                    String type="";

                    int qty,free,dis;
                    try{
                        ResultSet rsg = jjkkii22.getItemDetails(selectedSN);
                        while(rsg.next()){
                            itmCode = rsg.getString("itm_code");
                            name = rsg.getString("itm_name");
                            warranty = rsg.getString("warranty");   
                            w_price = rsg.getString("w_price");
                            r_price = rsg.getString("r_price");
                            type = rsg.getString("type");              
                        }
                    qty = 1;
                    free = 0;
                    dis = 0;
                    int wwarranty = Integer.parseInt(warranty);
                    double ww_price = Double.parseDouble(w_price);
                    double rr_price = Double.parseDouble(r_price);
                    String cashBalID = "no";
                    String billID = this.jLabel229.getText();
                    double valu = calculateBillItemValue(qty,rr_price);
                    double costValue = calculateBillItemCostValue(qty,ww_price);

                    String billItemCode = jjkkii22.addItemsToBill(itmCode, name, wwarranty, qty, free, ww_price, dis, rr_price, date4, valu, billID,costValue,cashBalID, itemsAdder);

                    if(billItemCode != null){
                        jjkkii22.addBillSubItems(selectedSN, billItemCode, itemsAdder);
                        try {
                            String queryyy = "update sub_items set inStock=? where sn = ?";
                            PreparedStatement pstlu = conn.prepareStatement(queryyy);

                            pstlu.setString(1, "no");
                            pstlu.setString(2, selectedSN);
                            pstlu.executeUpdate();

                         } catch (SQLException ex) {
                            ex.printStackTrace();
                            Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                         }
                        try {
                        String query = "update items set qty = qty- ? where itm_code = ?";
                        PreparedStatement pst = conn.prepareStatement(query);

                        pst.setInt(1, 1);
                        pst.setString(2, SearchedItmCode);
                        pst.executeUpdate();

                                //JOptionPane.showMessageDialog(this, "Invoice Successfull","Movie Details", JOptionPane.INFORMATION_MESSAGE);
                        } catch (SQLException ex) {
                                ex.printStackTrace();
                                Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        cashBalancing jju98d1 = new cashBalancing();
                        
                        String Note = "One ".concat(SearchedItmCode).concat(" Item Add to ").concat(NextBillid).concat(" Invoice.");         
                        jju98d1.addDebitePayments(Note, rr_price, date4, ttttt4, editEnvoice);
                        
                        double tot = Double.parseDouble(this.jTextField115.getText());
                        int disd = Integer.parseInt(this.jTextField117.getText());
                        double netAmt = Double.parseDouble(this.jTextField118.getText());
                        int itmCountd = jTable19.getRowCount();
                        jjkkii22.updateBillWithPrices(tot, disd, netAmt, itmCountd, NextBillid, editEnvoice);
                        
                        storeItemData jukifg = new storeItemData(); 
                        ResultSet rs33334h = jukifg.getSubItemData(SearchedItmCode);
                        this.jTable37.setModel(DbUtils.resultSetToTableModel(rs33334h)); 
                        
                    }
                    
                    else{
                        JOptionPane.showMessageDialog(this, "Date Base Error.!","Error",JOptionPane.ERROR_MESSAGE);
                    }
                    }
                    catch(Exception e){
                        //JOptionPane.showMessageDialog(this, "Cannot Save Movie Details!","Error",JOptionPane.ERROR_MESSAGE);
                    }

                    ResultSet rs = jjkkii22.getAddedItemsBy_bill_ID(NextBillid);
                    this.jTable19.setModel(DbUtils.resultSetToTableModel(rs));

                    double calculatedValuee = jjkkii22.calculateTotal(NextBillid);
                    this.jTextField115.setText(String.valueOf(calculatedValuee));

                    this.jTextField126.setText("");
                    this.jTextField126.requestFocusInWindow();

                    double billDiss = Double.parseDouble(this.jTextField117.getText());

                    this.jTextField118.setText(String.valueOf(calculatedValuee-billDiss));
                    
                    UpdateBillPrices();
                }
            }
        }
    }//GEN-LAST:event_jButton111ActionPerformed

    private void jButton113ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton113ActionPerformed
        items_add_to_bill iii = new items_add_to_bill(); 
        String billIDD = this.jLabel229.getText();
         
        int selectedRow7b = this.jTable19.getSelectedRow();   
        if(selectedRow7b == -1){
            JOptionPane.showMessageDialog(editEnvoice, "Select a Item to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            String billItemCodeh = this.jTable19.getModel().getValueAt(selectedRow7b, 0).toString();
            String strItemCode = this.jTable19.getModel().getValueAt(selectedRow7b, 1).toString();
            String qyyt = this.jTable19.getModel().getValueAt(selectedRow7b, 4).toString();
            String r_pprice = this.jTable19.getModel().getValueAt(selectedRow7b, 7).toString();
            int INTqty = Integer.parseInt(qyyt);
            String aaa = iii.checkSNAvailability(billItemCodeh);
            if(aaa.equals("")){
                int userSelection = JOptionPane.showConfirmDialog(editEnvoice,"Are you sure to delete this Item?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
                if(userSelection == 0){  
                    boolean gg = iii.deleteAddedBillItems(billItemCodeh);
                    
                    if(gg){
                        try {
                            String query = "update items set qty = qty+ ? where itm_code = ?";
                            PreparedStatement pst = conn.prepareStatement(query);

                            pst.setInt(1, INTqty);
                            pst.setString(2, strItemCode);
                            pst.executeUpdate();
                               
                        } catch (SQLException ex) {
                            ex.printStackTrace();
                            Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        
                        ResultSet rs20 = iii.getAddedItemsBy_bill_ID(billIDD);
                        this.jTable19.setModel(DbUtils.resultSetToTableModel(rs20));

                        double calculatedValue = iii.calculateTotal(billIDD);
                        this.jTextField115.setText(String.valueOf(calculatedValue));

                        double billDis = Double.parseDouble(this.jTextField117.getText());

                        this.jTextField118.setText(String.valueOf(calculatedValue-billDis));
 
                        double dr_price = Double.parseDouble(r_pprice);
                        
                        cashBalancing jju98 = new cashBalancing();
                        
                        String Note = qyyt.concat(" - ").concat(strItemCode).concat(" Items remove from ").concat(billIDD).concat(" Invoice.");
                        Date d = new Date();
                        SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
                        String ttttt = sdf.format(d);

                        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
                        String dddddd = sdf1.format(d);
                        jju98.addCreditedPayments(Note, dr_price, dddddd, ttttt, editEnvoice);
                        
                        UpdateBillPrices();
                        
                       
                                //bill total eka update karanna    
                    }

                }
            }
            else{
                //JOptionPane.showMessageDialog(editEnvoice, "Cannot delete this Item.!","Error",JOptionPane.ERROR_MESSAGE);
                items_add_to_bill jiu87d = new items_add_to_bill();
                int selectedRow321123d = this.jTable19.getSelectedRow();

                if(selectedRow321123d == -1){
                    JOptionPane.showMessageDialog(editEnvoice, "Select a Product to Edit.!","Error",JOptionPane.ERROR_MESSAGE);
                }
                else{
                    this.edit_edit_billed_Items.setSize(340,300);
                    this.edit_edit_billed_Items.setTitle("Edit Bill Items");   
                    this.edit_edit_billed_Items.setLocationRelativeTo(this);
                    this.edit_edit_billed_Items.setVisible(true);

                    String ProductItmCode = this.jTable19.getModel().getValueAt(selectedRow321123d, 0).toString();

                    ResultSet jjuyy = jiu87d.getSubItemDataFromBill(ProductItmCode);
                    this.jTable35.setModel(DbUtils.resultSetToTableModel(jjuyy));
                } 
            }           
        }      
    }//GEN-LAST:event_jButton113ActionPerformed

    private void txt_search_bill_itm2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search_bill_itm2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_search_bill_itm2KeyPressed

    private void jTextField132ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField132ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField132ActionPerformed

    private void jTextField132KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField132KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField132KeyTyped

    private void tbl_items_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_items_searchMouseClicked
        
    }//GEN-LAST:event_tbl_items_searchMouseClicked

    private void jButton1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jButton1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1AncestorAdded

    private void jButton115ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton115ActionPerformed
        userController usrg = new userController();
        boolean accessOK=usrg.validateAdminLoginDetails(this.jTextField145.getText(), "yes", adminLogin_item_edit);
        if(accessOK){
            adminLogin_item_edit.dispose();
            int selectedRow = this.tbl_items_search.getSelectedRow();
            if(selectedRow == -1){
                JOptionPane.showMessageDialog(this, "Pleace select a Item to edit details!","Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                this.itemEdit.setSize(560,430);
                this.itemEdit.setTitle("Edit Item Details");   
                this.itemEdit.setLocationRelativeTo(this);
                this.itemEdit.setVisible(true);


                String itemID = this.tbl_items_search.getModel().getValueAt(selectedRow, 0).toString();
                String itmCode, name, w_price, warranty, r_price, company, expDate, qty, type;
                searchItems sd = new searchItems();
                try{
                    ResultSet rs = sd.getItemDetails(itemID);
                    while(rs.next()){
                        itmCode = rs.getString("itm_code");
                        name = rs.getString("itm_name");
                        warranty = rs.getString("warranty");
                        qty = rs.getString("qty");
                        w_price = rs.getString("w_price");
                        r_price = rs.getString("r_price");
                        Date = rs.getString("date");
                        type = rs.getString("type");

                        this.txt_edt_company.setText(itmCode);
                        this.txt_edt_itemName.setText(name);
                        this.txt_edt_packSize.setText(warranty);
                        this.txt_edt_qty.setText(qty);
                        this.txt_edt_wPrice.setText(w_price);
                        this.txt_edt_rPrice.setText(r_price);
                        this.com_box_searchTyp2.setSelectedItem(type);

                        try{
                            Date stored_date = new SimpleDateFormat("yyyy-MM-DD").parse(Date);
                            this.dChooser_edt_expDate.setDate(stored_date);
                        }
                        catch(Exception ex){  
                        }
                    }
                }
                catch(Exception e){
                    //JOptionPane.showMessageDialog(this, "Cannot Save Movie Details!","Error",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(adminLogin_item_edit,"Incorrect Password or No access !","Sign In Failed",JOptionPane.ERROR_MESSAGE);
        }
        this.jTextField145.setText("");
    }//GEN-LAST:event_jButton115ActionPerformed

    private void jButton116ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton116ActionPerformed
        userController usrg = new userController();
        boolean accessOK=usrg.validateAdminLoginDetails(this.jTextField147.getText(), "yes", adminLogin1);
        if(accessOK){
            adminLogin_item_delete.dispose();
            int selectedRow = this.tbl_items_search.getSelectedRow();
        
            if(selectedRow == -1){
                JOptionPane.showMessageDialog(this, "Select a Item to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                int userSelection = JOptionPane.showConfirmDialog(this,"Are you sure to delete this Item?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
                if(userSelection == 0){
                    searchItems s = new searchItems();
                    String itemCode = this.tbl_items_search.getModel().getValueAt(selectedRow, 0).toString();
                    s.deleteItemCode(itemCode);
                    ResultSet rs = s.showItemDetails();
                    this.tbl_items_search.setModel(DbUtils.resultSetToTableModel(rs));
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(adminLogin_item_delete,"Incorrect Password or No access !","Sign In Failed",JOptionPane.ERROR_MESSAGE);
        }
        this.jTextField147.setText("");
    }//GEN-LAST:event_jButton116ActionPerformed

    private void jButton117ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton117ActionPerformed
        userController usrg = new userController();
        boolean accessOK=usrg.validateAdminLoginDetails(this.jTextField148.getText(), "yes", adminLogin_item_delete);
        if(accessOK){
            adminLogin_item_delete_sn.dispose();
            searchItems sf = new searchItems();
            storeItemData juio = new storeItemData();
            int selectedRowjjf = this.tbl_items_search.getSelectedRow();
            int selectedRowjj = this.tbl_items_search1.getSelectedRow();

            if(selectedRowjjf == -1){
                JOptionPane.showMessageDialog(this, "Select a Item to Delete SN.!","Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                if(selectedRowjj == -1){
                JOptionPane.showMessageDialog(this, "Select a SN to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
                }
                else{
                    int userSelectionn = JOptionPane.showConfirmDialog(null,"Are you sure to delete this SN?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
                    if(userSelectionn == 0){

                        String SNid = this.tbl_items_search1.getModel().getValueAt(selectedRowjj, 0).toString();
                        String avability = this.tbl_items_search1.getModel().getValueAt(selectedRowjj, 2).toString();
                        boolean gg = sf.deleteSN(SNid);

                        if(gg){
                            String itmCode = this.tbl_items_search.getModel().getValueAt(selectedRowjjf, 0).toString();
                            ResultSet rs111 = juio.getAllSubItemData(itmCode);
                            this.tbl_items_search1.setModel(DbUtils.resultSetToTableModel(rs111));

                            // upadate the product qty
                            if(avability.equals("yes")){
                                try {
                                String queryyf = "update items set qty=qty-1 where itm_code = ?";
                                PreparedStatement pstlh = conn.prepareStatement(queryyf);

                                pstlh.setString(1, itmCode);      
                                pstlh.executeUpdate();

                                } catch (SQLException ex) {
                                    ex.printStackTrace();
                                    Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                            int qtttty=0;
                            try{
                                Statement stmnt = conn.createStatement();
                                ResultSet rss10 = stmnt.executeQuery("select qty from items where itm_code='"+itmCode+"'");
                                while(rss10.next()){
                                    qtttty = rss10.getInt("qty");    
                                }
                            }
                            catch(Exception e){
                                e.printStackTrace();
                            }
                            DefaultTableModel model = (DefaultTableModel) tbl_items_search.getModel();
                            model.setValueAt(qtttty, tbl_items_search.getSelectedRow(), 3);
                            // update item table


                            // auto select same table row selected befour deletion
                        }

                    }
                }
            }
            
            
        }
        else{
            JOptionPane.showMessageDialog(adminLogin_item_delete_sn,"Incorrect Password or No access !","Sign In Failed",JOptionPane.ERROR_MESSAGE);
        }
        this.jTextField148.setText("");
    }//GEN-LAST:event_jButton117ActionPerformed

    private void jTextField145KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField145KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            userController usrg = new userController();
            boolean accessOK=usrg.validateAdminLoginDetails(this.jTextField145.getText(), "yes", adminLogin_item_edit);
            if(accessOK){
                adminLogin_item_edit.dispose();
                int selectedRow = this.tbl_items_search.getSelectedRow();
                if(selectedRow == -1){
                    JOptionPane.showMessageDialog(this, "Pleace select a Item to edit details!","Error",JOptionPane.ERROR_MESSAGE);
                }
                else{
                    this.itemEdit.setSize(560,430);
                    this.itemEdit.setTitle("Edit Item Details");   
                    this.itemEdit.setLocationRelativeTo(this);
                    this.itemEdit.setVisible(true);


                    String itemID = this.tbl_items_search.getModel().getValueAt(selectedRow, 0).toString();
                    String itmCode, name, w_price, warranty, r_price, company, expDate, qty, type;
                    searchItems sd = new searchItems();
                    try{
                        ResultSet rs = sd.getItemDetails(itemID);
                        while(rs.next()){
                            itmCode = rs.getString("itm_code");
                            name = rs.getString("itm_name");
                            warranty = rs.getString("warranty");
                            qty = rs.getString("qty");
                            w_price = rs.getString("w_price");
                            r_price = rs.getString("r_price");
                            Date = rs.getString("date");
                            type = rs.getString("type");

                            this.txt_edt_company.setText(itmCode);
                            this.txt_edt_itemName.setText(name);
                            this.txt_edt_packSize.setText(warranty);
                            this.txt_edt_qty.setText(qty);
                            this.txt_edt_wPrice.setText(w_price);
                            this.txt_edt_rPrice.setText(r_price);
                            this.com_box_searchTyp2.setSelectedItem(type);

                            try{
                                Date stored_date = new SimpleDateFormat("yyyy-MM-DD").parse(Date);
                                this.dChooser_edt_expDate.setDate(stored_date);
                            }
                            catch(Exception ex){  
                            }
                        }
                    }
                    catch(Exception e){
                        //JOptionPane.showMessageDialog(this, "Cannot Save Movie Details!","Error",JOptionPane.ERROR_MESSAGE);
                    }
                }

                
            }
            else{
                JOptionPane.showMessageDialog(adminLogin_item_edit,"Incorrect Password or No access !","Sign In Failed",JOptionPane.ERROR_MESSAGE);
            }
            this.jTextField145.setText("");
        }
    }//GEN-LAST:event_jTextField145KeyPressed

    private void jTextField147KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField147KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            userController usrg = new userController();
            boolean accessOK=usrg.validateAdminLoginDetails(this.jTextField147.getText(), "yes", adminLogin1);
            if(accessOK){
                adminLogin_item_delete.dispose();
                int selectedRow = this.tbl_items_search.getSelectedRow();

                if(selectedRow == -1){
                    JOptionPane.showMessageDialog(this, "Select a Item to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
                }
                else{
                    int userSelection = JOptionPane.showConfirmDialog(this,"Are you sure to delete this Item?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
                    if(userSelection == 0){
                        searchItems s = new searchItems();
                        String itemCode = this.tbl_items_search.getModel().getValueAt(selectedRow, 0).toString();
                        s.deleteItemCode(itemCode);
                        ResultSet rs = s.showItemDetails();
                        this.tbl_items_search.setModel(DbUtils.resultSetToTableModel(rs));
                    }
                }
            }
            else{
                JOptionPane.showMessageDialog(adminLogin_item_delete,"Incorrect Password or No access !","Sign In Failed",JOptionPane.ERROR_MESSAGE);
            }
            this.jTextField147.setText("");
        }
    }//GEN-LAST:event_jTextField147KeyPressed

    private void jTextField148KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField148KeyPressed
       if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            userController usrg = new userController();
            boolean accessOK=usrg.validateAdminLoginDetails(this.jTextField148.getText(), "yes", adminLogin_item_delete);
            if(accessOK){
                adminLogin_item_delete_sn.dispose();
                searchItems sf = new searchItems();
                storeItemData juio = new storeItemData();
                int selectedRowjjf = this.tbl_items_search.getSelectedRow();
                int selectedRowjj = this.tbl_items_search1.getSelectedRow();

                if(selectedRowjjf == -1){
                    JOptionPane.showMessageDialog(this, "Select a Item to Delete SN.!","Error",JOptionPane.ERROR_MESSAGE);
                }
                else{
                    if(selectedRowjj == -1){
                    JOptionPane.showMessageDialog(this, "Select a SN to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
                    }
                    else{
                        int userSelectionn = JOptionPane.showConfirmDialog(null,"Are you sure to delete this SN?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
                        if(userSelectionn == 0){

                            String SNid = this.tbl_items_search1.getModel().getValueAt(selectedRowjj, 0).toString();
                            String avability = this.tbl_items_search1.getModel().getValueAt(selectedRowjj, 2).toString();
                            boolean gg = sf.deleteSN(SNid);

                            if(gg){
                                String itmCode = this.tbl_items_search.getModel().getValueAt(selectedRowjjf, 0).toString();
                                ResultSet rs111 = juio.getAllSubItemData(itmCode);
                                this.tbl_items_search1.setModel(DbUtils.resultSetToTableModel(rs111));

                                // upadate the product qty
                                if(avability.equals("yes")){
                                    try {
                                    String queryyf = "update items set qty=qty-1 where itm_code = ?";
                                    PreparedStatement pstlh = conn.prepareStatement(queryyf);

                                    pstlh.setString(1, itmCode);      
                                    pstlh.executeUpdate();

                                    } catch (SQLException ex) {
                                        ex.printStackTrace();
                                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                }
                                int qtttty=0;
                                try{
                                    Statement stmnt = conn.createStatement();
                                    ResultSet rss10 = stmnt.executeQuery("select qty from items where itm_code='"+itmCode+"'");
                                    while(rss10.next()){
                                        qtttty = rss10.getInt("qty");    
                                    }
                                }
                                catch(Exception e){
                                    e.printStackTrace();
                                }
                                DefaultTableModel model = (DefaultTableModel) tbl_items_search.getModel();
                                model.setValueAt(qtttty, tbl_items_search.getSelectedRow(), 3);
                                // update item table


                                // auto select same table row selected befour deletion
                            }

                        }
                    }
                }


            }
            else{
                JOptionPane.showMessageDialog(adminLogin_item_delete_sn,"Incorrect Password or No access !","Sign In Failed",JOptionPane.ERROR_MESSAGE);
            }
            this.jTextField148.setText("");
       }
    }//GEN-LAST:event_jTextField148KeyPressed

    private void txt_add_qty2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_qty2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_add_qty2KeyTyped

    private void edit_billed_ItemsWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_edit_billed_ItemsWindowClosed
        items_add_to_bill opiu1 = new items_add_to_bill();
        String aaaa = this.jLabel47.getText();
        ResultSet rs = opiu1.getAddedItemsBy_bill_ID(aaaa);
        this.jTable3.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_edit_billed_ItemsWindowClosed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jTextField81ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTextField81ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField81ComponentAdded

    private void jTextField81HierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jTextField81HierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField81HierarchyChanged

    private void jTextField81AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTextField81AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField81AncestorAdded

    private void jTextField81InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextField81InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField81InputMethodTextChanged

    private void jTextField81ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField81ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField81ActionPerformed

    private void jTable14MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable14MousePressed
        int selectedRow124d = this.jTable14.getSelectedRow();
        
        
            String custIDDd = this.jTable14.getModel().getValueAt(selectedRow124d, 0).toString();
            this.jTextField67.setText(custIDDd);
    }//GEN-LAST:event_jTable14MousePressed

    private void jTable39MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable39MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable39MousePressed

    private void jButton118ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton118ActionPerformed
        items_add_to_bill hghhf = new items_add_to_bill();
        searchItems dddd = new searchItems();
        cashBalancing ggg = new cashBalancing();
        String billIdd = this.jLabel157.getText();
        
        int selectedRow011 = this.jTable39.getSelectedRow();
        int selectedRow21 = this.jTable15.getSelectedRow();
        
        if(selectedRow011 == -1){
            JOptionPane.showMessageDialog(edit_edit_billed_Items2, "Pleace select an Serial to Warranty!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{   
            String itemCodeee = this.jTable15.getModel().getValueAt(selectedRow21, 1).toString();
            String serial = this.jTable39.getModel().getValueAt(selectedRow011, 1).toString();
 
            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
            String tt = sdf.format(d);


            SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
            String day = sdf1.format(d);
            
            String itemName = dddd.getItemNameByItemCode(itemCodeee);
        
            
            
            String notee = "SN- ".concat(serial).concat(" of ").concat(itemName).concat(" item warranty. Date- ").concat(day);
            
            
            int WarrantyMonths = parseInt(this.jTextField80.getText());
            String claim = "no";
            String itmbillDate = this.jTable15.getModel().getValueAt(selectedRow21, 6).toString();
            
            String isItOkay = ggg.addWarrantyItems(notee, itmbillDate, WarrantyMonths, day, billIdd, claim,serial, edit_edit_billed_Items2);
            
            if(!isItOkay.equals(null)){
                JOptionPane.showMessageDialog(Warranty, "Save Warranty Item Successfully","Warranty Details", JOptionPane.INFORMATION_MESSAGE);
                
                String FullNote = getAllWarrantyNotices(billIdd); 
                updateInvoiceDiscriptionForWarranty(FullNote, billIdd);
                
                //update main bill discription
                
                updateInvoiceDiscription(billIdd);
                
                String hhh = ggg.getInvoiceDis(billIdd);
                
                this.jTextArea5.setText(hhh);
                
                ResultSet rs99dg = ggg.getAllNonClaimedWarranties();
                this.jTable16.setModel(DbUtils.resultSetToTableModel(rs99dg));
            }
        }
        
        ResultSet rs99 = ggg.getAllNonClaimedWarranties();
        this.jTable16.setModel(DbUtils.resultSetToTableModel(rs99));
    }//GEN-LAST:event_jButton118ActionPerformed

    private void jButton106ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton106ActionPerformed
        cashBalancing jjuu = new cashBalancing();

        ResultSet rs997 = jjuu.getAllNonClaimedWarrantiesByInvoice(this.jTextField78.getText());
        this.jTable16.setModel(DbUtils.resultSetToTableModel(rs997));
    }//GEN-LAST:event_jButton106ActionPerformed

    private void jButton71ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton71ActionPerformed
        cashBalancing lloo = new cashBalancing();
        int selectedRow9456d = this.jTable16.getSelectedRow();

        if(selectedRow9456d == -1){
            JOptionPane.showMessageDialog(Warranty, "Select a Warranty to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{

            int userSelection = JOptionPane.showConfirmDialog(Warranty,"Are you sure.! You want to delete this warranty item ?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if(userSelection == 0){

                String warrantyItemCode = this.jTable16.getModel().getValueAt(selectedRow9456d, 0).toString();
                String warrantyNote = this.jTable16.getModel().getValueAt(selectedRow9456d, 1).toString();
                String itemSireal = this.jTable16.getModel().getValueAt(selectedRow9456d, 6).toString();
                String invoID = this.jTable16.getModel().getValueAt(selectedRow9456d, 5).toString();
                //iii1.deleteAddedBillItems(billItemCode);

                String wDis = lloo.getInvoiceWarrantyDiscription(invoID);

                String newWarrantyDis = wDis.replaceAll(warrantyNote, "");
                String newNewWarrantyDis = newWarrantyDis.replaceAll("\n", "");

                lloo.UpdateSerialDiscription(invoID, newNewWarrantyDis);

                lloo.deleteWarrantyItem(warrantyItemCode);
                String kkG = updateInvoiceDiscription(invoID);

                if(kkG==null){
                    ResultSet rs99dd = lloo.getAllNonClaimedWarranties();
                    this.jTable16.setModel(DbUtils.resultSetToTableModel(rs99dd));
                }
                else{
                    JOptionPane.showMessageDialog(Warranty, "Selected Warranty Item deleted Successfully","Warranty Details", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jButton71ActionPerformed

    private void jTextField78ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField78ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField78ActionPerformed

    private void jCheckBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox12ActionPerformed
        cashBalancing gggu = new cashBalancing();
        if(jCheckBox12.isSelected()){
            ResultSet rs993 = gggu.getAllClaimedWarranties();
            this.jTable16.setModel(DbUtils.resultSetToTableModel(rs993));
        }
        else{
            ResultSet rs994 = gggu.getAllNonClaimedWarranties();
            this.jTable16.setModel(DbUtils.resultSetToTableModel(rs994));
        }
    }//GEN-LAST:event_jCheckBox12ActionPerformed

    private void jButton59ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton59ActionPerformed
        cashBalancing gggg = new cashBalancing();
        billSearch kkii = new billSearch();

        Date d = new Date();
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String dat = sdf1.format(d);

        int selectedRow011 = this.jTable16.getSelectedRow();

        if(selectedRow011 == -1){
            JOptionPane.showMessageDialog(Warranty, "Pleace select one to claim WARRANTY!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            String wCodee = this.jTable16.getModel().getValueAt(selectedRow011, 0).toString();
            String WarrantySN = this.jTable16.getModel().getValueAt(selectedRow011, 6).toString();
            String invoID = this.jTable16.getModel().getValueAt(selectedRow011, 5).toString();
            String invoType = kkii.getBillTypeByBillID(invoID);
            System.out.println(invoType);
            System.out.println(invoID);
            String notee = " --> Claimed By Same Item. Date - ".concat(dat);
            try {
                String queryyyd = "update warranty set claimedSerial=?, notee=CONCAT( notee, ?), claim=? where wCode = ?";
                PreparedStatement pstluf = conn.prepareStatement(queryyyd);

                pstluf.setString(1, "Claimed by same item");
                pstluf.setString(2, notee);
                pstluf.setString(3, "yes");
                pstluf.setString(4, wCodee);
                pstluf.executeUpdate();

            } catch (SQLException ex) {
                ex.printStackTrace();
            }

            try{
                String SQL= "insert into warranty_claims(warrantyItemId, Note, serialNumber) values(?,?,?)";

                PreparedStatement pstf = conn.prepareStatement(SQL);
                pstf.setString(1, wCodee);
                pstf.setString(2, notee);
                pstf.setString(3, WarrantySN);

                pstf.execute();
            }
            catch(Exception ed){
                ed.printStackTrace();
            }

            String FullNoted = getAllWarrantyNotices(invoID);
            updateInvoiceDiscriptionForWarranty(FullNoted, invoID);
            updateInvoiceDiscription(invoID);

            this.Warranty.dispose();

            if(invoType.equals("Cash")){
                HashMap ab = new HashMap();
                ab.put("invoNum", invoID);
                try {

                    InputStream file = getClass().getResourceAsStream("/classes/cashInvo.jrxml");
                    JasperDesign jdesign = JRXmlLoader.load(file);

                    JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                    JasperViewer.viewReport(jprint, false);

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            else if(invoType.equals("Cash Advanced")){
                HashMap ab = new HashMap();
                ab.put("invoNum", invoID);
                try {

                    InputStream file = getClass().getResourceAsStream("/classes/cashInvo_1.jrxml");
                    JasperDesign jdesign = JRXmlLoader.load(file);

                    JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                    JasperViewer.viewReport(jprint, false);

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            else if(invoType.equals("Credit")){
                HashMap ab = new HashMap();
                ab.put("invoNum", invoID);
                try {

                    InputStream file = getClass().getResourceAsStream("/classes/CreditInvo.jrxml");
                    JasperDesign jdesign = JRXmlLoader.load(file);

                    JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                    JasperViewer.viewReport(jprint, false);

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            else if(invoType.equals("Credit Advanced")){
                HashMap ab = new HashMap();
                ab.put("invoNum", invoID);
                try {
                    InputStream file = getClass().getResourceAsStream("/classes/CreditInvo_1.jrxml");
                    JasperDesign jdesign = JRXmlLoader.load(file);

                    JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                    JasperViewer.viewReport(jprint, false);

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            else if(invoType.equals("Cheque")){
                HashMap ab = new HashMap();
                ab.put("invoNum", invoID);
                try {

                    InputStream file = getClass().getResourceAsStream("/classes/Cheque.jrxml");
                    JasperDesign jdesign = JRXmlLoader.load(file);

                    JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                    JasperViewer.viewReport(jprint, false);

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            billSearch kkkg = new billSearch();
            ResultSet rs1g = kkkg.showAllPendingBillDetails();
            this.jTable4.setModel(DbUtils.resultSetToTableModel(rs1g));
        }
        ResultSet rs99 = gggg.getAllNonClaimedWarranties();
        this.jTable16.setModel(DbUtils.resultSetToTableModel(rs99));
    }//GEN-LAST:event_jButton59ActionPerformed

    private void jTable16MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable16MousePressed
        int selectedRow011 = this.jTable16.getSelectedRow();
        String Note = this.jTable16.getModel().getValueAt(selectedRow011, 1).toString();
        this.jTextArea11.setText(Note);
    }//GEN-LAST:event_jTable16MousePressed

    private void jTable16AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable16AncestorAdded

    }//GEN-LAST:event_jTable16AncestorAdded

    private void jTextField84ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField84ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField84ActionPerformed

    private void jTextField83ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField83ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField83ActionPerformed

    private void jTextField82ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField82ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField82ActionPerformed

    private void jButton58ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton58ActionPerformed
        items_add_to_bill gghhjj = new items_add_to_bill();
        cashBalancing jjuu = new cashBalancing();
        billSearch kkiidd = new billSearch();

        Date d = new Date();
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String datee = sdf1.format(d);

        //String billID = this.jLabel157.getText();
        //String invoTypee = this.jLabel161.getText();

        int selectedRow9456gg = 0;
        selectedRow9456gg = this.jTable16.getSelectedRow();

        if(selectedRow9456gg == -1){
            JOptionPane.showMessageDialog(Warranty, "Select a Item from warranty Item List.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            String wCode = this.jTable16.getModel().getValueAt(selectedRow9456gg, 0).toString();
            String invoID = this.jTable16.getModel().getValueAt(selectedRow9456gg, 5).toString();
            String invoType = kkiidd.getBillTypeByBillID(invoID);
            int userSelection = JOptionPane.showConfirmDialog(Warranty,"Are you sure you want to claim this item.?", "Confirm Warranty Claim", JOptionPane.YES_NO_OPTION);
            if(userSelection == 0){

                String sItemCodeed = this.jTextField76.getText();
                String statusd = gghhjj.getItemStatus(sItemCodeed);

                if(statusd.equals("yes")){
                    String notee = " --> Claimed By SN- ".concat(sItemCodeed).concat(". Date - ").concat(datee);
                    try {
                        String queryyyd = "update warranty set claimedSerial=?, notee=CONCAT( notee, ?), claim=? where wCode = ?";
                        PreparedStatement pstluf = conn.prepareStatement(queryyyd);

                        pstluf.setString(1, sItemCodeed);
                        pstluf.setString(2, notee);
                        pstluf.setString(3, "yes");
                        pstluf.setString(4, wCode);
                        pstluf.executeUpdate();

                    } catch (SQLException ex) {
                        ex.printStackTrace();
                    }

                    try{
                        String SQL= "insert into warranty_claims(warrantyItemId, Note, serialNumber) values(?,?,?)";

                        PreparedStatement pstf = conn.prepareStatement(SQL);
                        pstf.setString(1, wCode);
                        pstf.setString(2, notee);
                        pstf.setString(3, sItemCodeed);

                        pstf.execute();
                    }
                    catch(Exception ed){
                        ed.printStackTrace();
                    }

                    try {
                        String queryyy = "update sub_items set inStock=? where sn = ?";
                        PreparedStatement pstlu = conn.prepareStatement(queryyy);

                        pstlu.setString(1, "no");
                        pstlu.setString(2, sItemCodeed);
                        pstlu.executeUpdate();

                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    String itmCode = jjuu.getItemCodeBySn(sItemCodeed);

                    try {
                        String query = "update items set qty = qty- ? where itm_code = ?";
                        PreparedStatement pst = conn.prepareStatement(query);

                        pst.setInt(1, 1);
                        pst.setString(2, itmCode);
                        pst.executeUpdate();

                    } catch(SQLException ex){
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    String FullNoted = getAllWarrantyNotices(invoID);
                    updateInvoiceDiscriptionForWarranty(FullNoted, invoID);
                    updateInvoiceDiscription(invoID);

                    this.Warranty.dispose();

                    if(invoType.equals("Cash")){
                        HashMap ab = new HashMap();
                        ab.put("invoNum", invoID);
                        try {

                            InputStream file = getClass().getResourceAsStream("/classes/cashInvo.jrxml");
                            JasperDesign jdesign = JRXmlLoader.load(file);

                            JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                            JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                            JasperViewer.viewReport(jprint, false);

                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }
                    else if(invoType.equals("Cash Advanced")){
                        HashMap ab = new HashMap();
                        ab.put("invoNum", invoID);
                        try {

                            InputStream file = getClass().getResourceAsStream("/classes/cashInvo_1.jrxml");
                            JasperDesign jdesign = JRXmlLoader.load(file);

                            JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                            JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                            JasperViewer.viewReport(jprint, false);

                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }
                    else if(invoType.equals("Credit")){
                        HashMap ab = new HashMap();
                        ab.put("invoNum", invoID);
                        try {

                            InputStream file = getClass().getResourceAsStream("/classes/CreditInvo.jrxml");
                            JasperDesign jdesign = JRXmlLoader.load(file);

                            JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                            JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                            JasperViewer.viewReport(jprint, false);

                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }
                    else if(invoType.equals("Credit Advanced")){
                        HashMap ab = new HashMap();
                        ab.put("invoNum", invoID);
                        try {
                            InputStream file = getClass().getResourceAsStream("/classes/CreditInvo_1.jrxml");
                            JasperDesign jdesign = JRXmlLoader.load(file);

                            JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                            JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                            JasperViewer.viewReport(jprint, false);

                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }
                    else if(invoType.equals("Cheque")){
                        HashMap ab = new HashMap();
                        ab.put("invoNum", invoID);
                        try {

                            InputStream file = getClass().getResourceAsStream("/classes/Cheque.jrxml");
                            JasperDesign jdesign = JRXmlLoader.load(file);

                            JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                            JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);

                            JasperViewer.viewReport(jprint, false);

                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }
                    
                    billSearch kkkd = new billSearch();
                    ResultSet rs1d = kkkd.showAllPendingBillDetails();
                    this.jTable4.setModel(DbUtils.resultSetToTableModel(rs1d));
                    
                    this.jTextArea7.setText("");
                    this.jTextField84.setText("");
                    this.jTextField83.setText("");
                    this.jTextField82.setText("");
                }
                else{
                    JOptionPane.showMessageDialog(Warranty, "Something went wrong with selected item.!","Error",JOptionPane.ERROR_MESSAGE);
                }

            }
        }
        //        items_add_to_bill aaas = new items_add_to_bill();
        //            cashBalancing ghj = new cashBalancing();
        //
        //            String itmCode1 = this.jTextField76.getText();
        //            String name = this.jTextArea7.getText();
        //            int packSize = Integer.parseInt(this.jTextField84.getText());
        //            int qty = Integer.parseInt(this.jTextField85.getText());
        //            double w_price = Double.parseDouble(this.jTextField82.getText());
        //            String wCode = this.jTextField135.getText();
        //            //double price = Double.parseDouble(this.jTextField3.getText());
        //            int free = 0;
        //            int dis = 0;
        //
        //            double r_price = Double.parseDouble(this.jTextField81.getText());
        //            double valu = ((qty * r_price)-((qty * r_price)*dis/100));
        //
        //            double costValue = (w_price * qty);
        //
        //            String billID = this.jLabel157.getText();
        //
        //
        //            Date d = new Date();
        //            SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        //            String date = sdf1.format(d);
        //
        //            SimpleDateFormat sdf = new SimpleDateFormat(" HH:mm:ss");
        //            String ttt = sdf.format(d);
        //
        //            //String note = "Add ".concat(String.valueOf(qty)).concat(" new ").concat(itmCode1).concat(" item/s to invo- ").concat(billID);
        //
        //            int avl_qty1 = Integer.parseInt(this.jTextField83.getText());
        //            String finalName = name.concat(" --").concat(wCode).concat("--").concat("(Claimed item/s for the WARRANTY item/s. ").concat(date).concat(" )");
        //            if(avl_qty1 >= (qty+free)){
            //                String cashBalanceID = "W";
            //                String billItemCode = aaas.addItemsToBill(itmCode1, finalName, packSize, qty, free, w_price, dis, r_price, date, valu, billID,costValue,cashBalanceID, this);
            //                JOptionPane.showMessageDialog(itemsAdder, "Item Added Successfully","Item Details", JOptionPane.INFORMATION_MESSAGE);
            //
            //                try {
                //                    String query = "update items set qty = qty- ? where itm_code = ?";
                //                    PreparedStatement pst = conn.prepareStatement(query);
                //
                //                        pst.setInt(1, qty);
                //                        pst.setString(2, itmCode1);
                //                        pst.executeUpdate();
                //
                //                    //JOptionPane.showMessageDialog(this, "Invoice Successfull","Movie Details", JOptionPane.INFORMATION_MESSAGE);
                //                    } catch (SQLException ex) {
                //                        ex.printStackTrace();
                //                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                //                    }
            //                    int selectedRow = this.jTable4.getSelectedRow();
            //
            //                        String billl = this.jTable4.getModel().getValueAt(selectedRow, 0).toString();
            //                        String invoTypeee = this.jTable4.getModel().getValueAt(selectedRow, 7).toString();
            //
            //                        if(invoTypeee.equals("Cash")){
                //                            HashMap ab = new HashMap();
                //                            ab.put("invoNum", billl);
                //                            try {
                    //
                    //                                InputStream file = getClass().getResourceAsStream("/classes/cashInvo.jrxml");
                    //                                JasperDesign jdesign = JRXmlLoader.load(file);
                    //
                    //                                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    //                                JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);
                    //
                    //                                JasperViewer.viewReport(jprint, false);
                    //
                    //                            } catch (Exception e) {
                    //                                e.printStackTrace();
                    //                            }
                //                        }
            //                        else if(invoTypeee.equals("Cash Advanced")){
                //                            HashMap ab = new HashMap();
                //                            ab.put("invoNum", billl);
                //                            try {
                    //
                    //                                InputStream file = getClass().getResourceAsStream("/classes/cashInvo_1.jrxml");
                    //                                JasperDesign jdesign = JRXmlLoader.load(file);
                    //
                    //                                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    //                                JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);
                    //
                    //                                JasperViewer.viewReport(jprint, false);
                    //
                    //                            } catch (Exception e) {
                    //                                e.printStackTrace();
                    //                            }
                //                        }
            //                        else if(invoTypeee.equals("Credit")){
                //                            HashMap ab = new HashMap();
                //                            ab.put("invoNum", billl);
                //                            try {
                    //
                    //                                InputStream file = getClass().getResourceAsStream("/classes/CreditInvo.jrxml");
                    //                                JasperDesign jdesign = JRXmlLoader.load(file);
                    //
                    //                                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    //                                JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);
                    //
                    //                                JasperViewer.viewReport(jprint, false);
                    //
                    //                            } catch (Exception e) {
                    //                                e.printStackTrace();
                    //                            }
                //                        }
            //                        else if(invoTypeee.equals("Credit Advanced")){
                //                            HashMap ab = new HashMap();
                //                            ab.put("invoNum", billl);
                //                            try {
                    //
                    //                                InputStream file = getClass().getResourceAsStream("/classes/CreditInvo_1.jrxml");
                    //                                JasperDesign jdesign = JRXmlLoader.load(file);
                    //
                    //                                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    //                                JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);
                    //
                    //                                JasperViewer.viewReport(jprint, false);
                    //
                    //                            } catch (Exception e) {
                    //                                e.printStackTrace();
                    //                            }
                //                        }
            //                        else if(invoTypeee.equals("Cheque")){
                //                            HashMap ab = new HashMap();
                //                            ab.put("invoNum", billl);
                //                            try {
                    //
                    //                                InputStream file = getClass().getResourceAsStream("/classes/Cheque.jrxml");
                    //                                JasperDesign jdesign = JRXmlLoader.load(file);
                    //
                    //                                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    //                                JasperPrint jprint = JasperFillManager.fillReport(jreport, ab, conn);
                    //
                    //                                JasperViewer.viewReport(jprint, false);
                    //
                    //                            } catch (Exception e) {
                    //                                e.printStackTrace();
                    //                            }
                //                        }
            //
            //                this.Warranty.dispose();
            //            }
        //            else{
            //                JOptionPane.showMessageDialog(itemsAdder, "Available quantity is not enought","Error",JOptionPane.ERROR_MESSAGE);
            //            }
        //
        //
        //            ResultSet rs = aaas.getAddedItemsBy_bill_ID(billID);
        //            this.jTable15.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_jButton58ActionPerformed

    private void jTextField76KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField76KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            items_add_to_bill jjkkiig = new items_add_to_bill();

            String sItemCodee = this.jTextField76.getText();
            String status = jjkkiig.getItemStatus(sItemCodee);

            if(status.equals("no") || status.equals("w")){

                JOptionPane.showMessageDialog(Warranty, "This "+sItemCodee+" Item has already been added.!","Database Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                String name, warranty, r_price, qty;
                searchItems sd = new searchItems();
                try{
                    ResultSet rs = sd.searchByItemCodeeeee(sItemCodee);
                    System.out.println(rs);
                    while(rs.next()){
                        name = rs.getString("itm_name");
                        warranty = rs.getString("warranty");
                        qty = rs.getString("qty");
                        r_price = rs.getString("r_price");
                        System.out.println(warranty);

                        this.jTextArea7.setText(name);
                        this.jTextField84.setText(r_price);
                        this.jTextField83.setText(qty);
                        this.jTextField82.setText(warranty);
                    }
                }
                catch(Exception e){
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jTextField76KeyPressed

    private void jTextField76ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField76ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField76ActionPerformed

    private void jTextField80ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField80ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField80ActionPerformed

    private void jTextField79ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField79ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField79ActionPerformed

    private void jTextField77ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField77ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField77ActionPerformed

    private void jTextField75ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField75ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField75ActionPerformed

    private void jButton57ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton57ActionPerformed
        items_add_to_bill iii = new items_add_to_bill();
        String billIDD = this.jLabel229.getText();

        int selectedRow7b = this.jTable15.getSelectedRow();
        if(selectedRow7b == -1){
            JOptionPane.showMessageDialog(Warranty, "Select a Item to Warranty.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            String billItemCodeh = this.jTable15.getModel().getValueAt(selectedRow7b, 0).toString();
            String strItemCode = this.jTable15.getModel().getValueAt(selectedRow7b, 1).toString();
            String qyyt = this.jTable15.getModel().getValueAt(selectedRow7b, 4).toString();
            String r_pprice = this.jTable15.getModel().getValueAt(selectedRow7b, 7).toString();
            int INTqty = Integer.parseInt(qyyt);
            String aaa = iii.checkSNAvailability(billItemCodeh);
            if(aaa.equals("")){
                JOptionPane.showMessageDialog(Warranty, "Cannot Warranty nun serial items.!","Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                items_add_to_bill jiu87ds = new items_add_to_bill();
                int selectedRow321123ds = this.jTable15.getSelectedRow();

                if(selectedRow321123ds == -1){
                    JOptionPane.showMessageDialog(Warranty, "Select a Serial Number to warranty.!","Error",JOptionPane.ERROR_MESSAGE);
                }
                else{
                    this.edit_edit_billed_Items2.setSize(340,300);
                    this.edit_edit_billed_Items2.setTitle("Warranty ");
                    this.edit_edit_billed_Items2.setLocationRelativeTo(this);
                    this.edit_edit_billed_Items2.setVisible(true);

                    String ProductItmCoded = this.jTable15.getModel().getValueAt(selectedRow321123ds, 0).toString();

                    ResultSet jjuyyf = jiu87ds.getSubItemDataFromBill(ProductItmCoded);
                    this.jTable39.setModel(DbUtils.resultSetToTableModel(jjuyyf));
                }
            }
        }
    }//GEN-LAST:event_jButton57ActionPerformed

    private void jTextField74ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField74ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField74ActionPerformed

    private void jTextField73ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField73ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField73ActionPerformed

    private void jTextField72ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField72ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField72ActionPerformed

    private void jTextField71ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField71ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField71ActionPerformed

    private void jTable15MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable15MousePressed
        int selectedRow1 = this.jTable15.getSelectedRow();

        String itmCorde = this.jTable15.getModel().getValueAt(selectedRow1, 1).toString();
        String itmDiscrip = this.jTable15.getModel().getValueAt(selectedRow1, 2).toString();
        int QQTy = (int)jTable15.getValueAt(selectedRow1, 4);
        String Warranty = String.valueOf(this.jTable15.getModel().getValueAt(selectedRow1, 3).toString());
        String r_price = String.valueOf(this.jTable15.getModel().getValueAt(selectedRow1, 5).toString());
        //String w_price = String.valueOf(this.jTable15.getModel().getValueAt(selectedRow1, 4).toString());
        //int dis = this.jTable4.getModel().getValueAt(selectedRow, 5).toString();

        //String invoID = this.jTable4.getModel().getValueAt(selectedRow, 0).toString();

        this.jTextField75.setText(itmCorde);
        this.jTextArea6.setText(itmDiscrip);
        this.jTextField79.setText(Integer.toString(QQTy));
        //this.jTextField103.setText(Integer.toString(QQTy));
        this.jTextField77.setText(r_price);
        this.jTextField80.setText(Warranty);
    }//GEN-LAST:event_jTable15MousePressed

    private void jButton119ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton119ActionPerformed
        cashBalancing lloof = new cashBalancing();
        int selectedRow9456dg = this.jTable16.getSelectedRow();

        if(selectedRow9456dg == -1){
            JOptionPane.showMessageDialog(Warranty, "Select a Claimed Warranty to Delete.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{

            int userSelection = JOptionPane.showConfirmDialog(Warranty,"Are you sure.! You want to delete this Claimed warranty item ?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if(userSelection == 0){

                String warrantyItemCode = this.jTable16.getModel().getValueAt(selectedRow9456dg, 0).toString();
                String warrantyNote = this.jTable16.getModel().getValueAt(selectedRow9456dg, 1).toString();
                String itemSireal = this.jTable16.getModel().getValueAt(selectedRow9456dg, 6).toString();
                String claimStatus = this.jTable16.getModel().getValueAt(selectedRow9456dg, 7).toString();
                String claimedItemSireal = this.jTable16.getModel().getValueAt(selectedRow9456dg, 8).toString();
                String invoID = this.jTable16.getModel().getValueAt(selectedRow9456dg, 5).toString();
                
                String warrantyClaimedNote = lloof.getWarrantyClaimDiscription(warrantyItemCode);
                
                if(claimStatus.equals("yes")){
                    if(itemSireal.equals("Claimed by same item")){
                        String newWarrantyNote = warrantyNote.replaceAll(warrantyClaimedNote, "");
                        System.out.println(newWarrantyNote);
                        try {
                            String queryyydd = "update warranty set claimedSerial=?, notee=?, claim=? where wCode = ?";
                            PreparedStatement pstlufd = conn.prepareStatement(queryyydd);

                            pstlufd.setString(1, "");
                            pstlufd.setString(2, newWarrantyNote);
                            pstlufd.setString(3, "no");
                            pstlufd.setString(4, warrantyItemCode);
                            pstlufd.executeUpdate();

                        } catch (SQLException ex) {
                            ex.printStackTrace();
                        }
                        
                        lloof.deleteClaimedWarranty(warrantyItemCode);
                        
                        String FullNoted = getAllWarrantyNotices(invoID);
                        updateInvoiceDiscriptionForWarranty(FullNoted, invoID);
                        
                        String kkG = updateInvoiceDiscription(invoID);

                        if(kkG==null){

                        }
                        else{
                            JOptionPane.showMessageDialog(Warranty, "Selected Warranty Item deleted Successfully","Warranty Details", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                    else{
                        String newWarrantyNote = warrantyNote.replaceAll(warrantyClaimedNote, "");
                        System.out.println(newWarrantyNote);
                        try {
                            String queryyydd = "update warranty set claimedSerial=?, notee=?, claim=? where wCode = ?";
                            PreparedStatement pstlufd = conn.prepareStatement(queryyydd);

                            pstlufd.setString(1, "");
                            pstlufd.setString(2, newWarrantyNote);
                            pstlufd.setString(3, "no");
                            pstlufd.setString(4, warrantyItemCode);
                            pstlufd.executeUpdate();

                        } catch (SQLException ex) {
                            ex.printStackTrace();
                        }
                        
                        try {
                            String queryyy = "update sub_items set inStock=? where sn = ?";
                            PreparedStatement pstlu = conn.prepareStatement(queryyy);

                            pstlu.setString(1, "yes");
                            pstlu.setString(2, claimedItemSireal);
                            pstlu.executeUpdate();

                        } catch (SQLException ex) {
                            ex.printStackTrace();
                            Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        String itmCode = lloof.getItemCodeBySn(claimedItemSireal);

                        try {
                            String query = "update items set qty = qty+ ? where itm_code = ?";
                            PreparedStatement pst = conn.prepareStatement(query);

                            pst.setInt(1, 1);
                            pst.setString(2, itmCode);
                            pst.executeUpdate();

                        } catch(SQLException ex){
                            ex.printStackTrace();
                            Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        lloof.deleteClaimedWarranty(warrantyItemCode);
                        
                        String FullNoted = getAllWarrantyNotices(invoID);
                        updateInvoiceDiscriptionForWarranty(FullNoted, invoID);
                        
                        String kkG = updateInvoiceDiscription(invoID);

                        if(kkG==null){
                            ResultSet rs99d = lloof.getAllNonClaimedWarranties();
                            this.jTable16.setModel(DbUtils.resultSetToTableModel(rs99d));
                        }
                        else{
                            JOptionPane.showMessageDialog(Warranty, "Selected Warranty Item deleted Successfully","Warranty Details", JOptionPane.INFORMATION_MESSAGE);
                            
                            
                        } 
                    }      
                }
                else{
                    JOptionPane.showMessageDialog(Warranty, "You can only delete Claimed Warrantys.!","Error",JOptionPane.ERROR_MESSAGE);
                }
                //iii1.deleteAddedBillItems(billItemCode);

                
            }
        }
    }//GEN-LAST:event_jButton119ActionPerformed

    private void jTable40MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable40MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable40MousePressed

    private void jButton114ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton114ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton114ActionPerformed

    private void jTable41MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable41MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable41MousePressed

    private void jButton120ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton120ActionPerformed
        items_add_to_bill hghhf = new items_add_to_bill();
        searchItems dddd = new searchItems();
        cashBalancing ggg1 = new cashBalancing();
        String billIdd = this.jLabel179.getText();
        
        
        
        int selectedRow011w = this.jTable41.getSelectedRow();
        int selectedRow21w = this.jTable17.getSelectedRow();
        
        if(selectedRow011w == -1){
            JOptionPane.showMessageDialog(edit_edit_billed_Items3, "Pleace select an Serial to Return.!","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            String billItemCode = this.jTable17.getModel().getValueAt(selectedRow21w, 0).toString();   
            String itemCodeee = this.jTable17.getModel().getValueAt(selectedRow21w, 1).toString();
            String serial = this.jTable41.getModel().getValueAt(selectedRow011w, 1).toString();
            
            String wCode = ggg1.checkSNAvailabilityInWarranty(serial);
            
            if(wCode.equals("")){
                Date d = new Date();
                SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
                String day = sdf1.format(d);

                String itemName = dddd.getItemNameByItemCode(itemCodeee);


                double rAmount = 0;
                int r_qty = 1;
                String notee = "SN- ".concat(serial).concat(" of ").concat(itemName).concat(" item Returned.");


    //            int WarrantyMonths = parseInt(this.jTextField80.getText());
    //            String claim = "no";
    //            String itmbillDate = this.jTable17.getModel().getValueAt(selectedRow21w, 6).toString();

                String isItOkay = ggg1.addReturnedItems(rAmount, itemCodeee,itemName, r_qty, billIdd, day, serial,notee, edit_edit_billed_Items3);

                if(!isItOkay.equals(null)){

                    try {
                        String queryyy = "update bill_sub_items set snn=CONCAT( snn, ?) where snn = ?";
                        PreparedStatement pstlu = conn.prepareStatement(queryyy);

                        pstlu.setString(1, "(R)");
                        pstlu.setString(2, serial);
                        pstlu.executeUpdate();

                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        String query = "update bill_items set item_name = ? where bill_item_id = ?";
                        PreparedStatement pstd = conn.prepareStatement(query);

                        String billedSN = getBillItemSN(billItemCode);
                        System.out.println(billedSN);
                        String newName = itemName.concat(" - ").concat(billedSN);

                        pstd.setString(1, newName);
                        pstd.setString(2, billItemCode);
                        pstd.executeUpdate();

                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    try {
                        String queryyy = "update sub_items set inStock=? where sn = ?";
                        PreparedStatement pstlu = conn.prepareStatement(queryyy);

                        pstlu.setString(1, "yes");
                        pstlu.setString(2, serial);
                        pstlu.executeUpdate();

                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    String itmCode = ggg1.getItemCodeBySn(serial);

                    try {
                        String query = "update items set qty = qty+ ? where itm_code = ?";
                        PreparedStatement pst = conn.prepareStatement(query);

                        pst.setInt(1, 1);
                        pst.setString(2, itmCode);
                        pst.executeUpdate();

                    } catch(SQLException ex){
                        ex.printStackTrace();
                        Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    String FullNote = getAllWarrantyNotices(billIdd); 
                    updateInvoiceDiscriptionForWarranty(FullNote, billIdd);

                    //update main bill discription

                    updateInvoiceDiscription(billIdd);

                    String hhhd = ggg1.getInvoiceDis(billIdd);

                    this.jTextArea8.setText(hhhd);

                    ResultSet rs99dg = ggg1.getAllReturnItemsByInvoice(billIdd);
                    this.jTable40.setModel(DbUtils.resultSetToTableModel(rs99dg));

                    JOptionPane.showMessageDialog(returnItms, "Save Return Item Successfully","Return Details", JOptionPane.INFORMATION_MESSAGE);
                } 
            }
            else{
                JOptionPane.showMessageDialog(edit_edit_billed_Items3, "This Item allready in Warranty.!","Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        
        ResultSet rs99 = ggg1.getAllNonClaimedWarranties();
        this.jTable16.setModel(DbUtils.resultSetToTableModel(rs99));
    }//GEN-LAST:event_jButton120ActionPerformed

    private void jButton121ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton121ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton121ActionPerformed

    private void jTextField149ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField149ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField149ActionPerformed

    private void jTextField93ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField93ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField93ActionPerformed

    private void jTextField96ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField96ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField96ActionPerformed

    private void jTextField97ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField97ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField97ActionPerformed
    
    public void showPanels(){
        setColor(btn_search);
        resetColor(btn_add);
        resetColor(btn_billing);
        resetColor(btn_bill_summ);
        resetColor(btn_hr);
        resetColor(btn_hr4);
        resetColor(btn_billing1);
        
        this.jPanel10.setVisible(true);
        this.jPanel13.setVisible(false);
        this.jPanel14.setVisible(false);
        this.jPanel15.setVisible(false);
        this.jPanel16.setVisible(false);
        this.jPanel55.setVisible(false);
        this.jPanel56.setVisible(false);
        
        this.pnl_searchItm.setVisible(true);
        this.pnl_addItms.setVisible(false);
        this.pnl_billing.setVisible(false);
        this.pnl_billingSumm.setVisible(false);
        this.pnl_hr.setVisible(false);
        this.pnl_barcode.setVisible(false);
        this.pnl_quickBill.setVisible(false);
        this.pnl_settings.setVisible(false);
        
        searchItems si = new searchItems();
        ResultSet rs = si.showItemDetails();
        this.tbl_items_search.setModel(DbUtils.resultSetToTableModel(rs));
    }
    
    public void updateBill() throws ParseException{
        Date d = new Date();
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String currentDate = sdf1.format(d);
       
        
        hr gggg = new hr();
        
        ResultSet rs10 = gggg.showUpdatedJobDetails();
        this.jTable6.setModel(DbUtils.resultSetToTableModel(rs10));
            Date d1 = null;
            Date d2 = null; 
        
        try {
            String query = "update job set days =? where jobCode = ?";
            PreparedStatement pst =conn.prepareStatement(query);
            for(int i=0; i<jTable6.getRowCount(); i++){
                String billId = (String)jTable6.getValueAt(i,0);
                String billDate = (String)jTable6.getValueAt(i,4);
                System.out.println(billDate);
                System.out.println(currentDate);
            

                d1 = sdf1.parse(billDate);
                d2 = sdf1.parse(currentDate);

                //in milliseconds
                long diff = d2.getTime() - d1.getTime();

//                long diffSeconds = diff / 1000 % 60;
//                long diffMinutes = diff / (60 * 1000) % 60;
//                long diffHours = diff / (60 * 60 * 1000) % 24;
                long diffDays = diff / (24 * 60 * 60 * 1000);

//                System.out.print(diffDays + " days, ");
//                System.out.print(diffHours + " hours, ");
//                System.out.print(diffMinutes + " minutes, ");
//                System.out.print(diffSeconds + " seconds.");
                
                pst.setLong(1, diffDays);
                pst.setString(2, billId);
                pst.executeUpdate();
                System.out.println("fffff");
            }        
        }
        catch (SQLException exa) {
                exa.printStackTrace();
                Logger.getLogger(MainManue1.class.getName()).log(Level.SEVERE, null, exa);
        }
    }
    
    
    void setColor(JPanel panel){
        panel.setBackground(new Color(85,65,118));
    }
    void resetColor(JPanel panel){
        panel.setBackground(new Color(64,43,100));
    }
    /**
     * @param args the command line arguments
     */
public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainManue1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainManue1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainManue1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainManue1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainManue1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JDialog Warranty;
    javax.swing.JDialog addItemTypes;
    javax.swing.JDialog addJobTypes;
    javax.swing.JDialog adminLogin;
    javax.swing.JDialog adminLogin1;
    javax.swing.JDialog adminLogin2;
    javax.swing.JDialog adminLogin3;
    javax.swing.JDialog adminLogin_item_delete;
    javax.swing.JDialog adminLogin_item_delete_sn;
    javax.swing.JDialog adminLogin_item_edit;
    javax.swing.JPanel bg;
    javax.swing.ButtonGroup billGroup;
    javax.swing.JDialog billSubmition;
    javax.swing.JPanel btn_add;
    javax.swing.JPanel btn_bill_summ;
    javax.swing.JPanel btn_billing;
    javax.swing.JPanel btn_billing1;
    javax.swing.JPanel btn_hr;
    javax.swing.JPanel btn_hr2;
    javax.swing.JPanel btn_hr4;
    javax.swing.JPanel btn_search;
    javax.swing.ButtonGroup buttonGroup1;
    javax.swing.JDialog chequeInvo;
    javax.swing.JComboBox<String> com_box_bill_itm_searchTyp;
    javax.swing.JComboBox<String> com_box_searchTyp;
    javax.swing.JComboBox<String> com_box_searchTyp1;
    javax.swing.JComboBox<String> com_box_searchTyp2;
    javax.swing.JDialog creditInvo;
    com.toedter.calendar.JDateChooser dChooser_edt_expDate;
    com.toedter.calendar.JDateChooser dChooser_edt_expDate1;
    com.toedter.calendar.JDateChooser dChooser_edt_expDate2;
    javax.swing.JDialog dailyCashBal;
    javax.swing.JDialog editEnvoice;
    javax.swing.JDialog editItemJobType;
    javax.swing.JDialog editItemType;
    javax.swing.JDialog edit_billed_Items;
    javax.swing.JDialog edit_edit_billed_Items;
    javax.swing.JDialog edit_edit_billed_Items1;
    javax.swing.JDialog edit_edit_billed_Items2;
    javax.swing.JDialog edit_edit_billed_Items3;
    javax.swing.JDialog edit_edit_billed_Items4;
    javax.swing.JDialog itemEdit;
    javax.swing.JDialog itemsAdder;
    javax.swing.JButton jButton1;
    javax.swing.JButton jButton10;
    javax.swing.JButton jButton100;
    javax.swing.JButton jButton101;
    javax.swing.JButton jButton102;
    javax.swing.JButton jButton103;
    javax.swing.JButton jButton104;
    javax.swing.JButton jButton105;
    javax.swing.JButton jButton106;
    javax.swing.JButton jButton107;
    javax.swing.JButton jButton108;
    javax.swing.JButton jButton109;
    javax.swing.JButton jButton11;
    javax.swing.JButton jButton110;
    javax.swing.JButton jButton111;
    javax.swing.JButton jButton112;
    javax.swing.JButton jButton113;
    javax.swing.JButton jButton114;
    javax.swing.JButton jButton115;
    javax.swing.JButton jButton116;
    javax.swing.JButton jButton117;
    javax.swing.JButton jButton118;
    javax.swing.JButton jButton119;
    javax.swing.JButton jButton12;
    javax.swing.JButton jButton120;
    javax.swing.JButton jButton121;
    javax.swing.JButton jButton13;
    javax.swing.JButton jButton14;
    javax.swing.JButton jButton15;
    javax.swing.JButton jButton16;
    javax.swing.JButton jButton17;
    javax.swing.JButton jButton18;
    javax.swing.JButton jButton19;
    javax.swing.JButton jButton2;
    javax.swing.JButton jButton20;
    javax.swing.JButton jButton21;
    javax.swing.JButton jButton22;
    javax.swing.JButton jButton23;
    javax.swing.JButton jButton24;
    javax.swing.JButton jButton25;
    javax.swing.JButton jButton26;
    javax.swing.JButton jButton27;
    javax.swing.JButton jButton28;
    javax.swing.JButton jButton29;
    javax.swing.JButton jButton3;
    javax.swing.JButton jButton30;
    javax.swing.JButton jButton31;
    javax.swing.JButton jButton32;
    javax.swing.JButton jButton33;
    javax.swing.JButton jButton34;
    javax.swing.JButton jButton35;
    javax.swing.JButton jButton36;
    javax.swing.JButton jButton37;
    javax.swing.JButton jButton38;
    javax.swing.JButton jButton39;
    javax.swing.JButton jButton4;
    javax.swing.JButton jButton40;
    javax.swing.JButton jButton41;
    javax.swing.JButton jButton42;
    javax.swing.JButton jButton43;
    javax.swing.JButton jButton44;
    javax.swing.JButton jButton45;
    javax.swing.JButton jButton46;
    javax.swing.JButton jButton47;
    javax.swing.JButton jButton48;
    javax.swing.JButton jButton5;
    javax.swing.JButton jButton50;
    javax.swing.JButton jButton51;
    javax.swing.JButton jButton52;
    javax.swing.JButton jButton54;
    javax.swing.JButton jButton55;
    javax.swing.JButton jButton56;
    javax.swing.JButton jButton57;
    javax.swing.JButton jButton58;
    javax.swing.JButton jButton59;
    javax.swing.JButton jButton6;
    javax.swing.JButton jButton60;
    javax.swing.JButton jButton62;
    javax.swing.JButton jButton64;
    javax.swing.JButton jButton65;
    javax.swing.JButton jButton66;
    javax.swing.JButton jButton67;
    javax.swing.JButton jButton68;
    javax.swing.JButton jButton69;
    javax.swing.JButton jButton7;
    javax.swing.JButton jButton70;
    javax.swing.JButton jButton71;
    javax.swing.JButton jButton72;
    javax.swing.JButton jButton73;
    javax.swing.JButton jButton74;
    javax.swing.JButton jButton75;
    javax.swing.JButton jButton76;
    javax.swing.JButton jButton77;
    javax.swing.JButton jButton78;
    javax.swing.JButton jButton79;
    javax.swing.JButton jButton8;
    javax.swing.JButton jButton80;
    javax.swing.JButton jButton81;
    javax.swing.JButton jButton82;
    javax.swing.JButton jButton83;
    javax.swing.JButton jButton84;
    javax.swing.JButton jButton85;
    javax.swing.JButton jButton86;
    javax.swing.JButton jButton87;
    javax.swing.JButton jButton88;
    javax.swing.JButton jButton89;
    javax.swing.JButton jButton9;
    javax.swing.JButton jButton90;
    javax.swing.JButton jButton91;
    javax.swing.JButton jButton92;
    javax.swing.JButton jButton93;
    javax.swing.JButton jButton94;
    javax.swing.JButton jButton95;
    javax.swing.JButton jButton96;
    javax.swing.JButton jButton97;
    javax.swing.JButton jButton98;
    javax.swing.JButton jButton99;
    javax.swing.JCheckBox jCheckBox1;
    javax.swing.JCheckBox jCheckBox10;
    javax.swing.JCheckBox jCheckBox11;
    javax.swing.JCheckBox jCheckBox12;
    javax.swing.JCheckBox jCheckBox13;
    javax.swing.JCheckBox jCheckBox14;
    javax.swing.JCheckBox jCheckBox15;
    javax.swing.JCheckBox jCheckBox2;
    javax.swing.JCheckBox jCheckBox3;
    javax.swing.JCheckBox jCheckBox4;
    javax.swing.JCheckBox jCheckBox5;
    javax.swing.JCheckBox jCheckBox6;
    javax.swing.JCheckBox jCheckBox7;
    javax.swing.JCheckBox jCheckBox8;
    javax.swing.JCheckBox jCheckBox9;
    javax.swing.JComboBox<String> jComboBox1;
    javax.swing.JComboBox<String> jComboBox10;
    javax.swing.JComboBox<String> jComboBox11;
    javax.swing.JComboBox<String> jComboBox2;
    javax.swing.JComboBox<String> jComboBox3;
    javax.swing.JComboBox<String> jComboBox4;
    javax.swing.JComboBox<String> jComboBox5;
    javax.swing.JComboBox<String> jComboBox6;
    javax.swing.JComboBox<String> jComboBox7;
    javax.swing.JComboBox<String> jComboBox8;
    javax.swing.JComboBox<String> jComboBox9;
    com.toedter.calendar.JDateChooser jDateChooser1;
    com.toedter.calendar.JDateChooser jDateChooser2;
    com.toedter.calendar.JDateChooser jDateChooser3;
    com.toedter.calendar.JDateChooser jDateChooser4;
    com.toedter.calendar.JDateChooser jDateChooser5;
    com.toedter.calendar.JDateChooser jDateChooser6;
    com.toedter.calendar.JDateChooser jDateChooser7;
    com.toedter.calendar.JDateChooser jDateChooser8;
    javax.swing.JLabel jLabel1;
    javax.swing.JLabel jLabel10;
    javax.swing.JLabel jLabel100;
    javax.swing.JLabel jLabel101;
    javax.swing.JLabel jLabel102;
    javax.swing.JLabel jLabel103;
    javax.swing.JLabel jLabel104;
    javax.swing.JLabel jLabel105;
    javax.swing.JLabel jLabel106;
    javax.swing.JLabel jLabel107;
    javax.swing.JLabel jLabel108;
    javax.swing.JLabel jLabel109;
    javax.swing.JLabel jLabel11;
    javax.swing.JLabel jLabel110;
    javax.swing.JLabel jLabel111;
    javax.swing.JLabel jLabel112;
    javax.swing.JLabel jLabel113;
    javax.swing.JLabel jLabel114;
    javax.swing.JLabel jLabel115;
    javax.swing.JLabel jLabel116;
    javax.swing.JLabel jLabel117;
    javax.swing.JLabel jLabel118;
    javax.swing.JLabel jLabel119;
    javax.swing.JLabel jLabel12;
    javax.swing.JLabel jLabel120;
    javax.swing.JLabel jLabel121;
    javax.swing.JLabel jLabel122;
    javax.swing.JLabel jLabel123;
    javax.swing.JLabel jLabel124;
    javax.swing.JLabel jLabel125;
    javax.swing.JLabel jLabel126;
    javax.swing.JLabel jLabel127;
    javax.swing.JLabel jLabel128;
    javax.swing.JLabel jLabel129;
    javax.swing.JLabel jLabel13;
    javax.swing.JLabel jLabel130;
    javax.swing.JLabel jLabel131;
    javax.swing.JLabel jLabel132;
    javax.swing.JLabel jLabel133;
    javax.swing.JLabel jLabel134;
    javax.swing.JLabel jLabel135;
    javax.swing.JLabel jLabel136;
    javax.swing.JLabel jLabel137;
    javax.swing.JLabel jLabel138;
    javax.swing.JLabel jLabel139;
    javax.swing.JLabel jLabel14;
    javax.swing.JLabel jLabel140;
    javax.swing.JLabel jLabel141;
    javax.swing.JLabel jLabel142;
    javax.swing.JLabel jLabel143;
    javax.swing.JLabel jLabel144;
    javax.swing.JLabel jLabel145;
    javax.swing.JLabel jLabel146;
    javax.swing.JLabel jLabel147;
    javax.swing.JLabel jLabel148;
    javax.swing.JLabel jLabel149;
    javax.swing.JLabel jLabel15;
    javax.swing.JLabel jLabel150;
    javax.swing.JLabel jLabel151;
    javax.swing.JLabel jLabel152;
    javax.swing.JLabel jLabel153;
    javax.swing.JLabel jLabel154;
    javax.swing.JLabel jLabel155;
    javax.swing.JLabel jLabel156;
    javax.swing.JLabel jLabel157;
    javax.swing.JLabel jLabel158;
    javax.swing.JLabel jLabel159;
    javax.swing.JLabel jLabel16;
    javax.swing.JLabel jLabel160;
    javax.swing.JLabel jLabel161;
    javax.swing.JLabel jLabel162;
    javax.swing.JLabel jLabel163;
    javax.swing.JLabel jLabel164;
    javax.swing.JLabel jLabel165;
    javax.swing.JLabel jLabel166;
    javax.swing.JLabel jLabel167;
    javax.swing.JLabel jLabel168;
    javax.swing.JLabel jLabel169;
    javax.swing.JLabel jLabel17;
    javax.swing.JLabel jLabel170;
    javax.swing.JLabel jLabel171;
    javax.swing.JLabel jLabel172;
    javax.swing.JLabel jLabel173;
    javax.swing.JLabel jLabel174;
    javax.swing.JLabel jLabel175;
    javax.swing.JLabel jLabel176;
    javax.swing.JLabel jLabel177;
    javax.swing.JLabel jLabel178;
    javax.swing.JLabel jLabel179;
    javax.swing.JLabel jLabel18;
    javax.swing.JLabel jLabel180;
    javax.swing.JLabel jLabel181;
    javax.swing.JLabel jLabel182;
    javax.swing.JLabel jLabel183;
    javax.swing.JLabel jLabel184;
    javax.swing.JLabel jLabel185;
    javax.swing.JLabel jLabel186;
    javax.swing.JLabel jLabel187;
    javax.swing.JLabel jLabel188;
    javax.swing.JLabel jLabel189;
    javax.swing.JLabel jLabel19;
    javax.swing.JLabel jLabel190;
    javax.swing.JLabel jLabel191;
    javax.swing.JLabel jLabel195;
    javax.swing.JLabel jLabel196;
    javax.swing.JLabel jLabel199;
    javax.swing.JLabel jLabel2;
    javax.swing.JLabel jLabel20;
    javax.swing.JLabel jLabel200;
    javax.swing.JLabel jLabel201;
    javax.swing.JLabel jLabel2011;
    javax.swing.JLabel jLabel202;
    javax.swing.JLabel jLabel203;
    javax.swing.JLabel jLabel206;
    javax.swing.JLabel jLabel207;
    javax.swing.JLabel jLabel208;
    javax.swing.JLabel jLabel209;
    javax.swing.JLabel jLabel21;
    javax.swing.JLabel jLabel210;
    javax.swing.JLabel jLabel211;
    javax.swing.JLabel jLabel212;
    javax.swing.JLabel jLabel213;
    javax.swing.JLabel jLabel214;
    javax.swing.JLabel jLabel215;
    javax.swing.JLabel jLabel217;
    javax.swing.JLabel jLabel218;
    javax.swing.JLabel jLabel219;
    javax.swing.JLabel jLabel22;
    javax.swing.JLabel jLabel220;
    javax.swing.JLabel jLabel221;
    javax.swing.JLabel jLabel222;
    javax.swing.JLabel jLabel223;
    javax.swing.JLabel jLabel224;
    javax.swing.JLabel jLabel225;
    javax.swing.JLabel jLabel226;
    javax.swing.JLabel jLabel227;
    javax.swing.JLabel jLabel228;
    javax.swing.JLabel jLabel229;
    javax.swing.JLabel jLabel23;
    javax.swing.JLabel jLabel230;
    javax.swing.JLabel jLabel231;
    javax.swing.JLabel jLabel232;
    javax.swing.JLabel jLabel233;
    javax.swing.JLabel jLabel234;
    javax.swing.JLabel jLabel235;
    javax.swing.JLabel jLabel236;
    javax.swing.JLabel jLabel237;
    javax.swing.JLabel jLabel238;
    javax.swing.JLabel jLabel24;
    javax.swing.JLabel jLabel245;
    javax.swing.JLabel jLabel246;
    javax.swing.JLabel jLabel248;
    javax.swing.JLabel jLabel249;
    javax.swing.JLabel jLabel25;
    javax.swing.JLabel jLabel250;
    javax.swing.JLabel jLabel251;
    javax.swing.JLabel jLabel252;
    javax.swing.JLabel jLabel253;
    javax.swing.JLabel jLabel254;
    javax.swing.JLabel jLabel255;
    javax.swing.JLabel jLabel256;
    javax.swing.JLabel jLabel257;
    javax.swing.JLabel jLabel258;
    javax.swing.JLabel jLabel259;
    javax.swing.JLabel jLabel26;
    javax.swing.JLabel jLabel260;
    javax.swing.JLabel jLabel261;
    javax.swing.JLabel jLabel262;
    javax.swing.JLabel jLabel263;
    javax.swing.JLabel jLabel264;
    javax.swing.JLabel jLabel265;
    javax.swing.JLabel jLabel266;
    javax.swing.JLabel jLabel267;
    javax.swing.JLabel jLabel268;
    javax.swing.JLabel jLabel269;
    javax.swing.JLabel jLabel27;
    javax.swing.JLabel jLabel270;
    javax.swing.JLabel jLabel271;
    javax.swing.JLabel jLabel272;
    javax.swing.JLabel jLabel273;
    javax.swing.JLabel jLabel274;
    javax.swing.JLabel jLabel275;
    javax.swing.JLabel jLabel276;
    javax.swing.JLabel jLabel277;
    javax.swing.JLabel jLabel278;
    javax.swing.JLabel jLabel279;
    javax.swing.JLabel jLabel28;
    javax.swing.JLabel jLabel280;
    javax.swing.JLabel jLabel281;
    javax.swing.JLabel jLabel282;
    javax.swing.JLabel jLabel283;
    javax.swing.JLabel jLabel284;
    javax.swing.JLabel jLabel285;
    javax.swing.JLabel jLabel286;
    javax.swing.JLabel jLabel287;
    javax.swing.JLabel jLabel288;
    javax.swing.JLabel jLabel289;
    javax.swing.JLabel jLabel29;
    javax.swing.JLabel jLabel290;
    javax.swing.JLabel jLabel291;
    javax.swing.JLabel jLabel292;
    javax.swing.JLabel jLabel293;
    javax.swing.JLabel jLabel294;
    javax.swing.JLabel jLabel295;
    javax.swing.JLabel jLabel296;
    javax.swing.JLabel jLabel297;
    javax.swing.JLabel jLabel298;
    javax.swing.JLabel jLabel299;
    javax.swing.JLabel jLabel3;
    javax.swing.JLabel jLabel30;
    javax.swing.JLabel jLabel300;
    javax.swing.JLabel jLabel301;
    javax.swing.JLabel jLabel302;
    javax.swing.JLabel jLabel303;
    javax.swing.JLabel jLabel304;
    javax.swing.JLabel jLabel305;
    javax.swing.JLabel jLabel306;
    javax.swing.JLabel jLabel307;
    javax.swing.JLabel jLabel308;
    javax.swing.JLabel jLabel309;
    javax.swing.JLabel jLabel31;
    javax.swing.JLabel jLabel310;
    javax.swing.JLabel jLabel311;
    javax.swing.JLabel jLabel312;
    javax.swing.JLabel jLabel313;
    javax.swing.JLabel jLabel314;
    javax.swing.JLabel jLabel315;
    javax.swing.JLabel jLabel316;
    javax.swing.JLabel jLabel317;
    javax.swing.JLabel jLabel318;
    javax.swing.JLabel jLabel319;
    javax.swing.JLabel jLabel32;
    javax.swing.JLabel jLabel33;
    javax.swing.JLabel jLabel34;
    javax.swing.JLabel jLabel35;
    javax.swing.JLabel jLabel36;
    javax.swing.JLabel jLabel37;
    javax.swing.JLabel jLabel4;
    javax.swing.JLabel jLabel40;
    javax.swing.JLabel jLabel41;
    javax.swing.JLabel jLabel42;
    javax.swing.JLabel jLabel43;
    javax.swing.JLabel jLabel44;
    javax.swing.JLabel jLabel45;
    javax.swing.JLabel jLabel46;
    javax.swing.JLabel jLabel47;
    javax.swing.JLabel jLabel48;
    javax.swing.JLabel jLabel49;
    javax.swing.JLabel jLabel5;
    javax.swing.JLabel jLabel50;
    javax.swing.JLabel jLabel53;
    javax.swing.JLabel jLabel54;
    javax.swing.JLabel jLabel55;
    javax.swing.JLabel jLabel56;
    javax.swing.JLabel jLabel57;
    javax.swing.JLabel jLabel58;
    javax.swing.JLabel jLabel59;
    javax.swing.JLabel jLabel6;
    javax.swing.JLabel jLabel60;
    javax.swing.JLabel jLabel61;
    javax.swing.JLabel jLabel62;
    javax.swing.JLabel jLabel63;
    javax.swing.JLabel jLabel64;
    javax.swing.JLabel jLabel65;
    javax.swing.JLabel jLabel66;
    javax.swing.JLabel jLabel67;
    javax.swing.JLabel jLabel68;
    javax.swing.JLabel jLabel69;
    javax.swing.JLabel jLabel7;
    javax.swing.JLabel jLabel70;
    javax.swing.JLabel jLabel71;
    javax.swing.JLabel jLabel72;
    javax.swing.JLabel jLabel73;
    javax.swing.JLabel jLabel74;
    javax.swing.JLabel jLabel75;
    javax.swing.JLabel jLabel76;
    javax.swing.JLabel jLabel77;
    javax.swing.JLabel jLabel78;
    javax.swing.JLabel jLabel79;
    javax.swing.JLabel jLabel8;
    javax.swing.JLabel jLabel80;
    javax.swing.JLabel jLabel81;
    javax.swing.JLabel jLabel82;
    javax.swing.JLabel jLabel83;
    javax.swing.JLabel jLabel84;
    javax.swing.JLabel jLabel85;
    javax.swing.JLabel jLabel86;
    javax.swing.JLabel jLabel87;
    javax.swing.JLabel jLabel88;
    javax.swing.JLabel jLabel89;
    javax.swing.JLabel jLabel9;
    javax.swing.JLabel jLabel90;
    javax.swing.JLabel jLabel91;
    javax.swing.JLabel jLabel92;
    javax.swing.JLabel jLabel94;
    javax.swing.JLabel jLabel95;
    javax.swing.JLabel jLabel96;
    javax.swing.JLabel jLabel97;
    javax.swing.JLabel jLabel98;
    javax.swing.JLabel jLabel99;
    javax.swing.JPanel jPanel1;
    javax.swing.JPanel jPanel10;
    javax.swing.JPanel jPanel11;
    javax.swing.JPanel jPanel12;
    javax.swing.JPanel jPanel13;
    javax.swing.JPanel jPanel14;
    javax.swing.JPanel jPanel15;
    javax.swing.JPanel jPanel16;
    javax.swing.JPanel jPanel17;
    javax.swing.JPanel jPanel18;
    javax.swing.JPanel jPanel19;
    javax.swing.JPanel jPanel2;
    javax.swing.JPanel jPanel20;
    javax.swing.JPanel jPanel21;
    javax.swing.JPanel jPanel22;
    javax.swing.JPanel jPanel23;
    javax.swing.JPanel jPanel24;
    javax.swing.JPanel jPanel25;
    javax.swing.JPanel jPanel26;
    javax.swing.JPanel jPanel27;
    javax.swing.JPanel jPanel28;
    javax.swing.JPanel jPanel29;
    javax.swing.JPanel jPanel3;
    javax.swing.JPanel jPanel30;
    javax.swing.JPanel jPanel31;
    javax.swing.JPanel jPanel32;
    javax.swing.JPanel jPanel33;
    javax.swing.JPanel jPanel34;
    javax.swing.JPanel jPanel35;
    javax.swing.JPanel jPanel36;
    javax.swing.JPanel jPanel37;
    javax.swing.JPanel jPanel38;
    javax.swing.JPanel jPanel4;
    javax.swing.JPanel jPanel40;
    javax.swing.JPanel jPanel41;
    javax.swing.JPanel jPanel42;
    javax.swing.JPanel jPanel43;
    javax.swing.JPanel jPanel44;
    javax.swing.JPanel jPanel45;
    javax.swing.JPanel jPanel46;
    javax.swing.JPanel jPanel47;
    javax.swing.JPanel jPanel48;
    javax.swing.JPanel jPanel49;
    javax.swing.JPanel jPanel5;
    javax.swing.JPanel jPanel50;
    javax.swing.JPanel jPanel51;
    javax.swing.JPanel jPanel52;
    javax.swing.JPanel jPanel53;
    javax.swing.JPanel jPanel54;
    javax.swing.JPanel jPanel55;
    javax.swing.JPanel jPanel56;
    javax.swing.JPanel jPanel57;
    javax.swing.JPanel jPanel58;
    javax.swing.JPanel jPanel59;
    javax.swing.JPanel jPanel6;
    javax.swing.JPanel jPanel60;
    javax.swing.JPanel jPanel61;
    javax.swing.JPanel jPanel62;
    javax.swing.JPanel jPanel63;
    javax.swing.JPanel jPanel64;
    javax.swing.JPanel jPanel65;
    javax.swing.JPanel jPanel66;
    javax.swing.JPanel jPanel67;
    javax.swing.JPanel jPanel7;
    javax.swing.JPanel jPanel8;
    javax.swing.JPanel jPanel9;
    javax.swing.JRadioButton jRadioButton1;
    javax.swing.JRadioButton jRadioButton2;
    javax.swing.JRadioButton jRadioButton3;
    javax.swing.JRadioButton jRadioButton4;
    javax.swing.JRadioButton jRadioButton5;
    javax.swing.JScrollPane jScrollPane1;
    javax.swing.JScrollPane jScrollPane10;
    javax.swing.JScrollPane jScrollPane11;
    javax.swing.JScrollPane jScrollPane12;
    javax.swing.JScrollPane jScrollPane13;
    javax.swing.JScrollPane jScrollPane14;
    javax.swing.JScrollPane jScrollPane15;
    javax.swing.JScrollPane jScrollPane16;
    javax.swing.JScrollPane jScrollPane17;
    javax.swing.JScrollPane jScrollPane18;
    javax.swing.JScrollPane jScrollPane19;
    javax.swing.JScrollPane jScrollPane2;
    javax.swing.JScrollPane jScrollPane20;
    javax.swing.JScrollPane jScrollPane21;
    javax.swing.JScrollPane jScrollPane22;
    javax.swing.JScrollPane jScrollPane23;
    javax.swing.JScrollPane jScrollPane24;
    javax.swing.JScrollPane jScrollPane25;
    javax.swing.JScrollPane jScrollPane26;
    javax.swing.JScrollPane jScrollPane27;
    javax.swing.JScrollPane jScrollPane28;
    javax.swing.JScrollPane jScrollPane29;
    javax.swing.JScrollPane jScrollPane3;
    javax.swing.JScrollPane jScrollPane30;
    javax.swing.JScrollPane jScrollPane31;
    javax.swing.JScrollPane jScrollPane32;
    javax.swing.JScrollPane jScrollPane33;
    javax.swing.JScrollPane jScrollPane34;
    javax.swing.JScrollPane jScrollPane35;
    javax.swing.JScrollPane jScrollPane36;
    javax.swing.JScrollPane jScrollPane38;
    javax.swing.JScrollPane jScrollPane39;
    javax.swing.JScrollPane jScrollPane4;
    javax.swing.JScrollPane jScrollPane40;
    javax.swing.JScrollPane jScrollPane41;
    javax.swing.JScrollPane jScrollPane42;
    javax.swing.JScrollPane jScrollPane43;
    javax.swing.JScrollPane jScrollPane44;
    javax.swing.JScrollPane jScrollPane45;
    javax.swing.JScrollPane jScrollPane46;
    javax.swing.JScrollPane jScrollPane47;
    javax.swing.JScrollPane jScrollPane48;
    javax.swing.JScrollPane jScrollPane49;
    javax.swing.JScrollPane jScrollPane5;
    javax.swing.JScrollPane jScrollPane50;
    javax.swing.JScrollPane jScrollPane51;
    javax.swing.JScrollPane jScrollPane52;
    javax.swing.JScrollPane jScrollPane53;
    javax.swing.JScrollPane jScrollPane54;
    javax.swing.JScrollPane jScrollPane55;
    javax.swing.JScrollPane jScrollPane56;
    javax.swing.JScrollPane jScrollPane57;
    javax.swing.JScrollPane jScrollPane58;
    javax.swing.JScrollPane jScrollPane59;
    javax.swing.JScrollPane jScrollPane6;
    javax.swing.JScrollPane jScrollPane60;
    javax.swing.JScrollPane jScrollPane61;
    javax.swing.JScrollPane jScrollPane62;
    javax.swing.JScrollPane jScrollPane7;
    javax.swing.JScrollPane jScrollPane8;
    javax.swing.JScrollPane jScrollPane9;
    javax.swing.JSeparator jSeparator1;
    javax.swing.JTabbedPane jTabbedPane1;
    javax.swing.JTable jTable1;
    javax.swing.JTable jTable10;
    javax.swing.JTable jTable11;
    javax.swing.JTable jTable12;
    javax.swing.JTable jTable13;
    javax.swing.JTable jTable14;
    javax.swing.JTable jTable15;
    javax.swing.JTable jTable16;
    javax.swing.JTable jTable17;
    javax.swing.JTable jTable18;
    javax.swing.JTable jTable19;
    javax.swing.JTable jTable2;
    javax.swing.JTable jTable20;
    javax.swing.JTable jTable21;
    javax.swing.JTable jTable22;
    javax.swing.JTable jTable23;
    javax.swing.JTable jTable24;
    javax.swing.JTable jTable25;
    javax.swing.JTable jTable26;
    javax.swing.JTable jTable27;
    javax.swing.JTable jTable28;
    javax.swing.JTable jTable29;
    javax.swing.JTable jTable3;
    javax.swing.JTable jTable30;
    javax.swing.JTable jTable31;
    javax.swing.JTable jTable32;
    javax.swing.JTable jTable33;
    javax.swing.JTable jTable34;
    javax.swing.JTable jTable35;
    javax.swing.JTable jTable36;
    javax.swing.JTable jTable37;
    javax.swing.JTable jTable38;
    javax.swing.JTable jTable39;
    javax.swing.JTable jTable4;
    javax.swing.JTable jTable40;
    javax.swing.JTable jTable41;
    javax.swing.JTable jTable5;
    javax.swing.JTable jTable6;
    javax.swing.JTable jTable7;
    javax.swing.JTable jTable8;
    javax.swing.JTable jTable9;
    javax.swing.JTextArea jTextArea1;
    javax.swing.JTextArea jTextArea11;
    javax.swing.JTextArea jTextArea12;
    javax.swing.JTextArea jTextArea13;
    javax.swing.JTextArea jTextArea14;
    javax.swing.JTextArea jTextArea16;
    javax.swing.JTextArea jTextArea17;
    javax.swing.JTextArea jTextArea18;
    javax.swing.JTextArea jTextArea2;
    javax.swing.JTextArea jTextArea3;
    javax.swing.JTextArea jTextArea4;
    javax.swing.JTextArea jTextArea5;
    javax.swing.JTextArea jTextArea6;
    javax.swing.JTextArea jTextArea7;
    javax.swing.JTextArea jTextArea8;
    javax.swing.JTextArea jTextArea9;
    javax.swing.JTextField jTextField1;
    javax.swing.JTextField jTextField10;
    javax.swing.JTextField jTextField106;
    javax.swing.JTextField jTextField107;
    javax.swing.JTextField jTextField108;
    javax.swing.JTextField jTextField11;
    javax.swing.JTextField jTextField111;
    javax.swing.JTextField jTextField112;
    javax.swing.JTextField jTextField113;
    javax.swing.JTextField jTextField114;
    javax.swing.JTextField jTextField115;
    javax.swing.JTextField jTextField116;
    javax.swing.JTextField jTextField117;
    javax.swing.JTextField jTextField118;
    javax.swing.JTextField jTextField119;
    javax.swing.JTextField jTextField12;
    javax.swing.JTextField jTextField120;
    javax.swing.JTextField jTextField121;
    javax.swing.JTextField jTextField122;
    javax.swing.JTextField jTextField123;
    javax.swing.JTextField jTextField124;
    javax.swing.JTextField jTextField125;
    javax.swing.JTextField jTextField126;
    javax.swing.JTextField jTextField131;
    javax.swing.JTextField jTextField132;
    javax.swing.JTextField jTextField133;
    javax.swing.JTextField jTextField134;
    javax.swing.JPasswordField jTextField136;
    javax.swing.JTextField jTextField137;
    javax.swing.JTextField jTextField138;
    javax.swing.JPasswordField jTextField139;
    javax.swing.JPasswordField jTextField140;
    javax.swing.JPasswordField jTextField141;
    javax.swing.JPasswordField jTextField142;
    javax.swing.JPasswordField jTextField143;
    javax.swing.JTextField jTextField144;
    javax.swing.JPasswordField jTextField145;
    javax.swing.JTextField jTextField146;
    javax.swing.JPasswordField jTextField147;
    javax.swing.JPasswordField jTextField148;
    javax.swing.JTextField jTextField149;
    javax.swing.JTextField jTextField19;
    javax.swing.JTextField jTextField20;
    javax.swing.JTextField jTextField21;
    javax.swing.JTextField jTextField22;
    javax.swing.JTextField jTextField23;
    javax.swing.JTextField jTextField24;
    javax.swing.JTextField jTextField26;
    javax.swing.JTextField jTextField28;
    javax.swing.JTextField jTextField29;
    javax.swing.JTextField jTextField3;
    javax.swing.JTextField jTextField30;
    javax.swing.JTextField jTextField31;
    javax.swing.JTextField jTextField32;
    javax.swing.JTextField jTextField33;
    javax.swing.JTextField jTextField34;
    javax.swing.JTextField jTextField35;
    javax.swing.JTextField jTextField36;
    javax.swing.JTextField jTextField37;
    javax.swing.JTextField jTextField38;
    javax.swing.JTextField jTextField39;
    javax.swing.JTextField jTextField4;
    javax.swing.JTextField jTextField40;
    javax.swing.JTextField jTextField41;
    javax.swing.JTextField jTextField42;
    javax.swing.JTextField jTextField43;
    javax.swing.JTextField jTextField44;
    javax.swing.JTextField jTextField45;
    javax.swing.JTextField jTextField46;
    javax.swing.JTextField jTextField47;
    javax.swing.JTextField jTextField48;
    javax.swing.JTextField jTextField49;
    javax.swing.JTextField jTextField5;
    javax.swing.JTextField jTextField50;
    javax.swing.JTextField jTextField52;
    javax.swing.JTextField jTextField53;
    javax.swing.JTextField jTextField54;
    javax.swing.JTextField jTextField55;
    javax.swing.JTextField jTextField56;
    javax.swing.JTextField jTextField57;
    javax.swing.JTextField jTextField58;
    javax.swing.JTextField jTextField59;
    javax.swing.JTextField jTextField6;
    javax.swing.JTextField jTextField60;
    javax.swing.JTextField jTextField61;
    javax.swing.JTextField jTextField62;
    javax.swing.JTextField jTextField64;
    javax.swing.JTextField jTextField65;
    javax.swing.JTextField jTextField66;
    javax.swing.JTextField jTextField67;
    javax.swing.JTextField jTextField68;
    javax.swing.JTextField jTextField69;
    javax.swing.JTextField jTextField7;
    javax.swing.JTextField jTextField70;
    javax.swing.JTextField jTextField71;
    javax.swing.JTextField jTextField72;
    javax.swing.JTextField jTextField73;
    javax.swing.JTextField jTextField74;
    javax.swing.JTextField jTextField75;
    javax.swing.JTextField jTextField76;
    javax.swing.JTextField jTextField77;
    javax.swing.JTextField jTextField78;
    javax.swing.JTextField jTextField79;
    javax.swing.JTextField jTextField8;
    javax.swing.JTextField jTextField80;
    javax.swing.JTextField jTextField81;
    javax.swing.JTextField jTextField82;
    javax.swing.JTextField jTextField83;
    javax.swing.JTextField jTextField84;
    javax.swing.JTextField jTextField86;
    javax.swing.JTextField jTextField87;
    javax.swing.JTextField jTextField88;
    javax.swing.JTextField jTextField89;
    javax.swing.JTextField jTextField9;
    javax.swing.JTextField jTextField90;
    javax.swing.JTextField jTextField91;
    javax.swing.JTextField jTextField92;
    javax.swing.JTextField jTextField93;
    javax.swing.JTextField jTextField94;
    javax.swing.JTextField jTextField95;
    javax.swing.JTextField jTextField96;
    javax.swing.JTextField jTextField97;
    javax.swing.JLabel lbl_main_date;
    javax.swing.JLabel lbl_main_time;
    javax.swing.JPanel manueExit;
    javax.swing.JPanel manueMinimize;
    javax.swing.JPanel pnl_addItms;
    javax.swing.JPanel pnl_barcode;
    javax.swing.JPanel pnl_billing;
    javax.swing.JPanel pnl_billingSumm;
    javax.swing.JPanel pnl_hr;
    javax.swing.JPanel pnl_quickBill;
    javax.swing.JPanel pnl_searchItm;
    javax.swing.JPanel pnl_settings;
    javax.swing.JDialog profit;
    javax.swing.JDialog returnItms;
    javax.swing.JDialog serviceAdder;
    javax.swing.JTable tbl_addBillItems;
    javax.swing.JTable tbl_addItems;
    javax.swing.JTable tbl_items_search;
    javax.swing.JTable tbl_items_search1;
    javax.swing.JTextField txt_add_itemName;
    javax.swing.JTextField txt_add_packSize;
    javax.swing.JTextField txt_add_qty;
    javax.swing.JTextField txt_add_qty1;
    javax.swing.JTextField txt_add_qty2;
    javax.swing.JTextField txt_add_retailPrice;
    javax.swing.JTextField txt_add_wPrice;
    javax.swing.JTextField txt_edt_company;
    javax.swing.JTextField txt_edt_company1;
    javax.swing.JTextField txt_edt_company2;
    javax.swing.JTextField txt_edt_company3;
    javax.swing.JTextField txt_edt_itemName;
    javax.swing.JTextField txt_edt_packSize;
    javax.swing.JTextField txt_edt_qty;
    javax.swing.JTextField txt_edt_rPrice;
    javax.swing.JTextField txt_edt_wPrice;
    javax.swing.JTextField txt_search_bill_itm;
    javax.swing.JTextField txt_search_bill_itm1;
    javax.swing.JTextField txt_search_bill_itm2;
    javax.swing.JTextField txt_search_text;
    javax.swing.JTextField txt_search_text1;
    javax.swing.JTextField txt_search_text2;
    javax.swing.JTextField txt_search_text3;
    javax.swing.JTextField txt_search_text4;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icons8_e_32.png")));
    }

    private void setCashBalance() {
        cashBalancing crr = new cashBalancing();
        
        Date d = new Date();
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String da = sdf1.format(d);
        
        double creditedAmt = crr.calculateCreditedMoney(da);
        double debitedAmt = crr.calculateDebitedMoney(da);
        
        double dayllyBalance = (debitedAmt - creditedAmt);
        
        this.jLabel196.setText(String.valueOf(dayllyBalance));
    }
    
    private void setItemTypes() {
        String sdds= "select * from item_typs";
        com_box_searchTyp1.removeAllItems();
        try{
            Statement stmnt = conn.createStatement();
            ResultSet rss = stmnt.executeQuery(sdds);      
            while(rss.next()){
                com_box_searchTyp1.addItem(rss.getString("type_name"));
            }
            
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
        
    }
    
    private void setJobTypes() {
        String sddss= "select * from job_typs";
        jComboBox4.removeAllItems();
        try{
            Statement stmnt = conn.createStatement();
            ResultSet rssd = stmnt.executeQuery(sddss);      
            while(rssd.next()){
                jComboBox4.addItem(rssd.getString("type_namee"));
            }
            
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
        
    }
    
    public void UpdateBillPrices(){
        items_add_to_bill iii122544 = new items_add_to_bill(); 
        String ProccessingBillID = this.jLabel229.getText();
        
        double tot = Double.parseDouble(this.jTextField115.getText());
        int disd = Integer.parseInt(this.jTextField117.getText());
        double netAmt = Double.parseDouble(this.jTextField118.getText());
        int itmCountd = jTable19.getRowCount();
        iii122544.updateBillWithPrices(tot, disd, netAmt, itmCountd, ProccessingBillID, editEnvoice);
    }
    
    
    
//    private void setJobTypes() {
//        String sddss= "select * from job_typs";
//        jComboBox4.removeAllItems();
//        try{
//            Statement stmnt = conn.createStatement();
//            ResultSet rssd = stmnt.executeQuery(sddss);      
//            while(rssd.next()){
//                jComboBox4.addItem(rssd.getString("type_namee"));
//            }
//            
//        }
//        catch(Exception ex){
//            ex.printStackTrace();
//        }
//        
//    }
                    
     public double calculateCreditAmtByCustomer(String custID){
        double calCred = 0;
        String id = null;
        id = custID;
        try{
            Statement stmnt5 = conn.createStatement();
            ResultSet rs = stmnt5.executeQuery("SELECT SUM(dueAmt) FROM creditedinvoices where cust_id='"+id+"'");
            while(rs.next()){
                calCred = rs.getDouble("SUM(dueAmt)");
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
       
        return calCred;
    }
     
    private void setNewCreditValue(double creditSum, String custIDD) {
        String sddssf= "update customers set credit_bal = ? where cust_id = ?";  
        try{
            PreparedStatement pstw = conn.prepareStatement(sddssf);  
                pstw.setDouble(1, creditSum);
                pstw.setString(2, custIDD);
                pstw.executeUpdate();     
        }
        catch(Exception ex){
            ex.printStackTrace();
        }        
    }
    
    public String getCustIDFromCrediID(String cIID){
        String calCred = "";
        String id = null;
        id = cIID;
        try{
            Statement stmnt5d = conn.createStatement();
            ResultSet rsf = stmnt5d.executeQuery("SELECT cust_id FROM creditedinvoices where cdID='"+id+"'");
            while(rsf.next()){
                calCred = rsf.getString("cust_id");
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
       
        return calCred;
    }
    
    public void saveInvoiceDiscriptionForNewInvoices(String dis, String invoID){
        items_add_to_bill jjuu = new items_add_to_bill();
        
        jjuu.addInvoiceDiscription(invoID, dis, "", "", this);
    }
    
    public void updateInvoiceDiscriptionForWarranty(String dis, String invoID){
        items_add_to_bill jjuutt = new items_add_to_bill();
        
        jjuutt.updateInvoiceDiscriptionByWarrantyDiscription(invoID, dis);
    }
    
    public void updateInvoiceDiscriptionForReturn(String dis, String invoID){
        items_add_to_bill jjuut = new items_add_to_bill();
        
        jjuut.updateInvoiceDiscriptionByReturnDiscription(invoID, dis);
    }
    
    public String updateInvoiceDiscription(String billID){
        items_add_to_bill ffgg = new items_add_to_bill(); 
        
        String initialDis = ffgg.getInitialDis(billID);
        String warrantyDis = ffgg.getWarrantylDis(billID);
        String returnlDis = ffgg.getReturnlDis(billID);
        
        String fullDis = initialDis.concat("\n").concat(warrantyDis).concat("\n").concat(returnlDis);
        
        try {
            String queryyy = "update bill set bill_discrip=? where bill_id = ?";
            PreparedStatement pstlu = conn.prepareStatement(queryyy);

            pstlu.setString(1, fullDis);
            pstlu.setString(2, billID);
            pstlu.executeUpdate();
            
            return "OK";

        } catch (SQLException ex) {
            ex.printStackTrace();
            return null;
        }
        
    }
    
    
    public String getBillItemSN(String billItemID){
        
        String sb = "";
        ArrayList<String> SNlist=new ArrayList<>();
        String id = null;
        id = billItemID;
        try{
            Statement stmnt5d = conn.createStatement();
            ResultSet rsfs = stmnt5d.executeQuery("SELECT snn FROM bill_sub_items where bill_item_id='"+id+"'");
            int j = 0;
            while(rsfs.next()){
                SNlist.add(rsfs.getString("snn"));
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
        System.out.println(SNlist.size());
        
        for (String s : SNlist)
        {
            sb += s + ", ";
        }

        return sb;
    }
    
    public String getAllWarrantyNotices(String billID){
        
        String sb = "";
        ArrayList<String> NoteList=new ArrayList<>();
        String id = null;
        id = billID;
        try{
            Statement stmnt5d = conn.createStatement();
            ResultSet rsfs = stmnt5d.executeQuery("SELECT notee FROM warranty where invoID='"+id+"'");
            while(rsfs.next()){
                NoteList.add(rsfs.getString("notee"));
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
        System.out.println(NoteList.size());
        
        for (String s : NoteList)
        {
            sb += s + "\n";
        }

        return sb;
    }
    
    public double calculateBillItemValue(int qttty, double r_pprice){
        double Value= qttty * r_pprice;
        
        return Value;
    }
    
    public double calculateBillItemCostValue(int qttty, double w_pprice){
        double CostValue= qttty * w_pprice;
        
        return CostValue;
    }
    
    private void tableColumnSettings(){
        TableColumn col2 = jTable16.getColumnModel().getColumn(1);   
        col2.setPreferredWidth(300);
    }
    
    
        
    public void calculateBillItemValue(){
        Date d = new Date();
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String da = sdf1.format(d);
        
        cashBalancing rrtt = new cashBalancing();
        double dailyTotal = rrtt.calculateInvoiceTotalForDay(da);
         
         this.jLabel140.setText(String.valueOf(dailyTotal).concat("/="));
    }    
//    private void checkCustomerCrediteBal() {
//        
//    }
//
//    private double getPendingCreditInvo(String cusID) {
//        String kkk[]=null;
//        String[] testArray = null;
//        String amt=null;
//        String id = null; 
//        id = cusID;
//        try{
//            double camt = 0;
//            String idd = null;
//            double tems = 0;
//            Statement stmnt = conn.createStatement();
//            ResultSet rss = stmnt.executeQuery("select creditCodeChequeCode from bill where status='PENDING' and (invoiceType='Credit' or invoiceType='Credit Advanced') and cust_id='"+id+"'");
//            //return rss;        
//            while(rss.next()){
//                amt = String.valueOf(rss.getObject("creditCodeChequeCode"));
//                System.out.println(amt);
//                System.out.println("----------------");
//                this.jTextArea2.setText(amt);
//            }
//            
//            
//            String pool[] = amt.split("\n");
//            System.out.println("----------------------------");
//            System.out.println(pool[0]);
//            System.out.println(pool[1]);
//            System.out.println("----------------------------");
//            System.out.println(pool.length);
//            for(int i=0; i<=pool.length; i++){
//                try{
//                    Statement stmntt = conn.createStatement();
//                    ResultSet rssh = stmntt.executeQuery("select dueAmt from creditedinvoices where cdID='"+pool[i]+"'");
//                    while(rssh.next()){
//                        camt = rssh.getDouble("dueAmt");    
//                    }
//                }
//                catch(Exception e){
//                    e.printStackTrace();
//                }
//                tems =tems + camt;
//                System.out.println(tems);
//            }
//            return tems;
//        }
//        catch(Exception e){
//            e.printStackTrace();
//            return 0;
//        } 
//    }    
}
